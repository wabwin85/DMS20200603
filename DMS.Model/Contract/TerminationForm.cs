/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : TerminationForm
 * Created Time: 2013/12/19 10:52:41
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	TerminationForm
	/// </summary>
	[Serializable]
	public class TerminationForm
	{
        #region Private Members 43

        private Guid _tf_id;
        private Guid _tf_cm_id;
        private Guid _tf_dma_id;
        private bool? _tf_head_parm1;
        private bool? _tf_head_parm2;
        private bool? _tf_head_parm3;
        private bool? _tf_head_parm4;
        private bool? _tf_head_parm5;
        private string _tf_company_name;
        private string _tf_country;
        private string _tf_isexclusive;
        private DateTime? _tf_expirationdate;
        private DateTime? _tf_termination_effectivedate;
        private bool? _tf_reason_accrec;
        private bool? _tf_reason_notquota;
        private bool? _tf_reason_pldis;
        private bool? _tf_reason_other;
        private string _tf_reason_otherreasons;
        private string _tf_reasons;
        private decimal? _tf_outstandingamount;
        private decimal? _tf_quotaamount;
        private decimal? _tf_actualsales;
        private decimal? _tf_goodsamount;
        private bool? _tf_hasrgaattached;
        private bool? _tf_isoutstandingtenders;
        private string _tf_posttermination;
        private bool? _tf_duepayment;
        private decimal? _tf_creditamount;
        private bool? _tf_isbankguarantee;
        private decimal? _tf_guaranteeamount;
        private bool? _tf_isreserve;
        private decimal? _tf_reserveamount;
        private decimal? _tf_settlement;
        private decimal? _tf_writeoff;
        private string _tf_reservetype;
        private string _tf_rsm_printname;
        private DateTime? _tf_rsm_date;
        private string _tf_fm_printname;
        private DateTime? _tf_fm_date;
        private string _tf_vpfinance_printname;
        private DateTime? _tf_vpfinance_date;
        private string _tf_vp_printname;
        private DateTime? _tf_vp_date;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public TerminationForm()
        {
            _tf_id = Guid.Empty;
            _tf_cm_id = Guid.Empty;
            _tf_dma_id = Guid.Empty;
            _tf_head_parm1 = null;
            _tf_head_parm2 = null;
            _tf_head_parm3 = null;
            _tf_head_parm4 = null;
            _tf_head_parm5 = null;
            _tf_company_name = null;
            _tf_country = null;
            _tf_isexclusive = null;
            _tf_expirationdate = null;
            _tf_termination_effectivedate = null;
            _tf_reason_accrec = null;
            _tf_reason_notquota = null;
            _tf_reason_pldis = null;
            _tf_reason_other = null;
            _tf_reason_otherreasons = null;
            _tf_reasons = null;
            _tf_outstandingamount = null;
            _tf_quotaamount = null;
            _tf_actualsales = null;
            _tf_goodsamount = null;
            _tf_hasrgaattached = null;
            _tf_isoutstandingtenders = null;
            _tf_posttermination = null;
            _tf_duepayment = null;
            _tf_creditamount = null;
            _tf_isbankguarantee = null;
            _tf_guaranteeamount = null;
            _tf_isreserve = null;
            _tf_reserveamount = null;
            _tf_settlement = null;
            _tf_writeoff = null;
            _tf_reservetype = null;
            _tf_rsm_printname = null;
            _tf_rsm_date = null;
            _tf_fm_printname = null;
            _tf_fm_date = null;
            _tf_vpfinance_printname = null;
            _tf_vpfinance_date = null;
            _tf_vp_printname = null;
            _tf_vp_date = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// TF_ID
        /// </summary>		
        public Guid TfId
        {
            get { return _tf_id; }
            set { _tf_id = value; }
        }

        /// <summary>
        /// TF_CM_ID
        /// </summary>		
        public Guid TfCmId
        {
            get { return _tf_cm_id; }
            set { _tf_cm_id = value; }
        }

        /// <summary>
        /// TF_DMA_ID
        /// </summary>		
        public Guid TfDmaId
        {
            get { return _tf_dma_id; }
            set { _tf_dma_id = value; }
        }

        /// <summary>
        /// Non-Renewal/Termination Internal Approval Form (Section 7) prepared and routed for signature
        /// </summary>		
        public bool? TfHeadParm1
        {
            get { return _tf_head_parm1; }
            set { _tf_head_parm1 = value; }
        }

        /// <summary>
        /// Have you notified Global Compliance and your Legal Department of proposed severance of relationship?
        /// </summary>		
        public bool? TfHeadParm2
        {
            get { return _tf_head_parm2; }
            set { _tf_head_parm2 = value; }
        }

        /// <summary>
        /// Confirm if Oral or Written Notice of Non-renewal or termination has been provided to Third Party
        /// </summary>		
        public bool? TfHeadParm3
        {
            get { return _tf_head_parm3; }
            set { _tf_head_parm3 = value; }
        }

        /// <summary>
        /// Will a Settlement Agreement be required?
        /// </summary>		
        public bool? TfHeadParm4
        {
            get { return _tf_head_parm4; }
            set { _tf_head_parm4 = value; }
        }

        /// <summary>
        /// Will there be any Payments to Third Party (settlement amounts )or write-off of debt booked to reserve.?
        /// </summary>		
        public bool? TfHeadParm5
        {
            get { return _tf_head_parm5; }
            set { _tf_head_parm5 = value; }
        }

        /// <summary>
        /// Third Party Name
        /// </summary>		
        public string TfCompanyName
        {
            get { return _tf_company_name; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for TfCompanyName", value, value.ToString());

                _tf_company_name = value;
            }
        }

        /// <summary>
        /// Country
        /// </summary>		
        public string TfCountry
        {
            get { return _tf_country; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for TfCountry", value, value.ToString());

                _tf_country = value;
            }
        }

        /// <summary>
        /// TF_IsExclusive
        /// </summary>		
        public string TfIsExclusive
        {
            get { return _tf_isexclusive; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for TfIsExclusive", value, value.ToString());

                _tf_isexclusive = value;
            }
        }

        /// <summary>
        /// TF_ExpirationDate
        /// </summary>		
        public DateTime? TfExpirationDate
        {
            get { return _tf_expirationdate; }
            set { _tf_expirationdate = value; }
        }

        /// <summary>
        /// TF_Termination_EffectiveDate
        /// </summary>		
        public DateTime? TfTerminationEffectiveDate
        {
            get { return _tf_termination_effectivedate; }
            set { _tf_termination_effectivedate = value; }
        }

        /// <summary>
        /// TF_Reason_AccRec
        /// </summary>		
        public bool? TfReasonAccRec
        {
            get { return _tf_reason_accrec; }
            set { _tf_reason_accrec = value; }
        }

        /// <summary>
        /// TF_Reason_NotQuota
        /// </summary>		
        public bool? TfReasonNotQuota
        {
            get { return _tf_reason_notquota; }
            set { _tf_reason_notquota = value; }
        }

        /// <summary>
        /// TF_Reason_PlDis
        /// </summary>		
        public bool? TfReasonPlDis
        {
            get { return _tf_reason_pldis; }
            set { _tf_reason_pldis = value; }
        }

        /// <summary>
        /// TF_Reason_Other
        /// </summary>		
        public bool? TfReasonOther
        {
            get { return _tf_reason_other; }
            set { _tf_reason_other = value; }
        }

        /// <summary>
        /// Reason for Non-Renewal or Termination
        /// </summary>		
        public string TfReasonOtherReasons
        {
            get { return _tf_reason_otherreasons; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for TfReasonOtherReasons", value, value.ToString());

                _tf_reason_otherreasons = value;
            }
        }

        /// <summary>
        /// TF_Reasons
        /// </summary>		
        public string TfReasons
        {
            get { return _tf_reasons; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for TfReasons", value, value.ToString());

                _tf_reasons = value;
            }
        }

        /// <summary>
        /// TF_OutstandingAmount
        /// </summary>		
        public decimal? TfOutstandingAmount
        {
            get { return _tf_outstandingamount; }
            set { _tf_outstandingamount = value; }
        }

        /// <summary>
        /// TF_QuotaAmount
        /// </summary>		
        public decimal? TfQuotaAmount
        {
            get { return _tf_quotaamount; }
            set { _tf_quotaamount = value; }
        }

        /// <summary>
        /// TF_ActualSales
        /// </summary>		
        public decimal? TfActualSales
        {
            get { return _tf_actualsales; }
            set { _tf_actualsales = value; }
        }

        /// <summary>
        /// TF_GoodsAmount
        /// </summary>		
        public decimal? TfGoodsAmount
        {
            get { return _tf_goodsamount; }
            set { _tf_goodsamount = value; }
        }

        /// <summary>
        /// List of RGA Products Attached
        /// </summary>		
        public bool? TfHasrgaAttached
        {
            get { return _tf_hasrgaattached; }
            set { _tf_hasrgaattached = value; }
        }

        /// <summary>
        /// Does the Third Party have any outstanding tenders
        /// </summary>		
        public bool? TfIsOutstandingTenders
        {
            get { return _tf_isoutstandingtenders; }
            set { _tf_isoutstandingtenders = value; }
        }

        /// <summary>
        /// TF_PostTermination
        /// </summary>		
        public string TfPostTermination
        {
            get { return _tf_posttermination; }
            set
            {
                if (value != null && value.Length > 4000)
                    throw new ArgumentOutOfRangeException("Invalid value for TfPostTermination", value, value.ToString());

                _tf_posttermination = value;
            }
        }

        /// <summary>
        /// Will a Payment be Due to the Third Party
        /// </summary>		
        public bool? TfDuePayment
        {
            get { return _tf_duepayment; }
            set { _tf_duepayment = value; }
        }

        /// <summary>
        /// TF_CreditAmount
        /// </summary>		
        public decimal? TfCreditAmount
        {
            get { return _tf_creditamount; }
            set { _tf_creditamount = value; }
        }

        /// <summary>
        /// TF_IsBankGuarantee
        /// </summary>		
        public bool? TfIsBankGuarantee
        {
            get { return _tf_isbankguarantee; }
            set { _tf_isbankguarantee = value; }
        }

        /// <summary>
        /// TF_GuaranteeAmount
        /// </summary>		
        public decimal? TfGuaranteeAmount
        {
            get { return _tf_guaranteeamount; }
            set { _tf_guaranteeamount = value; }
        }

        /// <summary>
        /// TF_IsReserve
        /// </summary>		
        public bool? TfIsReserve
        {
            get { return _tf_isreserve; }
            set { _tf_isreserve = value; }
        }

        /// <summary>
        /// TF_ReserveAmount
        /// </summary>		
        public decimal? TfReserveAmount
        {
            get { return _tf_reserveamount; }
            set { _tf_reserveamount = value; }
        }

        /// <summary>
        /// TF_Settlement
        /// </summary>		
        public decimal? TfSettlement
        {
            get { return _tf_settlement; }
            set { _tf_settlement = value; }
        }

        /// <summary>
        /// TF_WriteOff
        /// </summary>		
        public decimal? TfWriteOff
        {
            get { return _tf_writeoff; }
            set { _tf_writeoff = value; }
        }

        /// <summary>
        /// TF_ReserveType
        /// </summary>		
        public string TfReserveType
        {
            get { return _tf_reservetype; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for TfReserveType", value, value.ToString());

                _tf_reservetype = value;
            }
        }

        /// <summary>
        /// TF_RSM_PrintName
        /// </summary>		
        public string TfRsmPrintName
        {
            get { return _tf_rsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for TfRsmPrintName", value, value.ToString());

                _tf_rsm_printname = value;
            }
        }

        /// <summary>
        /// TF_RSM_Date
        /// </summary>		
        public DateTime? TfRsmDate
        {
            get { return _tf_rsm_date; }
            set { _tf_rsm_date = value; }
        }

        /// <summary>
        /// TF_FM_PrintName
        /// </summary>		
        public string TfFmPrintName
        {
            get { return _tf_fm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for TfFmPrintName", value, value.ToString());

                _tf_fm_printname = value;
            }
        }

        /// <summary>
        /// TF_FM_Date
        /// </summary>		
        public DateTime? TfFmDate
        {
            get { return _tf_fm_date; }
            set { _tf_fm_date = value; }
        }

        /// <summary>
        /// TF_VPFinance_PrintName
        /// </summary>		
        public string TfVpFinancePrintName
        {
            get { return _tf_vpfinance_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for TfVpFinancePrintName", value, value.ToString());

                _tf_vpfinance_printname = value;
            }
        }

        /// <summary>
        /// TF_VPFinance_Date
        /// </summary>		
        public DateTime? TfVpFinanceDate
        {
            get { return _tf_vpfinance_date; }
            set { _tf_vpfinance_date = value; }
        }

        /// <summary>
        /// TF_VP_PrintName
        /// </summary>		
        public string TfVpPrintName
        {
            get { return _tf_vp_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for TfVpPrintName", value, value.ToString());

                _tf_vp_printname = value;
            }
        }

        /// <summary>
        /// TF_VP_Date
        /// </summary>		
        public DateTime? TfVpDate
        {
            get { return _tf_vp_date; }
            set { _tf_vp_date = value; }
        }




        #endregion 
		
	}
}
