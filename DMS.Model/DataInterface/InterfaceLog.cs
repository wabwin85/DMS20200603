/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceLog
 * Created Time: 2013/7/12 14:48:25
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	InterfaceLog
	/// </summary>
	[Serializable]
	public class InterfaceLog : BaseModel
	{
		#region Private Members 9
		
		private Guid _id; 
		private string _name; 
		private DateTime? _starttime; 
		private DateTime? _endtime; 
		private string _status; 
		private string _filename; 
		private string _message; 
		private string _clientid; 
		private string _batchnbr; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public InterfaceLog()
		{
			_id = Guid.Empty; 
			_name = null; 
			_starttime = null;
			_endtime = null;
			_status = null; 
			_filename = null; 
			_message = null; 
			_clientid = null; 
			_batchnbr = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 接口日志主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 接口名称
		/// </summary>		
		public string Name
		{
			get { return _name; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Name", value, value.ToString());
				
				_name = value;
			}
		}
			
		/// <summary>
		/// 开始时间
		/// </summary>		
		public DateTime? StartTime
		{
			get { return _starttime; }
			set { _starttime = value; }
		}
			
		/// <summary>
		/// 结束时间
		/// </summary>		
		public DateTime? EndTime
		{
			get { return _endtime; }
			set { _endtime = value; }
		}
			
		/// <summary>
		/// 执行状态
		/// </summary>		
		public string Status
		{
			get { return _status; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());
				
				_status = value;
			}
		}
			
		/// <summary>
		/// 相关文件物理路径
		/// </summary>		
		public string FileName
		{
			get { return _filename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());
				
				_filename = value;
			}
		}
			
		/// <summary>
		/// 执行结果消息
		/// </summary>		
		public string Message
		{
			get { return _message; }
            set { _message = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Clientid
		{
			get { return _clientid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());
				
				_clientid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string BatchNbr
		{
			get { return _batchnbr; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());
				
				_batchnbr = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
