/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : Cfn
 * Created Time: 2009-7-9 11:31:09
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	Cfn
    /// </summary>
    [Serializable]
    public class Cfn : BaseModel
    {
        #region Private Members

        private Guid _id;
        private string _englishname;
        private string _chinesename;
        private bool? _implant;
        private bool? _tool;
        private bool? _share;
        private string _description;
        private string _customerfacenbr;
        private Guid? _productcatagory_pct_id;
        private string _property1;
        private string _property2;
        private string _property3;
        private string _property4;
        private string _property5;
        private string _property6;
        private string _property7;
        private string _property8;
        private Guid? _productline_bum_id;
        private string _pctname;
        private string _pctenglishname;
        private string _productlinename;
        private Guid? _cfn_lastmodifiedby_usr_userid;
        private bool? _deleteflag;
        private string _level2code;
        private string _erpcode;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public Cfn()
        {
            _id = new Guid();
            _englishname = null;
            _chinesename = null;
            _implant = null;
            _tool = null;
            _share = null;
            _description = null;
            _customerfacenbr = null;
            _productcatagory_pct_id = null;
            _property1 = null;
            _property2 = null;
            _property3 = null;
            _property4 = null;
            _property5 = null;
            _property6 = null;
            _property7 = null;
            _property8 = null;
            _productline_bum_id = null;
            _pctname = null;
            _pctenglishname = null;
            _productlinename = null;
            _cfn_lastmodifiedby_usr_userid = null;
            _deleteflag = false;
            _level2code = null;
            _erpcode = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string EnglishName
        {
            get { return _englishname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for EnglishName", value, value.ToString());

                _englishname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ChineseName
        {
            get { return _chinesename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ChineseName", value, value.ToString());

                _chinesename = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? Implant
        {
            get { return _implant; }
            set { _implant = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? Tool
        {
            get { return _tool; }
            set { _tool = value; }
        }


        /// <summary>
        /// 
        /// </summary>		
        public bool? Share
        {
            get { return _share; }
            set { _share = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Description
        {
            get { return _description; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Description", value, value.ToString());

                _description = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		
        public string CustomerFaceNbr
        {
            get { return _customerfacenbr; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CustomerFaceNbr", value, value.ToString());

                _customerfacenbr = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductCatagoryPctId
        {
            get { return _productcatagory_pct_id; }
            set { _productcatagory_pct_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property1
        {
            get { return _property1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property1", value, value.ToString());

                _property1 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property2
        {
            get { return _property2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property2", value, value.ToString());

                _property2 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property3
        {
            get { return _property3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property3", value, value.ToString());

                _property3 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property4
        {
            get { return _property4; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property4", value, value.ToString());

                _property4 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property5
        {
            get { return _property5; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property5", value, value.ToString());

                _property5 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property6
        {
            get { return _property6; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property6", value, value.ToString());

                _property6 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property7
        {
            get { return _property7; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property7", value, value.ToString());

                _property7 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Property8
        {
            get { return _property8; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Property8", value, value.ToString());

                _property8 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PCTName
        {
            get { return _pctname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PctName", value, value.ToString());

                _pctname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PCTEnglishName
        {
            get { return _pctenglishname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PctName", value, value.ToString());

                _pctenglishname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductLineName
        {
            get { return _productlinename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductLineName", value, value.ToString());

                _productlinename = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductLineBumId
        {
            get { return _productline_bum_id; }
            set { _productline_bum_id = value; }
        }

        public Guid? CFNLastModifiedByUsrUserId
        {
            get { return _cfn_lastmodifiedby_usr_userid; }
            set { _cfn_lastmodifiedby_usr_userid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? DeleteFlag
        {
            get { return _deleteflag; }
            set { _deleteflag = value; }
        }


        public string Level2Code
        {
            get { return _level2code; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Level2Code", value, value.ToString());

                _level2code = value;
            }
        }
        /// <summary>
        /// 金蝶ERP编码用于推送订单数据
        /// </summary>
        public string ERPCode
        {
            get { return _erpcode; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for ERPCode", value, value.ToString());

                _erpcode = value;
            }
        }
        #endregion





    }
}
