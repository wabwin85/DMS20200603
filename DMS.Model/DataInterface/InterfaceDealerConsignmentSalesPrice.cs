/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceDealerConsignmentSalesPrice
 * Created Time: 2014/5/30 14:00:16
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	InterfaceDealerConsignmentSalesPrice
	/// </summary>
	[Serializable]
	public class InterfaceDealerConsignmentSalesPrice : BaseModel
	{
		#region Private Members 15
		
		private Guid _id; 
		private string _salesno; 
		private string _orderno; 
		private DateTime? _confirmdate; 
		private string _remark; 
		private int _linenbr; 
		private string _filename; 
		private DateTime _importdate; 
		private string _clientid; 
		private string _batchnbr; 
		private string _upn; 
		private string _lot; 
		private decimal? _qty; 
		private decimal? _unitprice; 
		private string _problemdescription; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public InterfaceDealerConsignmentSalesPrice()
		{
			_id = Guid.Empty; 
			_salesno = null; 
			_orderno = null; 
			_confirmdate = null;
			_remark = null; 
			_linenbr = 0; 
			_filename = null; 
			_importdate = new DateTime(); 
			_clientid = null; 
			_batchnbr = null; 
			_upn = null; 
			_lot = null; 
			_qty = null;
			_unitprice = null;
			_problemdescription = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 销售出库单编号
		/// </summary>		
		public string SalesNo
		{
			get { return _salesno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SalesNo", value, value.ToString());
				
				_salesno = value;
			}
		}
			
		/// <summary>
		/// 销售出库单对应的寄售销售订单编号
		/// </summary>		
		public string OrderNo
		{
			get { return _orderno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());
				
				_orderno = value;
			}
		}
			
		/// <summary>
		/// 结算确认时间
		/// </summary>		
		public DateTime? ConfirmDate
		{
			get { return _confirmdate; }
			set { _confirmdate = value; }
		}
			
		/// <summary>
		/// 备注
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// 行号
		/// </summary>		
		public int LineNbr
		{
			get { return _linenbr; }
			set { _linenbr = value; }
		}
			
		/// <summary>
		/// 文件名
		/// </summary>		
		public string FileName
		{
			get { return _filename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());
				
				_filename = value;
			}
		}
			
		/// <summary>
		/// 导入时间
		/// </summary>		
		public DateTime ImportDate
		{
			get { return _importdate; }
			set { _importdate = value; }
		}
			
		/// <summary>
		/// 客户端ID
		/// </summary>		
		public string Clientid
		{
			get { return _clientid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());
				
				_clientid = value;
			}
		}
			
		/// <summary>
		/// 处理批次
		/// </summary>		
		public string BatchNbr
		{
			get { return _batchnbr; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());
				
				_batchnbr = value;
			}
		}
			
		/// <summary>
		/// 产品UPN
		/// </summary>		
		public string Upn
		{
			get { return _upn; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());
				
				_upn = value;
			}
		}
			
		/// <summary>
		/// 产品批号
		/// </summary>		
		public string Lot
		{
			get { return _lot; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Lot", value, value.ToString());
				
				_lot = value;
			}
		}
			
		/// <summary>
		/// 产品数量
		/// </summary>		
		public decimal? Qty
		{
			get { return _qty; }
			set { _qty = value; }
		}
			
		/// <summary>
		/// 产品单价
		/// </summary>		
		public decimal? UnitPrice
		{
			get { return _unitprice; }
			set { _unitprice = value; }
		}
			
		/// <summary>
		/// 错误信息
		/// </summary>		
		public string ProblemDescription
		{
			get { return _problemdescription; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ProblemDescription", value, value.ToString());
				
				_problemdescription = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
