/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceqrDealerTransaction
 * Created Time: 2016/1/17 10:57:01
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	InterfaceqrDealerTransaction
    /// </summary>
    [Serializable]
    public class InterfaceqrDealerTransaction : BaseModel
    {
        #region Private Members 17

        private Guid _id;
        private string _dealercode;
        private string _username;
        private DateTime? _uploaddate;
        private string _datatype;
        private string _remark;
        private int? _rowno;
        private string _qrcode;
        private string _upn;
        private string _lot;
        private Guid? _pma_id;
        private Guid? _dma_id;
        private string _filename;
        private DateTime _importdate;
        private string _clientid;
        private string _batchnbr;
        private string _errormsg;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public InterfaceqrDealerTransaction()
        {
            _id = Guid.Empty;
            _dealercode = null;
            _username = null;
            _uploaddate = null;
            _datatype = null;
            _remark = null;
            _rowno = null;
            _qrcode = null;
            _upn = null;
            _lot = null;
            _pma_id = null;
            _dma_id = null;
            _filename = null;
            _importdate = new DateTime();
            _clientid = null;
            _batchnbr = null;
            _errormsg = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 经销商编号
        /// </summary>		
        public string DealerCode
        {
            get { return _dealercode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerCode", value, value.ToString());

                _dealercode = value;
            }
        }

        /// <summary>
        /// 提交人姓名
        /// </summary>		
        public string UserName
        {
            get { return _username; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for UserName", value, value.ToString());

                _username = value;
            }
        }

        /// <summary>
        /// 单据日期
        /// </summary>		
        public DateTime? UploadDate
        {
            get { return _uploaddate; }
            set { _uploaddate = value; }
        }

        /// <summary>
        /// 数据类型
        /// </summary>		
        public string DataType
        {
            get { return _datatype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DataType", value, value.ToString());

                _datatype = value;
            }
        }

        /// <summary>
        /// 备注说明
        /// </summary>		
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());

                _remark = value;
            }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public int? RowNo
        {
            get { return _rowno; }
            set { _rowno = value; }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public string QrCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCode", value, value.ToString());

                _qrcode = value;
            }
        }

        /// <summary>
        /// UPN
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// Lot
        /// </summary>		
        public string Lot
        {
            get { return _lot; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Lot", value, value.ToString());

                _lot = value;
            }
        }

        /// <summary>
        /// 产品ID
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 经销商ID
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 生成文件物理路径（BSC不使用）
        /// </summary>		
        public string FileName
        {
            get { return _filename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());

                _filename = value;
            }
        }

        /// <summary>
        /// 接口获取日期
        /// </summary>		
        public DateTime ImportDate
        {
            get { return _importdate; }
            set { _importdate = value; }
        }

        /// <summary>
        /// 客户端ID
        /// </summary>		
        public string Clientid
        {
            get { return _clientid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());

                _clientid = value;
            }
        }

        /// <summary>
        /// 处理批次
        /// </summary>		
        public string BatchNbr
        {
            get { return _batchnbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());

                _batchnbr = value;
            }
        }

        /// <summary>
        /// 接口处理错误信息
        /// </summary>		
        public string ErrorMsg
        {
            get { return _errormsg; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrorMsg", value, value.ToString());

                _errormsg = value;
            }
        }




        #endregion





    }
}
