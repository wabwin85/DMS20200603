/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProDealerInputUi
 * Created Time: 2016/2/2 19:02:41
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ProDealerInputUi
	/// </summary>
	[Serializable]
	public class ProDealerInputUi : BaseModel
	{
		#region Private Members 5
		
		private int? _policyid; 
		private string _sapcode; 
		private string _dealername; 
		private string _errmsg; 
		private string _curruser; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ProDealerInputUi()
		{
			_policyid = null;
			_sapcode = null; 
			_dealername = null; 
			_errmsg = null; 
			_curruser = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public int? PolicyId
		{
			get { return _policyid; }
			set { _policyid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SapCode
		{
			get { return _sapcode; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SapCode", value, value.ToString());
				
				_sapcode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DealerName
		{
			get { return _dealername; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for DealerName", value, value.ToString());
				
				_dealername = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErrMsg
		{
			get { return _errmsg; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ErrMsg", value, value.ToString());
				
				_errmsg = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CurrUser
		{
			get { return _curruser; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CurrUser", value, value.ToString());
				
				_curruser = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
