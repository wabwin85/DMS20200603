/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DealerInventoryInit
 * Created Time: 2013/8/21 14:40:10
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	DealerInventoryInit
    /// </summary>
    [Serializable]
    public class DealerInventoryInit : BaseModel
    {
        #region Private Members 21

        private Guid _id;
        private Guid _user;
        private DateTime _uploaddate;
        private int _linenbr;
        private string _filename;
        private bool _errorflag;
        private string _errordescription;
        private string _dealersapcode;
        private string _warehouse;
        private Guid? _dma_id;
        private string _lotnumber;
        private Guid? _pma_id;
        private Guid? _whm_id;
        private Guid? _ltm_id;
        private string _qty;
        private string _articlenumber;
        private string _dealersapcode_errmsg;
        private string _warehouse_errmsg;
        private string _articlenumber_errmsg;
        private string _lotnumber_errmsg;
        private string _qty_errmsg;
        private string _period;
        private string _period_errmsg; 	

        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public DealerInventoryInit()
        {
            _id = Guid.Empty;
            _user = Guid.Empty;
            _uploaddate = new DateTime();
            _linenbr = 0;
            _filename = null;
            _errorflag = false;
            _errordescription = null;
            _dealersapcode = null;
            _warehouse = null;
            _dma_id = null;
            _lotnumber = null;
            _pma_id = null;
            _whm_id = null;
            _ltm_id = null;
            _qty = null;
            _articlenumber = null;
            _dealersapcode_errmsg = null;
            _warehouse_errmsg = null;
            _articlenumber_errmsg = null;
            _lotnumber_errmsg = null;
            _qty_errmsg = null;
            _period = null;
            _period_errmsg = null; 
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 上传用户
        /// </summary>		
        public Guid User
        {
            get { return _user; }
            set { _user = value; }
        }

        /// <summary>
        /// 上传时间
        /// </summary>		
        public DateTime UploadDate
        {
            get { return _uploaddate; }
            set { _uploaddate = value; }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public int LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }

        /// <summary>
        /// 文件名
        /// </summary>		
        public string FileName
        {
            get { return _filename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());

                _filename = value;
            }
        }

        /// <summary>
        /// 错误标识
        /// </summary>		
        public bool ErrorFlag
        {
            get { return _errorflag; }
            set { _errorflag = value; }
        }

        /// <summary>
        /// 错误信息
        /// </summary>		
        public string ErrorDescription
        {
            get { return _errordescription; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrorDescription", value, value.ToString());

                _errordescription = value;
            }
        }

        /// <summary>
        /// 经销商编号
        /// </summary>		
        public string DealerSapCode
        {
            get { return _dealersapcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerSapCode", value, value.ToString());

                _dealersapcode = value;
            }
        }

        /// <summary>
        /// 仓库名称
        /// </summary>		
        public string Warehouse
        {
            get { return _warehouse; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Warehouse", value, value.ToString());

                _warehouse = value;
            }
        }

        /// <summary>
        /// 经销商主键
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 产品序列号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 物料主键
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 仓库主键
        /// </summary>		
        public Guid? WhmId
        {
            get { return _whm_id; }
            set { _whm_id = value; }
        }

        /// <summary>
        /// 批次主键
        /// </summary>		
        public Guid? LtmId
        {
            get { return _ltm_id; }
            set { _ltm_id = value; }
        }

        /// <summary>
        /// 数量
        /// </summary>		
        public string Qty
        {
            get { return _qty; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Qty", value, value.ToString());

                _qty = value;
            }
        }

        /// <summary>
        /// 产品型号
        /// </summary>		
        public string ArticleNumber
        {
            get { return _articlenumber; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumber", value, value.ToString());

                _articlenumber = value;
            }
        }

        /// <summary>
        /// 经销商编号错误信息
        /// </summary>		
        public string DealerSapCodeErrMsg
        {
            get { return _dealersapcode_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerSapCodeErrMsg", value, value.ToString());

                _dealersapcode_errmsg = value;
            }
        }

        /// <summary>
        /// 仓库名称错误信息
        /// </summary>		
        public string WarehouseErrMsg
        {
            get { return _warehouse_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for WarehouseErrMsg", value, value.ToString());

                _warehouse_errmsg = value;
            }
        }

        /// <summary>
        /// 产品型号错误信息
        /// </summary>		
        public string ArticleNumberErrMsg
        {
            get { return _articlenumber_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumberErrMsg", value, value.ToString());

                _articlenumber_errmsg = value;
            }
        }

        /// <summary>
        /// 产品序列号错误信息
        /// </summary>		
        public string LotNumberErrMsg
        {
            get { return _lotnumber_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumberErrMsg", value, value.ToString());

                _lotnumber_errmsg = value;
            }
        }

        /// <summary>
        /// 数量错误信息
        /// </summary>		
        public string QtyErrMsg
        {
            get { return _qty_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for QtyErrMsg", value, value.ToString());

                _qty_errmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Period
        {
            get { return _period; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Period", value, value.ToString());

                _period = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PeriodErrMsg
        {
            get { return _period_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for PeriodErrMsg", value, value.ToString());

                _period_errmsg = value;
            }
        }
			

        public string WarehouseType { get; set; }
        public string ExpiredDate { get; set; }
        public string DealerName { get; set; }

        //public string Period { get; set; }



        #endregion





    }
}
