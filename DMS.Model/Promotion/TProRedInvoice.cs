/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : TProRedInvoice
 * Created Time: 2016/7/25 18:08:19
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	TProRedInvoice
	/// </summary>
	[Serializable]
	public class TProRedInvoice : BaseModel
	{
		#region Private Members 10
		
		private int _flowid; 
		private string _tier2dealercode; 
		private string _bscbu; 
		private string _invoicenumber; 
		private DateTime? _invoicedate; 
		private decimal? _invoiceamount; 
		private string _remark; 
		private string _clientid; 
		private string _batchnbr; 
		private string _ermassage; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public TProRedInvoice()
		{
			_flowid = 0; 
			_tier2dealercode = null; 
			_bscbu = null; 
			_invoicenumber = null; 
			_invoicedate = null;
			_invoiceamount = null;
			_remark = null; 
			_clientid = null; 
			_batchnbr = null; 
			_ermassage = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public int FlowId
		{
			get { return _flowid; }
			set { _flowid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Tier2DealerCode
		{
			get { return _tier2dealercode; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for Tier2DealerCode", value, value.ToString());
				
				_tier2dealercode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Bscbu
		{
			get { return _bscbu; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Bscbu", value, value.ToString());
				
				_bscbu = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string InvoiceNumber
		{
			get { return _invoicenumber; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for InvoiceNumber", value, value.ToString());
				
				_invoicenumber = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? InvoiceDate
		{
			get { return _invoicedate; }
			set { _invoicedate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? InvoiceAmount
		{
			get { return _invoiceamount; }
			set { _invoiceamount = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Clientid
		{
			get { return _clientid; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());
				
				_clientid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string BatchNbr
		{
			get { return _batchnbr; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());
				
				_batchnbr = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErMassage
		{
			get { return _ermassage; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ErMassage", value, value.ToString());
				
				_ermassage = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
