/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : CfnPriceImportInit
 * Created Time: 2019/10/18 9:10:01
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	CfnPriceImportInit
	/// </summary>
	[Serializable]
	public class CfnPriceImportInit : BaseModel
	{
		#region Private Members 20
		
		private Guid _id; 
		private Guid? _group_id; 
		private string _sap_code; 
		private string _chinesename; 
		private Guid? _cfn_id; 
		private string _customerfacenbr; 
		private string _price; 
		private string _province; 
		private Guid? _province_id; 
		private string _city; 
		private Guid? _city_id; 
		private string _levelvalue; 
		private string _levelkey; 
		private string _validdatefrom; 
		private string _validdateto;
        private string _dealertype;
		private Guid? _subcompanyid; 
		private Guid? _brandid; 
		private string _errmassage; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public CfnPriceImportInit()
		{
			_id = Guid.Empty; 
			_group_id = null;
			_sap_code = null; 
			_chinesename = null; 
			_cfn_id = null;
			_customerfacenbr = null; 
			_price = null; 
			_province = null; 
			_province_id = null;
			_city = null; 
			_city_id = null;
			_levelvalue = null; 
			_levelkey = null; 
			_validdatefrom = null; 
			_validdateto = null;
            _dealertype = null;
            _subcompanyid = null;
			_brandid = null;
			_errmassage = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? GroupId
		{
			get { return _group_id; }
			set { _group_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SapCode
		{
			get { return _sap_code; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for SapCode", value, value.ToString());
				
				_sap_code = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ChineseName
		{
			get { return _chinesename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ChineseName", value, value.ToString());
				
				_chinesename = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? CfnId
		{
			get { return _cfn_id; }
			set { _cfn_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CustomerFaceNbr
		{
			get { return _customerfacenbr; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for CustomerFaceNbr", value, value.ToString());
				
				_customerfacenbr = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Price
		{
			get { return _price; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Price", value, value.ToString());
				
				_price = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Province
		{
			get { return _province; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Province", value, value.ToString());
				
				_province = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? ProvinceId
		{
			get { return _province_id; }
			set { _province_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string City
		{
			get { return _city; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for City", value, value.ToString());
				
				_city = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? CityId
		{
			get { return _city_id; }
			set { _city_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LevelValue
		{
			get { return _levelvalue; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for LevelValue", value, value.ToString());
				
				_levelvalue = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LevelKey
		{
			get { return _levelkey; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for LevelKey", value, value.ToString());
				
				_levelkey = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ValidDateFrom
		{
			get { return _validdatefrom; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ValidDateFrom", value, value.ToString());
				
				_validdatefrom = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ValidDateTo
		{
			get { return _validdateto; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ValidDateTo", value, value.ToString());
				
				_validdateto = value;
			}
		}

        public string DealerType
        {
            get { return _dealertype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerType", value, value.ToString());

                _dealertype = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>		
        public Guid? SubCompanyId
		{
			get { return _subcompanyid; }
			set { _subcompanyid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? BrandId
		{
			get { return _brandid; }
			set { _brandid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErrMassage
		{
			get { return _errmassage; }
			set	
			{
				if( value!= null && value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for ErrMassage", value, value.ToString());
				
				_errmassage = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
