/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ShipmentInvoiceInit
 * Created Time: 2017-05-09 13:29:29
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ShipmentInvoiceInit
	/// </summary>
	[Serializable]
	public class ShipmentInvoiceInit : BaseModel
	{
		#region Private Members 10
		
		private Guid _id; 
		private Guid _dma_id; 
		private string _shipmentnbr; 
		private string _invoiceno; 
		private bool _iserror; 
		private string _error_msg; 
		private int _linenbr; 
		private Guid _importuser; 
		private DateTime _importdate; 
		private Guid? _sph_id; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ShipmentInvoiceInit()
		{
			_id = Guid.Empty; 
			_dma_id = Guid.Empty; 
			_shipmentnbr = null; 
			_invoiceno = null; 
			_iserror = false; 
			_error_msg = null; 
			_linenbr = 0; 
			_importuser = Guid.Empty; 
			_importdate = new DateTime(); 
			_sph_id = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 经销商ID
		/// </summary>		
		public Guid DmaId
		{
			get { return _dma_id; }
			set { _dma_id = value; }
		}
			
		/// <summary>
		/// 销售单号
		/// </summary>		
		public string ShipmentNbr
		{
			get { return _shipmentnbr; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for ShipmentNbr", value, value.ToString());
				
				_shipmentnbr = value;
			}
		}
			
		/// <summary>
		/// 发票号
		/// </summary>		
		public string InvoiceNo
		{
			get { return _invoiceno; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for InvoiceNo", value, value.ToString());
				
				_invoiceno = value;
			}
		}
			
		/// <summary>
		/// 错误标志位
		/// </summary>		
		public bool IsError
		{
			get { return _iserror; }
			set { _iserror = value; }
		}
			
		/// <summary>
		/// 错误描述
		/// </summary>		
		public string ErrorMsg
		{
			get { return _error_msg; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ErrorMsg", value, value.ToString());
				
				_error_msg = value;
			}
		}
			
		/// <summary>
		/// 行号
		/// </summary>		
		public int LineNbr
		{
			get { return _linenbr; }
			set { _linenbr = value; }
		}
			
		/// <summary>
		/// 导入人
		/// </summary>		
		public Guid ImportUser
		{
			get { return _importuser; }
			set { _importuser = value; }
		}
			
		/// <summary>
		/// 导入时间
		/// </summary>		
		public DateTime ImportDate
		{
			get { return _importdate; }
			set { _importdate = value; }
		}
			
		/// <summary>
		/// 销售单表头ID
		/// </summary>		
		public Guid? SphId
		{
			get { return _sph_id; }
			set { _sph_id = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
