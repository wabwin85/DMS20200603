/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceTransfer
 * Created Time: 2013/8/7 14:22:51
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	InterfaceTransfer
    /// </summary>
    [Serializable]
    public class InterfaceTransfer : BaseModel
    {
        #region Private Members 15

        private Guid _id;
        private string _dealer_sapcode;
        private DateTime? _transferdate;
        private string _articlenumber;
        private string _lotnumber;
        private DateTime? _expireddate;
        private decimal? _lottransferqty;
        private string _remark;
        private string _transfertype;
        private int? _isfortier2;
        private int _linenbr;
        private string _filename;
        private DateTime _importdate;
        private string _clientid;
        private string _batchnbr;
        private decimal? _unitprice;
        private string _productline;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public InterfaceTransfer()
        {
            _id = Guid.Empty;
            _dealer_sapcode = null;
            _transferdate = null;
            _articlenumber = null;
            _lotnumber = null;
            _expireddate = null;
            _lottransferqty = null;
            _remark = null;
            _transfertype = null;
            _isfortier2 = null;
            _linenbr = 0;
            _filename = null;
            _importdate = new DateTime();
            _clientid = null;
            _batchnbr = null;
            _unitprice = null;
            _productline = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 借入或借出经销商代码
        /// </summary>		
        public string DealerSapCode
        {
            get { return _dealer_sapcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerSapCode", value, value.ToString());

                _dealer_sapcode = value;
            }
        }

        /// <summary>
        /// 借货时间
        /// </summary>		
        public DateTime? TransferDate
        {
            get { return _transferdate; }
            set { _transferdate = value; }
        }

        /// <summary>
        /// 产品型号
        /// </summary>		
        public string ArticleNumber
        {
            get { return _articlenumber; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumber", value, value.ToString());

                _articlenumber = value;
            }
        }

        /// <summary>
        /// 序列号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 产品有效期
        /// </summary>		
        public DateTime? ExpiredDate
        {
            get { return _expireddate; }
            set { _expireddate = value; }
        }

        /// <summary>
        /// 数量
        /// </summary>		
        public decimal? LotTransferQty
        {
            get { return _lottransferqty; }
            set { _lottransferqty = value; }
        }

        /// <summary>
        /// 备注
        /// </summary>		
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());

                _remark = value;
            }
        }

        /// <summary>
        /// 类型（借入、借出）
        /// </summary>		
        public string TransferType
        {
            get { return _transfertype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for TransferType", value, value.ToString());

                _transfertype = value;
            }
        }

        /// <summary>
        /// 是否二级经销商
        /// </summary>		
        public int? IsForTier2
        {
            get { return _isfortier2; }
            set { _isfortier2 = value; }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public int LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }

        /// <summary>
        /// 文件名
        /// </summary>		
        public string FileName
        {
            get { return _filename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());

                _filename = value;
            }
        }

        /// <summary>
        /// 导入时间
        /// </summary>		
        public DateTime ImportDate
        {
            get { return _importdate; }
            set { _importdate = value; }
        }

        /// <summary>
        /// 客户端ID
        /// </summary>		
        public string Clientid
        {
            get { return _clientid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());

                _clientid = value;
            }
        }

        /// <summary>
        /// 处理批次
        /// </summary>		
        public string BatchNbr
        {
            get { return _batchnbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());

                _batchnbr = value;
            }
        }


        /// <summary>
        /// 价格
        /// </summary>		
        public decimal? UnitPrice
        {
            get { return _unitprice; }
            set { _unitprice = value; }
        }

        /// <summary>
        /// 产品线
        /// </summary>	
        public string ProductLine
        {
            get { return _productline; }
            set { _productline = value; }
        }

        #endregion





    }
}
