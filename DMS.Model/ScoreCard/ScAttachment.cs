/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ScAttachment
 * Created Time: 2014/9/21 14:03:07
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ScAttachment
	/// </summary>
	[Serializable]
	public class ScAttachment : BaseModel
	{
		#region Private Members 8
		
		private Guid _id; 
		private Guid _main_id; 
		private string _name; 
		private string _url; 
		private string _type; 
		private string _remark; 
		private Guid _uploaduser; 
		private DateTime _uploaddate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ScAttachment()
		{
			_id = Guid.Empty; 
			_main_id = Guid.Empty; 
			_name = null; 
			_url = null; 
			_type = null; 
			_remark = null; 
			_uploaduser = Guid.Empty; 
			_uploaddate = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// SCAT_ID
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// SCAT_Main_ID
		/// </summary>		
		public Guid MainId
		{
			get { return _main_id; }
			set { _main_id = value; }
		}
			
		/// <summary>
		/// SCAT_Name
		/// </summary>		
		public string Name
		{
			get { return _name; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Name", value, value.ToString());
				
				_name = value;
			}
		}
			
		/// <summary>
		/// SCAT_Url
		/// </summary>		
		public string Url
		{
			get { return _url; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Url", value, value.ToString());
				
				_url = value;
			}
		}
			
		/// <summary>
		/// SCAT_Type
		/// </summary>		
		public string Type
		{
			get { return _type; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Type", value, value.ToString());
				
				_type = value;
			}
		}
			
		/// <summary>
		/// SCAT_Remark
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// SCAT_UploadUser
		/// </summary>		
		public Guid UploadUser
		{
			get { return _uploaduser; }
			set { _uploaduser = value; }
		}
			
		/// <summary>
		/// SCAT_UploadDate
		/// </summary>		
		public DateTime UploadDate
		{
			get { return _uploaddate; }
			set { _uploaddate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
