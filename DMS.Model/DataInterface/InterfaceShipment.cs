/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceShipment
 * Created Time: 2016/1/4 11:06:29
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	InterfaceShipment
    /// </summary>
    [Serializable]
    public class InterfaceShipment : BaseModel
    {
        #region Private Members 21

        private Guid _id;
        private string _dealer_sapcode;
        private string _orderno;
        private string _sapdeliveryno;
        private DateTime? _sapdeliverydate;
        private DateTime? _shippingdate;
        private string _towhmcode;
        private string _articlenumber;
        private string _sapdeliverylinenbr;
        private string _lotnumber;
        private DateTime? _expireddate;
        private decimal? _deliveryqty;
        private int _linenbr;
        private string _filename;
        private DateTime _importdate;
        private string _clientid;
        private string _batchnbr;
        private string _shipmenttype;
        private decimal? _unitprice;
        private string _whmcode;
        private string _qrcode;
        private decimal? _taxrate;
        private string _expresscompany;
        private string _expressno;
        private string _shiptype;
        private string _erplinenbr;
        private decimal? _erpamount;
        private decimal? _erptaxrate;
        private string _erpnbr;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public InterfaceShipment()
        {
            _id = Guid.Empty;
            _dealer_sapcode = null;
            _orderno = null;
            _sapdeliveryno = null;
            _sapdeliverydate = null;
            _shippingdate = null;
            _towhmcode = null;
            _articlenumber = null;
            _sapdeliverylinenbr = null;
            _lotnumber = null;
            _expireddate = null;
            _deliveryqty = null;
            _linenbr = 0;
            _filename = null;
            _importdate = new DateTime();
            _clientid = null;
            _batchnbr = null;
            _shipmenttype = null;
            _unitprice = null;
            _whmcode = null;
            _qrcode = null;
            _taxrate = null;
            _expresscompany = null;
            _expressno = null;
            _shiptype = null;
            _erplinenbr = null;
            _erpamount = null;
            _erptaxrate = null;
            _erpnbr = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 经销商ERP Account
        /// </summary>		
        public string DealerSapCode
        {
            get { return _dealer_sapcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerSapCode", value, value.ToString());

                _dealer_sapcode = value;
            }
        }

        /// <summary>
        /// 订单号
        /// </summary>		
        public string OrderNo
        {
            get { return _orderno; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());

                _orderno = value;
            }
        }

        /// <summary>
        /// SAP发货单号
        /// </summary>		
        public string SapDeliveryNo
        {
            get { return _sapdeliveryno; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SapDeliveryNo", value, value.ToString());

                _sapdeliveryno = value;
            }
        }

        /// <summary>
        /// SAP发货创建日期
        /// </summary>		
        public DateTime? SapDeliveryDate
        {
            get { return _sapdeliverydate; }
            set { _sapdeliverydate = value; }
        }

        /// <summary>
        /// SAP发货日期
        /// </summary>		
        public DateTime? ShippingDate
        {
            get { return _shippingdate; }
            set { _shippingdate = value; }
        }

        /// <summary>
        /// 目标仓库（对于LP寄售给二级经销商记录目标仓库）
        /// </summary>		
        public string ToWhmCode
        {
            get { return _towhmcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ToWhmCode", value, value.ToString());

                _towhmcode = value;
            }
        }

        /// <summary>
        /// 产品型号
        /// </summary>		
        public string ArticleNumber
        {
            get { return _articlenumber; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumber", value, value.ToString());

                _articlenumber = value;
            }
        }

        /// <summary>
        /// SAP发货单行号（BSC使用：发货单批号）
        /// </summary>		
        public string SapDeliveryLineNbr
        {
            get { return _sapdeliverylinenbr; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SapDeliveryLineNbr", value, value.ToString());

                _sapdeliverylinenbr = value;
            }
        }

        /// <summary>
        /// 序列号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 有效期
        /// </summary>		
        public DateTime? ExpiredDate
        {
            get { return _expireddate; }
            set { _expireddate = value; }
        }

        /// <summary>
        /// 发货数量
        /// </summary>		
        public decimal? DeliveryQty
        {
            get { return _deliveryqty; }
            set { _deliveryqty = value; }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public int LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }

        /// <summary>
        /// 文件名
        /// </summary>		
        public string FileName
        {
            get { return _filename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());

                _filename = value;
            }
        }

        /// <summary>
        /// 导入时间
        /// </summary>		
        public DateTime ImportDate
        {
            get { return _importdate; }
            set { _importdate = value; }
        }

        /// <summary>
        /// 客户端ID（BSC新增）
        /// </summary>		
        public string Clientid
        {
            get { return _clientid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());

                _clientid = value;
            }
        }

        /// <summary>
        /// 处理批次（BSC新增）
        /// </summary>		
        public string BatchNbr
        {
            get { return _batchnbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());

                _batchnbr = value;
            }
        }

        /// <summary>
        /// 销售类型
        /// </summary>		
        public string ShipmentType
        {
            get { return _shipmenttype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipmentType", value, value.ToString());

                _shipmenttype = value;
            }
        }

        /// <summary>
        /// 发货产品价格(含税单价)
        /// </summary>		
        public decimal? UnitPrice
        {
            get { return _unitprice; }
            set { _unitprice = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string WhmCode
        {
            get { return _whmcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for WhmCode", value, value.ToString());

                _whmcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string QrCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCode", value, value.ToString());

                _qrcode = value;
            }
        }


        /// <summary>
        /// 税率
        /// </summary
        /// >	
        public decimal? TaxRate
        {
            get { return _taxrate; }
            set { _taxrate = value; }
        }
        /// <summary>
        /// 承运商
        /// </summary>
        public string ExpressCompany
        {
            get { return _expresscompany; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ExpressCompany", value, value.ToString());

                _expresscompany = value;
            }
        }
        /// <summary>
        /// 运单编号
        /// </summary>
        public string ExpressNo
        {
            get { return _expressno; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ExpressNo", value, value.ToString());

                _expressno = value;
            }
        }
        // <summary>
        /// 运输方式
        /// </summary>
        public string ShipType
        {
            get { return _shiptype; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipType", value, value.ToString());

                _shiptype = value;
            }
        }

        /// <summary>
        /// ERP明细表内码
        /// </summary>
        public string ERPLineNbr
        {
            get { return _erplinenbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ERPLineNbr", value, value.ToString());

                _erplinenbr = value;
            }
        }
        /// <summary>
        /// ERP金额
        /// </summary
        /// >	
        public decimal? ERPAmount
        {
            get { return _erpamount; }
            set { _erpamount = value; }
        }
        /// <summary>
        /// ERP税率
        /// </summary
        /// >	
        public decimal? ERPTaxRate
        {
            get { return _erptaxrate; }
            set { _erptaxrate = value; }
        }
        /// <summary>
        /// ERP主表内码
        /// </summary>
        public string ERPNbr
        {
            get { return _erpnbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ERPNbr", value, value.ToString());

                _erpnbr = value;
            }
        }
        #endregion





    }
}
