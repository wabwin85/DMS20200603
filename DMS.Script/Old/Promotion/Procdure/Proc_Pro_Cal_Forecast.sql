DROP PROCEDURE [Promotion].[Proc_Pro_Cal_Forecast] 
GO

CREATE PROCEDURE [Promotion].[Proc_Pro_Cal_Forecast] 
AS
BEGIN
	DECLARE @ICHECKPT NVARCHAR(10);
	DECLARE @CREATETIME DATETIME;
	
	SET @ICHECKPT = '';
	SET @CREATETIME = GETDATE();
	
	--第一轮：每月第八工作日没有执行过，并且当前日期大等于第八工作日
	IF NOT EXISTS (SELECT 1 FROM Promotion.Pro_Forecast_Log WHERE YEARMONTH = CONVERT(NVARCHAR(7),GETDATE(),121) AND CHECKPT = 'ROUND1' AND STATUS ='Success') 
		AND DAY(GETDATE()) > 9
		--AND EXISTS (SELECT 1 FROM CalendarDate WHERE CDD_Calendar = CONVERT(NVARCHAR(6),GETDATE(),112) AND CDD_Date8 IS NOT NULL AND DAY(GETDATE()) >=CDD_Date8)
	BEGIN
		SET @ICHECKPT = 'ROUND1'
		
		INSERT INTO Promotion.Pro_Forecast_Log(YEARMONTH,CHECKPT,STARTDATE,ENDDATE,STATUS,CREATEDATE) 
		SELECT CONVERT(NVARCHAR(7),GETDATE(),121),@ICHECKPT,
			CONVERT(NVARCHAR(7),DATEADD(M,-1,GETDATE()),121)+'-01',	--上月首日
			CONVERT(NVARCHAR(10),DATEADD(D,-1,CONVERT(NVARCHAR(7),GETDATE(),121)+'-01'),121), --上月末日
			'Running',@CREATETIME
		WHERE NOT EXISTS (SELECT 1 FROM Promotion.Pro_Forecast_Log WHERE YEARMONTH = CONVERT(NVARCHAR(7),GETDATE(),121) AND CHECKPT = 'ROUND1')		
	END
	--第二轮：每月第20日没有执行过；每月21日凌晨执行，并且当前日期大于20日。
	IF @ICHECKPT = '' 
		AND NOT EXISTS (SELECT 1 FROM Promotion.Pro_Forecast_Log WHERE YEARMONTH = CONVERT(NVARCHAR(7),GETDATE(),121) AND CHECKPT = 'ROUND2' AND STATUS ='Success') 
		AND DAY(GETDATE()) > 20
	BEGIN
		SET @ICHECKPT = 'ROUND2'
		
		INSERT INTO Promotion.Pro_Forecast_Log(YEARMONTH,CHECKPT,STARTDATE,ENDDATE,STATUS,CREATEDATE) 
		SELECT CONVERT(NVARCHAR(7),GETDATE(),121),@ICHECKPT,
			CONVERT(NVARCHAR(7),DATEADD(M,-1,GETDATE()),121)+'-21',	--上月21日
			CONVERT(NVARCHAR(10),CONVERT(NVARCHAR(7),GETDATE(),121)+'-20',121), --本月20日
			'Running',@CREATETIME
		WHERE NOT EXISTS (SELECT 1 FROM Promotion.Pro_Forecast_Log WHERE YEARMONTH = CONVERT(NVARCHAR(7),GETDATE(),121) AND CHECKPT = 'ROUND2')
	END
	
	IF @ICHECKPT = ''
	BEGIN
		PRINT '未到计算时间！'
		RETURN
	END
	
	--将修改【有效可计算】政策的状态
	UPDATE A SET CalModule = '预算',CalStatus = '待计算'
	FROM Promotion.PRO_POLICY a WHERE Status = '有效' AND PolicyStyle <> '即时买赠'
	AND EndDate>=CONVERT(NVARCHAR(6),GETDATE(),112) AND StartDate <=CONVERT(NVARCHAR(6),GETDATE(),112)
	AND NOT (CalModule = '正式' AND CalStatus = '成功')
		
	DECLARE @PolicyId INT
	
	--循环当前可计算政策
	DECLARE @iCURSOR CURSOR;
	SET @iCURSOR = CURSOR FOR SELECT A.PolicyId FROM Promotion.PRO_POLICY a 
		WHERE Status = '有效' AND CalModule IN ('预算')
		AND CalStatus = '待计算' AND PolicyStyle <> '即时买赠'
		AND EndDate>=CONVERT(NVARCHAR(6),GETDATE(),112) AND StartDate <=CONVERT(NVARCHAR(6),GETDATE(),112)
	OPEN @iCURSOR 	
	FETCH NEXT FROM @iCURSOR INTO @PolicyId
	WHILE @@FETCH_STATUS = 0
	BEGIN
		PRINT 'Policyid = '+CONVERT(NVARCHAR,@PolicyId) +' Caculate Start!' 
		
		UPDATE Promotion.PRO_POLICY SET StartTime = GETDATE() WHERE PolicyId = @PolicyId
		
		EXEC PROMOTION.Proc_Pro_Cal_Policy @PolicyId	--逐条计算政策
		
		EXEC PROMOTION.Proc_Pro_Cal_Forecast_Closing @PolicyId,@CREATETIME
		
		FETCH NEXT FROM @iCURSOR INTO @PolicyId
	END	
	CLOSE @iCURSOR
	DEALLOCATE @iCURSOR
		
	--将此轮预算日志关闭掉
	UPDATE A SET STATUS = 'Success',UPDATEDATE=GETDATE()
	FROM Promotion.Pro_Forecast_Log A WHERE YEARMONTH = CONVERT(NVARCHAR(7),GETDATE(),121) 
	AND CHECKPT = @ICHECKPT AND STATUS ='Running'
	
END

GO


