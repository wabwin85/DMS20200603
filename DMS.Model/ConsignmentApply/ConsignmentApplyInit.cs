/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentApplyInit
 * Created Time: 2018/9/18 11:41:06
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ConsignmentApplyInit
    /// </summary>
    [Serializable]
    public class ConsignmentApplyInit : BaseModel
    {
        #region Private Members 19

        private string _id;
        private string _dealersap;
        private string _no;
        private string _productlinename;
        private string _upn;
        private string _cch_no;
        private decimal? _qty;
        private string _hospitalname;
        private string _inputuserid;
        private DateTime? _inputdate;
        private string _dma_id;
        private string _productline_bum_id;
        private string _cfn_id;
        private string _hospitalid;
        private string _cch_id;
        private bool? _errorflg;
        private string _errormessage;
        private string _cah_id;
        private int? _linenbr;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConsignmentApplyInit()
        {
            _id = null;
            _dealersap = null;
            _no = null;
            _productlinename = null;
            _upn = null;
            _cch_no = null;
            _qty = null;
            _hospitalname = null;
            _inputuserid = null;
            _inputdate = null;
            _dma_id = null;
            _productline_bum_id = null;
            _cfn_id = null;
            _hospitalid = null;
            _cch_id = null;
            _errorflg = null;
            _errormessage = null;
            _cah_id = null;
            _linenbr = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public string Id
        {
            get { return _id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for Id", value, value.ToString());

                _id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Dealersap
        {
            get { return _dealersap; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Dealersap", value, value.ToString());

                _dealersap = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string No
        {
            get { return _no; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for No", value, value.ToString());

                _no = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductLineName
        {
            get { return _productlinename; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductLineName", value, value.ToString());

                _productlinename = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CchNo
        {
            get { return _cch_no; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CchNo", value, value.ToString());

                _cch_no = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public decimal? Qty
        {
            get { return _qty; }
            set { _qty = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalName
        {
            get { return _hospitalname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalName", value, value.ToString());

                _hospitalname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string InputUserId
        {
            get { return _inputuserid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for InputUserId", value, value.ToString());

                _inputuserid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? InputDate
        {
            get { return _inputdate; }
            set { _inputdate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string DmaId
        {
            get { return _dma_id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for DmaId", value, value.ToString());

                _dma_id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductLineBumId
        {
            get { return _productline_bum_id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductLineBumId", value, value.ToString());

                _productline_bum_id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CfnId
        {
            get { return _cfn_id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for CfnId", value, value.ToString());

                _cfn_id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalId
        {
            get { return _hospitalid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalId", value, value.ToString());

                _hospitalid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CchId
        {
            get { return _cch_id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for CchId", value, value.ToString());

                _cch_id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? ErrorFlg
        {
            get { return _errorflg; }
            set { _errorflg = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ErrorMessage
        {
            get { return _errormessage; }
            set
            {
                if (value != null && value.Length > 2147483647)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrorMessage", value, value.ToString());

                _errormessage = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CahId
        {
            get { return _cah_id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for CahId", value, value.ToString());

                _cah_id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }




        #endregion





    }
}
