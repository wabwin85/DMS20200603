/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ThirdPartyDisclosure
 * Created Time: 2014/9/16 16:18:24
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ThirdPartyDisclosure
	/// </summary>
	[Serializable]
	public class ThirdPartyDisclosure : BaseModel
	{
        #region Private Members 9

        private Guid _id;
        private Guid? _dma_id;
        private Guid? _productlineid;
        private Guid? _hos_id;
        private string _companyname;
        private string _rsm;
        private string _companyname2;
        private string _rsm2;
        private bool? _nottp;
        private string _approvalstatus;
        private string _approvaluser;
        private DateTime? _approvaldate;
        private DateTime? _creatdate;
        private Guid? _creatuser;
        private bool? _status;
        private string _approvalremark;
        private string _productnamestring;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ThirdPartyDisclosure()
        {
            _id = Guid.Empty;
            _dma_id = null;
            _productlineid = null;
            _hos_id = null;
            _companyname = null;
            _rsm = null;
            _companyname2 = null;
            _rsm2 = null;
            _nottp = null;
            _approvalstatus = null;
            _approvaluser = null;
            _approvaldate = null;
            _creatdate = null;
            _creatuser = null;
            _status = null;
            _approvalremark=null;
            _productnamestring = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// TPD_DMA_ID
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// TPD_ProductLineId
        /// </summary>		
        public Guid? ProductLineId
        {
            get { return _productlineid; }
            set { _productlineid = value; }
        }

        /// <summary>
        /// 医院ID
        /// </summary>		
        public Guid? HosId
        {
            get { return _hos_id; }
            set { _hos_id = value; }
        }

        /// <summary>
        /// 公司名称
        /// </summary>		
        public string CompanyName
        {
            get { return _companyname; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CompanyName", value, value.ToString());

                _companyname = value;
            }
        }

        /// <summary>
        /// 关系
        /// </summary>		
        public string Rsm
        {
            get { return _rsm; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for Rsm", value, value.ToString());

                _rsm = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CompanyName2
        {
            get { return _companyname2; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CompanyName2", value, value.ToString());

                _companyname2 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Rsm2
        {
            get { return _rsm2; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for Rsm2", value, value.ToString());

                _rsm2 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? Nottp
        {
            get { return _nottp; }
            set { _nottp = value; }
        }


        /// <summary>
        /// 
        /// </summary>		
        public string ApprovalStatus
        {
            get { return _approvalstatus; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ApprovalStatus", value, value.ToString());

                _approvalstatus = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ApprovalUser
        {
            get { return _approvaluser; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ApproValuser", value, value.ToString());

                _approvaluser = value;
            }
        }

        public DateTime? ApprovalDate
        {
            get { return _approvaldate; }
            set { _approvaldate = value; }
        }

        public DateTime? CreatDate
        {
            get { return _creatdate; }
            set { _creatdate = value; }
        }

        public Guid? CreatUser
        {
            get { return _creatuser; }
            set { _creatuser = value; }
        }

        public bool? Status
        {
            get { return _status; }
            set { _status = value; }
        }

        /// <summary>
        /// 审批备注
        /// </summary>
        public string ApprovalRemark
        {
            get { return _approvalremark; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for ApprovalRemark", value, value.ToString());

                _approvalremark = value;
            }
        }
        /// <summary>
        /// 产品线
        /// </summary>
        public string ProductNameString
        {
            get { return _productnamestring; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductNameString", value, value.ToString());

                _productnamestring = value;
            }
        }
        #endregion

    }
}
