/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentDiscountRule
 * Created Time: 2017/3/8 11:15:09
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ConsignmentDiscountRule
	/// </summary>
	[Serializable]
	public class ConsignmentDiscountRule : BaseModel
	{
        #region Private Members 13

        private Guid _id;
        private int _bu;
        private string _pctlevel;
        private string _pctlevelcode;
        private string _upn;
        private string _lot;
        private string _qrcode;
        private string _pctnamegroup;
        private int? _leftvalue;
        private int? _rightvalue;
        private decimal? _discountvalue;
        private DateTime? _begindate;
        private DateTime? _enddate;
        
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConsignmentDiscountRule()
        {
            _id = Guid.Empty;
            _bu = 0;
            _pctlevel = null;
            _pctlevelcode = null;
            _upn = null;
            _lot = null;
            _qrcode = null;
            _pctnamegroup = null;
            _leftvalue = null;
            _rightvalue = null;
            _discountvalue = null;
            _begindate = null;
            _enddate = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int Bu
        {
            get { return _bu; }
            set { _bu = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PctLevel
        {
            get { return _pctlevel; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PctLevel", value, value.ToString());

                _pctlevel = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PctLevelCode
        {
            get { return _pctlevelcode; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PctLevelCode", value, value.ToString());

                _pctlevelcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Lot
        {
            get { return _lot; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Lot", value, value.ToString());

                _lot = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string QrCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCode", value, value.ToString());

                _qrcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PctNameGroup
        {
            get { return _pctnamegroup; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PctNameGroup", value, value.ToString());

                _pctnamegroup = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? LeftValue
        {
            get { return _leftvalue; }
            set { _leftvalue = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? RightValue
        {
            get { return _rightvalue; }
            set { _rightvalue = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public decimal? DiscountValue
        {
            get { return _discountvalue; }
            set { _discountvalue = value; }
        }


        public DateTime? BeginDate
        {
            get { return _begindate; }
            set { _begindate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? EndDate
        {
            get { return _enddate; }
            set { _enddate = value; }
        }

        #endregion





    }
}
