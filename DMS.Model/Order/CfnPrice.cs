/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : CfnPrice
 * Created Time: 2011-2-10 12:04:50
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	CfnPrice
	/// </summary>
	[Serializable]
	public class CfnPrice : BaseModel
	{
		#region Private Members 17
		
		private Guid _id; 
		private Guid _cfn_id; 
		private string _pricetype; 
		private Guid? _group_id; 
		private bool _canorder; 
		private decimal? _price; 
		private decimal? _market_price; 
		private string _currency; 
		private string _uom; 
		private string _uom_inventory; 
		private DateTime? _validdatefrom; 
		private DateTime? _validdateto; 
		private Guid? _updateuser; 
		private DateTime? _updatedate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public CfnPrice()
		{
			_id = Guid.Empty; 
			_cfn_id = Guid.Empty; 
			_pricetype = null; 
			_group_id = null;
			_canorder = false; 
			_price = null;
			_market_price = null;
			_currency = null; 
			_uom = null; 
			_uom_inventory = null; 
			_validdatefrom = null;
			_validdateto = null;
			_updateuser = null;
			_updatedate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// CFNP_ID
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// CFNP_CFN_ID
		/// </summary>		
		public Guid CfnId
		{
			get { return _cfn_id; }
			set { _cfn_id = value; }
		}
			
		/// <summary>
		/// CFNP_PriceType
		/// </summary>		
		public string PriceType
		{
			get { return _pricetype; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for PriceType", value, value.ToString());
				
				_pricetype = value;
			}
		}
			
		/// <summary>
		/// CFNP_Group_ID
		/// </summary>		
		public Guid? GroupId
		{
			get { return _group_id; }
			set { _group_id = value; }
		}
			
		/// <summary>
		/// CFNP_CanOrder
		/// </summary>		
		public bool CanOrder
		{
			get { return _canorder; }
			set { _canorder = value; }
		}
			
		/// <summary>
		/// CFNP_Price
		/// </summary>		
		public decimal? Price
		{
			get { return _price; }
			set { _price = value; }
		}
			
		/// <summary>
		/// CFNP_Market_Price
		/// </summary>		
		public decimal? MarketPrice
		{
			get { return _market_price; }
			set { _market_price = value; }
		}
			
		/// <summary>
		/// CFNP_Currency
		/// </summary>		
		public string Currency
		{
			get { return _currency; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Currency", value, value.ToString());
				
				_currency = value;
			}
		}
			
		/// <summary>
		/// CFNP_UOM
		/// </summary>		
		public string Uom
		{
			get { return _uom; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Uom", value, value.ToString());
				
				_uom = value;
			}
		}
			
		/// <summary>
		/// CFNP_UOM_Inventory
		/// </summary>		
		public string UomInventory
		{
			get { return _uom_inventory; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for UomInventory", value, value.ToString());
				
				_uom_inventory = value;
			}
		}
			
		/// <summary>
		/// CFNP_ValidDateFrom
		/// </summary>		
		public DateTime? ValidDateFrom
		{
			get { return _validdatefrom; }
			set { _validdatefrom = value; }
		}
			
		/// <summary>
		/// CFNP_ValidDateTo
		/// </summary>		
		public DateTime? ValidDateTo
		{
			get { return _validdateto; }
			set { _validdateto = value; }
		}
			
		/// <summary>
		/// CFNP_UpdateUser
		/// </summary>		
		public Guid? UpdateUser
		{
			get { return _updateuser; }
			set { _updateuser = value; }
		}
			
		/// <summary>
		/// CFNP_UpdateDate
		/// </summary>		
		public DateTime? UpdateDate
		{
			get { return _updatedate; }
			set { _updatedate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
