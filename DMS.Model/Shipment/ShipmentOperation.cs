/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ShipmentOperation
 * Created Time: 2010-6-13 17:07:07
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ShipmentOperation
	/// </summary>
	[Serializable]
	public class ShipmentOperation : BaseModel
	{
		#region Private Members
		
		private Guid _id; 
		private Guid _sph_id; 
		private string _officename; 
		private string _doctorname; 
		private string _patientname; 
		private string _patientgender; 
		private string _patientpin; 
		private string _hospitalno; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ShipmentOperation()
		{
			_id = new Guid(); 
			_sph_id = new Guid(); 
			_officename = null; 
			_doctorname = null; 
			_patientname = null; 
			_patientgender = null; 
			_patientpin = null; 
			_hospitalno = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 销售单主键
		/// </summary>		
		public Guid SphId
		{
			get { return _sph_id; }
			set { _sph_id = value; }
		}
			
		/// <summary>
		/// 科室名称
		/// </summary>		
		public string OfficeName
		{
			get { return _officename; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for OfficeName", value, value.ToString());
				
				_officename = value;
			}
		}
			
		/// <summary>
		/// 医生姓名
		/// </summary>		
		public string DoctorName
		{
			get { return _doctorname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for DoctorName", value, value.ToString());
				
				_doctorname = value;
			}
		}
			
		/// <summary>
		/// 病人姓名
		/// </summary>		
		public string PatientName
		{
			get { return _patientname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for PatientName", value, value.ToString());
				
				_patientname = value;
			}
		}
			
		/// <summary>
		/// 病人性别
		/// </summary>		
		public string PatientGender
		{
			get { return _patientgender; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for PatientGender", value, value.ToString());
				
				_patientgender = value;
			}
		}
			
		/// <summary>
		/// 病人身份证号
		/// </summary>		
		public string Patientpin
		{
			get { return _patientpin; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Patientpin", value, value.ToString());
				
				_patientpin = value;
			}
		}
			
		/// <summary>
		/// 住院号码
		/// </summary>		
		public string HospitalNo
		{
			get { return _hospitalno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalNo", value, value.ToString());
				
				_hospitalno = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
