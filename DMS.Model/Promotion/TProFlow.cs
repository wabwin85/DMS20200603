/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : TProFlow
 * Created Time: 2016/3/7 15:48:42
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	TProFlow
	/// </summary>
	[Serializable]
	public class TProFlow : BaseModel
	{
		#region Private Members 11
		
		private int _flowid; 
		private string _description; 
		private string _bu; 
		private string _period; 
		private string _accountmonth; 
		private string _status; 
		private string _createby; 
		private DateTime? _createtime; 
		private string _modifyby; 
		private DateTime? _modifydate; 
		private string _remark1;
        private string _flowtype;
        private int _markettype;
        private DateTime? _begindate;
        private DateTime? _enddate;
        private string _reason;
        private string _approverole;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public TProFlow()
		{
			_flowid = 0; 
			_description = null; 
			_bu = null; 
			_period = null; 
			_accountmonth = null; 
			_status = null; 
			_createby = null; 
			_createtime = null;
			_modifyby = null; 
			_modifydate = null;
			_remark1 = null;
            _flowtype = null;
            _markettype = 0;
            _begindate = null;
            _enddate = null;
            _reason = null;
            _approverole = null;

		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public int FlowId
		{
			get { return _flowid; }
			set { _flowid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Description
		{
			get { return _description; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Description", value, value.ToString());
				
				_description = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Bu
		{
			get { return _bu; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Bu", value, value.ToString());
				
				_bu = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Period
		{
			get { return _period; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Period", value, value.ToString());
				
				_period = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string AccountMonth
		{
			get { return _accountmonth; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for AccountMonth", value, value.ToString());
				
				_accountmonth = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Status
		{
			get { return _status; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());
				
				_status = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateBy
		{
			get { return _createby; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CreateBy", value, value.ToString());
				
				_createby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateTime
		{
			get { return _createtime; }
			set { _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ModifyBy
		{
			get { return _modifyby; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for ModifyBy", value, value.ToString());
				
				_modifyby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? ModifyDate
		{
			get { return _modifydate; }
			set { _modifydate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark1
		{
			get { return _remark1; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Remark1", value, value.ToString());
				
				_remark1 = value;
			}
		}

        /// <summary>
        /// 
        /// </summary>		
        public string FlowType
        {
            get { return _flowtype; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for FlowType", value, value.ToString());

                _flowtype = value;
            }
        }

        /// <summary>
        /// 市场类型
        /// </summary>		
        public int MarketType
        {
            get { return _markettype; }
            set { _markettype = value; }
        }

        /// <summary>
        /// 有效期-开始
        /// </summary>		
        public DateTime? BeginDate
        {
            get { return _begindate; }
            set { _begindate = value; }
        }

        /// <summary>
        /// 有效期-终止
        /// </summary>		
        public DateTime? EndDate
        {
            get { return _enddate; }
            set { _enddate = value; }
        }

        public string Reason
        {
            get { return _reason; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for Reason", value, value.ToString());

                _reason = value;
            }
        }

        public string ApproveRole
        {
            get { return _approverole; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ApproveRole", value, value.ToString());

                _approverole = value;
            }
        }
		#endregion 
		
		
		
		
		
	}
}
