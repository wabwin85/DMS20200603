/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : BusinessWechatUser
 * Created Time: 2014/5/30 17:26:03
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	BusinessWechatUser
	/// </summary>
	[Serializable]
	public class BusinessWechatUser : BaseModel
	{
		#region Private Members 16
		
		private Guid _id; 
		private string _username; 
		private string _phone; 
		private string _wechat; 
		private string _post; 
		private string _dealername; 
		private Guid? _dealerid; 
		private string _dealertype; 
		private string _nickname; 
		private string _sex; 
		private string _email; 
		private int? _integral; 
		private DateTime? _signindate; 
		private string _rv1; 
		private string _rv2; 
		private string _rv3;
        private string _status;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public BusinessWechatUser()
		{
			_id = Guid.Empty; 
			_username = null; 
			_phone = null; 
			_wechat = null; 
			_post = null; 
			_dealername = null; 
			_dealerid = null;
			_dealertype = null; 
			_nickname = null; 
			_sex = null; 
			_email = null; 
			_integral = null;
			_signindate = null;
			_rv1 = null; 
			_rv2 = null; 
			_rv3 = null;
            _status = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 姓名
		/// </summary>		
		public string UserName
		{
			get { return _username; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for UserName", value, value.ToString());
				
				_username = value;
			}
		}
			
		/// <summary>
		/// 手机号码
		/// </summary>		
		public string Phone
		{
			get { return _phone; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Phone", value, value.ToString());
				
				_phone = value;
			}
		}
			
		/// <summary>
		/// 微信号
		/// </summary>		
		public string WeChat
		{
			get { return _wechat; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for WeChat", value, value.ToString());
				
				_wechat = value;
			}
		}
			
		/// <summary>
		/// 职位
		/// </summary>		
		public string Post
		{
			get { return _post; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Post", value, value.ToString());
				
				_post = value;
			}
		}
			
		/// <summary>
		/// 所属经销商名称
		/// </summary>		
		public string DealerName
		{
			get { return _dealername; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for DealerName", value, value.ToString());
				
				_dealername = value;
			}
		}
			
		/// <summary>
		/// 所属经销商ID
		/// </summary>		
		public Guid? DealerId
		{
			get { return _dealerid; }
			set { _dealerid = value; }
		}
			
		/// <summary>
		/// T1、T2、LP、BSC
		/// </summary>		
		public string DealerType
		{
			get { return _dealertype; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for DealerType", value, value.ToString());
				
				_dealertype = value;
			}
		}
			
		/// <summary>
		/// 昵称
		/// </summary>		
		public string NickName
		{
			get { return _nickname; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for NickName", value, value.ToString());
				
				_nickname = value;
			}
		}
			
		/// <summary>
		/// 性别
		/// </summary>		
		public string Sex
		{
			get { return _sex; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Sex", value, value.ToString());
				
				_sex = value;
			}
		}
			
		/// <summary>
		/// 邮箱
		/// </summary>		
		public string Email
		{
			get { return _email; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Email", value, value.ToString());
				
				_email = value;
			}
		}
			
		/// <summary>
		/// 积分
		/// </summary>		
		public int? Integral
		{
			get { return _integral; }
			set { _integral = value; }
		}
			
		/// <summary>
		/// 最后一次签到日期
		/// </summary>		
		public DateTime? SignInDate
		{
			get { return _signindate; }
			set { _signindate = value; }
		}
			
		/// <summary>
		/// RV1
		/// </summary>		
		public string Rv1
		{
			get { return _rv1; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Rv1", value, value.ToString());
				
				_rv1 = value;
			}
		}
			
		/// <summary>
		/// RV2
		/// </summary>		
		public string Rv2
		{
			get { return _rv2; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Rv2", value, value.ToString());
				
				_rv2 = value;
			}
		}
			
		/// <summary>
		/// RV3
		/// </summary>		
		public string Rv3
		{
			get { return _rv3; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Rv3", value, value.ToString());
				
				_rv3 = value;
			}
		}

        public string Status
        {
            get { return _status; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());

                _status = value ;
            }
        }
	
		
		#endregion 
		
		
		
		
		
	}
}
