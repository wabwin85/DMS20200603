/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProPolicyFactorConditionUi
 * Created Time: 2016/5/10 18:51:40
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ProPolicyFactorConditionUi
	/// </summary>
	[Serializable]
	public class ProPolicyFactorConditionUi : BaseModel
	{
		#region Private Members 6
		
		private int? _policyfactorid; 
		private int? _conditionid; 
		private string _opertag; 
		private string _conditionvalue; 
		private string _curruser; 
		private int? _policyfactorconditionid; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ProPolicyFactorConditionUi()
		{
			_policyfactorid = null;
			_conditionid = null;
			_opertag = null; 
			_conditionvalue = null; 
			_curruser = null; 
			_policyfactorconditionid = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public int? PolicyFactorId
		{
			get { return _policyfactorid; }
			set { _policyfactorid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public int? ConditionId
		{
			get { return _conditionid; }
			set { _conditionid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OperTag
		{
			get { return _opertag; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for OperTag", value, value.ToString());
				
				_opertag = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ConditionValue
		{
			get { return _conditionvalue; }
			set	
			{
				if( value!= null && value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for ConditionValue", value, value.ToString());
				
				_conditionvalue = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CurrUser
		{
			get { return _curruser; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CurrUser", value, value.ToString());
				
				_curruser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public int? PolicyFactorConditionId
		{
			get { return _policyfactorconditionid; }
			set { _policyfactorconditionid = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
