/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InterfaceWarehouse
 * Created Time: 2013/9/2 18:43:22
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	InterfaceWarehouse
	/// </summary>
	[Serializable]
	public class InterfaceWarehouse : BaseModel
	{
		#region Private Members 17
		
		private Guid _id; 
		private string _dealercode; 
		private string _whmcode; 
		private string _whmname; 
		private string _hospitalcode; 
		private string _address; 
		private string _postalcode; 
		private bool? _isactive; 
		private int _linenbr; 
		private string _filename; 
		private DateTime _importdate; 
		private string _clientid; 
		private string _batchnbr; 
		private Guid? _dealerid; 
		private Guid? _whmid; 
		private Guid? _hospitalid; 
		private string _errormsg;
        private string _type;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public InterfaceWarehouse()
		{
			_id = Guid.Empty; 
			_dealercode = null; 
			_whmcode = null; 
			_whmname = null; 
			_hospitalcode = null; 
			_address = null; 
			_postalcode = null; 
			_isactive = null;
			_linenbr = 0; 
			_filename = null; 
			_importdate = new DateTime(); 
			_clientid = null; 
			_batchnbr = null; 
			_dealerid = null;
			_whmid = null;
			_hospitalid = null;
            _errormsg = null;
            _type = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 经销商代码
		/// </summary>		
		public string DealerCode
		{
			get { return _dealercode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for DealerCode", value, value.ToString());
				
				_dealercode = value;
			}
		}
			
		/// <summary>
		/// 仓库代码
		/// </summary>		
		public string WhmCode
		{
			get { return _whmcode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for WhmCode", value, value.ToString());
				
				_whmcode = value;
			}
		}
			
		/// <summary>
		/// 仓库名称
		/// </summary>		
		public string WhmName
		{
			get { return _whmname; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for WhmName", value, value.ToString());
				
				_whmname = value;
			}
		}
			
		/// <summary>
		/// 医院代码
		/// </summary>		
		public string HospitalCode
		{
			get { return _hospitalcode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalCode", value, value.ToString());
				
				_hospitalcode = value;
			}
		}
			
		/// <summary>
		/// 地址
		/// </summary>		
		public string Address
		{
			get { return _address; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Address", value, value.ToString());
				
				_address = value;
			}
		}
			
		/// <summary>
		/// 邮编
		/// </summary>		
		public string PostalCode
		{
			get { return _postalcode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for PostalCode", value, value.ToString());
				
				_postalcode = value;
			}
		}
			
		/// <summary>
		/// 是否有效
		/// </summary>		
		public bool? IsActive
		{
			get { return _isactive; }
			set { _isactive = value; }
		}
			
		/// <summary>
		/// 行号
		/// </summary>		
		public int LineNbr
		{
			get { return _linenbr; }
			set { _linenbr = value; }
		}
			
		/// <summary>
		/// 文件名
		/// </summary>		
		public string FileName
		{
			get { return _filename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());
				
				_filename = value;
			}
		}
			
		/// <summary>
		/// 导入时间
		/// </summary>		
		public DateTime ImportDate
		{
			get { return _importdate; }
			set { _importdate = value; }
		}
			
		/// <summary>
		/// 客户端ID
		/// </summary>		
		public string Clientid
		{
			get { return _clientid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());
				
				_clientid = value;
			}
		}
			
		/// <summary>
		/// 处理批次
		/// </summary>		
		public string BatchNbr
		{
			get { return _batchnbr; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());
				
				_batchnbr = value;
			}
		}
			
		/// <summary>
		/// IWH_DealerID
		/// </summary>		
		public Guid? Dealerid
		{
			get { return _dealerid; }
			set { _dealerid = value; }
		}
			
		/// <summary>
		/// IWH_WhmID
		/// </summary>		
		public Guid? Whmid
		{
			get { return _whmid; }
			set { _whmid = value; }
		}
			
		/// <summary>
		/// IWH_HospitalID
		/// </summary>		
		public Guid? Hospitalid
		{
			get { return _hospitalid; }
			set { _hospitalid = value; }
		}
			
		/// <summary>
		/// IWH_ErrorMsg
		/// </summary>		
		public string ErrorMsg
		{
			get { return _errormsg; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ErrorMsg", value, value.ToString());
				
				_errormsg = value;
			}
		}

        /// <summary>
        /// IWH_Type
        /// </summary>		
        public string Type
        {
            get { return _type; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Type", value, value.ToString());

                _type = value;
            }
        }
	
		
		#endregion 
		
		
		
		
		
	}
}
