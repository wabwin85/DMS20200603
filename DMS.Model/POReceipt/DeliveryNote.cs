/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DeliveryNote
 * Created Time: 2009-8-13 11:17:36 AM
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{

	/// <summary>
	///	DeliveryNote
	/// </summary>
	[Serializable]
	public class DeliveryNote : BaseModel
	{
		#region Private Members
		
		private Guid _id; 
		private int _linenbrinfile; 
		private string _shiptodealercode; 
		private string _sapcode; 
		private string _ponbr; 
		private string _deliverynotenbr; 
		private string _cfn; 
		private string _upn; 
		private string _lotnumber; 
		private DateTime? _expireddate; 
		private string _dn_unitofmeasure; 
		private string _receiveunitofmeasure; 
		private double _shipqty; 
		private double _receiveqty; 
		private DateTime? _shipmentdate; 
		private string _importfilename;
        private string _ordertype;
        private double _unitprice;
        private double _subtotal; 
		private string _problemdescription; 
		private string _productdescription; 
		private string _sapsoline; 
		private string _sapsalesorderid; 
		private Guid? _poreceiptlot_prl_id; 
		private DateTime? _handledate; 
		private Guid? _dealerid_dma_id; 
		private Guid? _cfn_id;
        private string _buname;
		private Guid? _product_pma_id;
        private Guid? _productline_bum_id;
        private bool? _authorized;
        //added by bozhenfei on 20100612
        private string _shipmenttype; 
        private string _carrier;
        private string _trackingno;
        private string _shiptype;
        private string _note;
        private Guid? _productcatagory_pct_id;
        private DateTime? _sapdeliverydate;
        //end
        //added by bozhenfei on 20130902
        private Guid? _ltm_id;
        private string _towhmcode;
        private Guid? _towhmid;
        private string _clientid;
        private string _sapdeliverylinenbr;
        private string _batchnbr;
        //end
        #endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DeliveryNote()
		{
			_id = new Guid(); 
			_linenbrinfile = 0; 
			_shiptodealercode = null; 
			_sapcode = null; 
			_ponbr = null; 
			_deliverynotenbr = null; 
			_cfn = null; 
			_upn = null; 
			_lotnumber = null; 
			_expireddate = new DateTime(); 
			_dn_unitofmeasure = null; 
			_receiveunitofmeasure = null; 
			_shipqty = new double(); 
			_receiveqty = new double(); 
			_shipmentdate = null; 
			_importfilename = null;
            _ordertype = null;
            _unitprice = new double();
            _subtotal = 0; 
			_problemdescription = null; 
			_productdescription = null; 
			_sapsoline = null; 
			_sapsalesorderid = null; 
			_poreceiptlot_prl_id = null; 
			_handledate = null; 
			_dealerid_dma_id = null; 
			_cfn_id = null;
            _buname = null;
			_product_pma_id = null;
            _productline_bum_id = null;
            _authorized = null;
            //added by bozhenfei on 20100612
            _shipmenttype = null; 
            _carrier = null;
            _trackingno = null;
            _shiptype = null;
            _note = null;
            _productcatagory_pct_id = null;
            _sapdeliverydate = null;
            //end
            //added by bozhenfei on 20130902
            _ltm_id = null;
            _towhmcode = null;
            _towhmid = null;
            _clientid = null;
            _sapdeliverylinenbr = null;
            _batchnbr = null; 
            //end
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// SAP数据导入时出现的问题
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public int LineNbrInFile
		{
			get { return _linenbrinfile; }
			set { _linenbrinfile = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ShipToDealerCode
		{
			get { return _shiptodealercode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for ShipToDealerCode", value, value.ToString());
				
				_shiptodealercode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SapCode
		{
			get { return _sapcode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for SapCode", value, value.ToString());
				
				_sapcode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PoNbr
		{
			get { return _ponbr; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PoNbr", value, value.ToString());
				
				_ponbr = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DeliveryNoteNbr
		{
			get { return _deliverynotenbr; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for DeliveryNoteNbr", value, value.ToString());
				
				_deliverynotenbr = value;
			}
		}
			
		/// <summary>
		/// CFN
		/// </summary>		
		public string Cfn
		{
			get { return _cfn; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Cfn", value, value.ToString());
				
				_cfn = value;
			}
		}
			
		/// <summary>
		/// UPN
		/// </summary>		
		public string Upn
		{
			get { return _upn; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());
				
				_upn = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LotNumber
		{
			get { return _lotnumber; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());
				
				_lotnumber = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? ExpiredDate
		{
			get { return _expireddate; }
			set { _expireddate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DnUnitOfMeasure
		{
			get { return _dn_unitofmeasure; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for DnUnitOfMeasure", value, value.ToString());
				
				_dn_unitofmeasure = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ReceiveUnitOfMeasure
		{
			get { return _receiveunitofmeasure; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for ReceiveUnitOfMeasure", value, value.ToString());
				
				_receiveunitofmeasure = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double ShipQty
		{
			get { return _shipqty; }
			set { _shipqty = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double ReceiveQty
		{
			get { return _receiveqty; }
			set { _receiveqty = value; }
		}
			
		/// <summary>
		/// 发货日期
		/// </summary>		
		public DateTime? ShipmentDate
		{
			get { return _shipmentdate; }
			set { _shipmentdate = value; }
		}
			
		/// <summary>
		/// 导入文件名

		/// </summary>		
		public string ImportFileName
		{
			get { return _importfilename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ImportFileName", value, value.ToString());
				
				_importfilename = value;
			}
		}

        /// <summary>
        /// 类型
        /// </summary>
        public string OrderType
        {
            get { return _ordertype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderType", value, value.ToString());

                _ordertype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public double UnitPrice
        {
            get { return _unitprice; }
            set { _unitprice = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public double SubTotal
        {
            get { return _subtotal; }
            set { _subtotal = value; }
        }

		/// <summary>
		/// 问题描述
		/// </summary>		
		public string ProblemDescription
		{
			get { return _problemdescription; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ProblemDescription", value, value.ToString());
				
				_problemdescription = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ProductDescription
		{
			get { return _productdescription; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ProductDescription", value, value.ToString());
				
				_productdescription = value;
			}
		}
			
		/// <summary>
		/// 销售订单行
		/// </summary>		
		public string SapsoLine
		{
			get { return _sapsoline; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for SapsoLine", value, value.ToString());
				
				_sapsoline = value;
			}
		}
			
		/// <summary>
		/// 销售订单代码

		/// </summary>		
		public string SapSalesOrderid
		{
			get { return _sapsalesorderid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for SapSalesOrderid", value, value.ToString());
				
				_sapsalesorderid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? PoReceiptLotPrlId
		{
			get { return _poreceiptlot_prl_id; }
			set { _poreceiptlot_prl_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? HandleDate
		{
			get { return _handledate; }
			set { _handledate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? DealeridDmaId
		{
			get { return _dealerid_dma_id; }
			set { _dealerid_dma_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? CfnId
		{
			get { return _cfn_id; }
			set { _cfn_id = value; }
		}

        public string BuName
        {
            get { return _buname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for BuName", value, value.ToString());

                _buname = value;
            }
        }

		/// <summary>
		/// 
		/// </summary>		
		public Guid? ProductPmaId
		{
			get { return _product_pma_id; }
			set { _product_pma_id = value; }
		}
			
		
	
		
		#endregion 
		
        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductLineBumId
        {
            get { return _productline_bum_id; }
            set { _productline_bum_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? Authorized
        {
            get { return _authorized; }
            set { _authorized = value; }
        }

        /// <summary>
        /// 承运方*
        /// </summary>		
        public string Carrier
        {
            get { return _carrier; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Carrier", value, value.ToString());

                _carrier = value;
            }
        }

        /// <summary>
        /// 运单号*
        /// </summary>		
        public string TrackingNo
        {
            get { return _trackingno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for TrackingNo", value, value.ToString());

                _trackingno = value;
            }
        }

        /// <summary>
        /// 运输方式*
        /// </summary>		
        public string ShipType
        {
            get { return _shiptype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipType", value, value.ToString());

                _shiptype = value;
            }
        }

        /// <summary>
        /// 备注*
        /// </summary>		
        public string Note
        {
            get { return _note; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Note", value, value.ToString());

                _note = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductCatagoryPctId
        {
            get { return _productcatagory_pct_id; }
            set { _productcatagory_pct_id = value; }
        }

        /// <summary>
        /// 发货类型
        /// </summary>		
        public string ShipmentType
        {
            get { return _shipmenttype; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipmentType", value, value.ToString());

                _shipmenttype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? SapDeliveryDate
        {
            get { return _sapdeliverydate; }
            set { _sapdeliverydate = value; }
        }

        /// <summary>
        /// 批次号主键
        /// </summary>		
        public Guid? LtmId
        {
            get { return _ltm_id; }
            set { _ltm_id = value; }
        }

        /// <summary>
        /// 目标仓库代码
        /// </summary>		
        public string ToWhmCode
        {
            get { return _towhmcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ToWhmCode", value, value.ToString());

                _towhmcode = value;
            }
        }

        /// <summary>
        /// 目标仓库主键
        /// </summary>		
        public Guid? ToWhmId
        {
            get { return _towhmid; }
            set { _towhmid = value; }
        }

        /// <summary>
        /// 客户端ID（BSC新增）
        /// </summary>		
        public string Clientid
        {
            get { return _clientid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());

                _clientid = value;
            }
        }

        /// <summary>
        /// SAP发货单行号（BSC使用：发货单批号）
        /// </summary>		
        public string SapDeliveryLineNbr
        {
            get { return _sapdeliverylinenbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SapDeliveryLineNbr", value, value.ToString());

                _sapdeliverylinenbr = value;
            }
        }

        /// <summary>
        /// 处理批次（BSC新增）
        /// </summary>		
        public string BatchNbr
        {
            get { return _batchnbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());

                _batchnbr = value;
            }
        }
	}
}
