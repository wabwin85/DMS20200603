/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProductClassification
 * Created Time: 2014/8/6 16:15:40
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ProductClassification
	/// </summary>
	[Serializable]
	public class ProductClassification : BaseModel
	{
		#region Private Members 10
		
		private Guid _id; 
		private Guid _productline_id; 
		private string _code; 
		private string _namecn; 
		private string _nameen; 
		private Guid? _parentclassification_pct_id; 
		private bool? _active; 
		private string _rv1; 
		private string _rv2; 
		private string _rv3; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ProductClassification()
		{
			_id = Guid.Empty; 
			_productline_id = Guid.Empty; 
			_code = null; 
			_namecn = null; 
			_nameen = null; 
			_parentclassification_pct_id = null;
			_active = null;
			_rv1 = null; 
			_rv2 = null; 
			_rv3 = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 所属产品线
		/// </summary>		
		public Guid ProductLineId
		{
			get { return _productline_id; }
			set { _productline_id = value; }
		}
			
		/// <summary>
		/// 产品分类代码
		/// </summary>		
		public string Code
		{
			get { return _code; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Code", value, value.ToString());
				
				_code = value;
			}
		}
			
		/// <summary>
		/// 产品分类中文名称
		/// </summary>		
		public string Namecn
		{
			get { return _namecn; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Namecn", value, value.ToString());
				
				_namecn = value;
			}
		}
			
		/// <summary>
		/// 产品分类英文名称
		/// </summary>		
		public string Nameen
		{
			get { return _nameen; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Nameen", value, value.ToString());
				
				_nameen = value;
			}
		}
			
		/// <summary>
		/// 上级产品分类
		/// </summary>		
		public Guid? ParentClassificationPctId
		{
			get { return _parentclassification_pct_id; }
			set { _parentclassification_pct_id = value; }
		}
			
		/// <summary>
		/// 活跃状态
		/// </summary>		
		public bool? Active
		{
			get { return _active; }
			set { _active = value; }
		}
			
		/// <summary>
		/// PCT_Rv1
		/// </summary>		
		public string Rv1
		{
			get { return _rv1; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Rv1", value, value.ToString());
				
				_rv1 = value;
			}
		}
			
		/// <summary>
		/// PCT_Rv2
		/// </summary>		
		public string Rv2
		{
			get { return _rv2; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Rv2", value, value.ToString());
				
				_rv2 = value;
			}
		}
			
		/// <summary>
		/// PCT_Rv3
		/// </summary>		
		public string Rv3
		{
			get { return _rv3; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Rv3", value, value.ToString());
				
				_rv3 = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
