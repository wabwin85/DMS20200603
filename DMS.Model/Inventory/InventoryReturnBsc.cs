/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InventoryReturnBsc
 * Created Time: 2017-08-28 15:36:51
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	InventoryReturnBsc
	/// </summary>
	[Serializable]
	public class InventoryReturnBsc : BaseModel
	{
		#region Private Members 17
		
		private Guid _adj_id; 
		private string _invoiceno; 
		private string _revokeremark; 
		private string _rgano; 
		private string _deliveryno; 
		private string _reasoncode; 
		private string _reasoncn; 
		private string _reasonen; 
		private string _rev1; 
		private string _rev2; 
		private string _rev3; 
		private string _createusername; 
		private Guid? _updateuser; 
		private string _updateusername; 
		private DateTime? _updatedate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public InventoryReturnBsc()
		{
			_adj_id = Guid.Empty; 
			_invoiceno = null; 
			_revokeremark = null; 
			_rgano = null; 
			_deliveryno = null; 
			_reasoncode = null; 
			_reasoncn = null; 
			_reasonen = null; 
			_rev1 = null; 
			_rev2 = null; 
			_rev3 = null; 
			_createusername = null; 
			_updateuser = null;
			_updateusername = null; 
			_updatedate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// IR_Adj_Id
		/// </summary>		
		public Guid AdjId
		{
			get { return _adj_id; }
			set { _adj_id = value; }
		}
			
		/// <summary>
		/// 发票号
		/// </summary>		
		public string InvoiceNo
		{
			get { return _invoiceno; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for InvoiceNo", value, value.ToString());
				
				_invoiceno = value;
			}
		}
			
		/// <summary>
		/// 反对原因
		/// </summary>		
		public string RevokeRemark
		{
			get { return _revokeremark; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for RevokeRemark", value, value.ToString());
				
				_revokeremark = value;
			}
		}
			
		/// <summary>
		/// RGA号
		/// </summary>		
		public string RgaNo
		{
			get { return _rgano; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for RgaNo", value, value.ToString());
				
				_rgano = value;
			}
		}
			
		/// <summary>
		/// 出货号
		/// </summary>		
		public string DeliveryNo
		{
			get { return _deliveryno; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for DeliveryNo", value, value.ToString());
				
				_deliveryno = value;
			}
		}
			
		/// <summary>
		/// 原因代码
		/// </summary>		
		public string ReasonCode
		{
			get { return _reasoncode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for ReasonCode", value, value.ToString());
				
				_reasoncode = value;
			}
		}
			
		/// <summary>
		/// 原因中文描述
		/// </summary>		
		public string ReasonCn
		{
			get { return _reasoncn; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ReasonCn", value, value.ToString());
				
				_reasoncn = value;
			}
		}
			
		/// <summary>
		/// 原因英文描述
		/// </summary>		
		public string ReasonEn
		{
			get { return _reasonen; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for ReasonEn", value, value.ToString());
				
				_reasonen = value;
			}
		}
			
		/// <summary>
		/// 备用一
		/// </summary>		
		public string Rev1
		{
			get { return _rev1; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for Rev1", value, value.ToString());
				
				_rev1 = value;
			}
		}
			
		/// <summary>
		/// 备用二
		/// </summary>		
		public string Rev2
		{
			get { return _rev2; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for Rev2", value, value.ToString());
				
				_rev2 = value;
			}
		}
			
		/// <summary>
		/// 备用三
		/// </summary>		
		public string Rev3
		{
			get { return _rev3; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for Rev3", value, value.ToString());
				
				_rev3 = value;
			}
		}
			
		/// <summary>
		/// 创建人账号
		/// </summary>		
		public string CreateUserName
		{
			get { return _createusername; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUserName", value, value.ToString());
				
				_createusername = value;
			}
		}
			
		/// <summary>
		/// 更新人ID
		/// </summary>		
		public Guid? UpdateUser
		{
			get { return _updateuser; }
			set { _updateuser = value; }
		}
			
		/// <summary>
		/// 更新人账号
		/// </summary>		
		public string UpdateUserName
		{
			get { return _updateusername; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for UpdateUserName", value, value.ToString());
				
				_updateusername = value;
			}
		}
			
		/// <summary>
		/// 更新时间
		/// </summary>		
		public DateTime? UpdateDate
		{
			get { return _updatedate; }
			set { _updatedate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
