/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ShipmentInit
 * Created Time: 2014/7/28 10:31:58
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ShipmentInit
	/// </summary>
	[Serializable]
	public class ShipmentInit : BaseModel
	{
		#region Private Members 48
		
		private Guid _id; 
		private Guid _user; 
		private DateTime _uploaddate; 
		private int _linenbr; 
		private string _filename; 
		private bool _errorflag; 
		private string _errordescription; 
		private string _saletype; 
		private string _hospitalcode; 
		private string _hospitalname; 
		private string _hospitaloffice; 
		private string _invoicenumber; 
		private string _invoicedate; 
		private string _invoicetitle; 
		private string _shipmentdate; 
		private string _articlenumber; 
		private string _chinesename; 
		private string _lotnumber; 
		private string _price; 
		private string _expireddate; 
		private string _uom; 
		private string _qty; 
		private string _warehouse; 
		private Guid? _dma_id; 
		private Guid? _hos_id; 
		private Guid? _cfn_id; 
		private Guid? _pma_id; 
		private Guid? _bum_id; 
		private Guid? _whm_id; 
		private Guid? _ltm_id; 
		private string _hospitalcode_errmsg; 
		private string _shipmentdate_errmsg; 
		private string _articlenumber_errmsg; 
		private string _lotnumber_errmsg; 
		private string _qty_errmsg; 
		private string _price_errmsg; 
		private string _warehouse_errmsg; 
		private string _invoicedate_errmsg; 
		private string _hospitalname_errmsg;
        private string _lotshipmentdate; 
		private string _remark; 
		private string _lotshipmentdate_errmsg;
        private string _remark_errmsg;
        private string _consignmentnbr;
        private string _consignmentnbr_errmsg;
        private Guid? _cah_id;
        private string _qrcode_errmsg;
        private string _qrcode;
        private string _no;
        private string _opertype;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ShipmentInit()
        {
            _id = Guid.Empty;
            _user = Guid.Empty;
            _uploaddate = new DateTime();
            _linenbr = 0;
            _filename = null;
            _errorflag = false;
            _errordescription = null;
            _saletype = null;
            _hospitalcode = null;
            _hospitalname = null;
            _hospitaloffice = null;
            _invoicenumber = null;
            _invoicedate = null;
            _invoicetitle = null;
            _shipmentdate = null;
            _articlenumber = null;
            _chinesename = null;
            _lotnumber = null;
            _price = null;
            _expireddate = null;
            _uom = null;
            _qty = null;
            _warehouse = null;
            _dma_id = null;
            _hos_id = null;
            _cfn_id = null;
            _pma_id = null;
            _bum_id = null;
            _whm_id = null;
            _ltm_id = null;
            _hospitalcode_errmsg = null;
            _shipmentdate_errmsg = null;
            _articlenumber_errmsg = null;
            _lotnumber_errmsg = null;
            _qty_errmsg = null;
            _price_errmsg = null;
            _warehouse_errmsg = null;
            _invoicedate_errmsg = null;
            _hospitalname_errmsg = null;
            _lotshipmentdate = null;
            _remark = null;
            _lotshipmentdate_errmsg = null;
            _remark_errmsg = null;
            _consignmentnbr = null;
            _consignmentnbr_errmsg = null;
            _cah_id = null;
            _qrcode_errmsg = null;
            _qrcode = null;
            _no = null;
            _opertype = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 上传用户
        /// </summary>		
        public Guid User
        {
            get { return _user; }
            set { _user = value; }
        }

        /// <summary>
        /// 上传时间
        /// </summary>		
        public DateTime UploadDate
        {
            get { return _uploaddate; }
            set { _uploaddate = value; }
        }

        /// <summary>
        /// 行号
        /// </summary>		
        public int LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }

        /// <summary>
        /// 文件名
        /// </summary>		
        public string FileName
        {
            get { return _filename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());

                _filename = value;
            }
        }

        /// <summary>
        /// 错误标识
        /// </summary>		
        public bool ErrorFlag
        {
            get { return _errorflag; }
            set { _errorflag = value; }
        }

        /// <summary>
        /// 错误信息
        /// </summary>		
        public string ErrorDescription
        {
            get { return _errordescription; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrorDescription", value, value.ToString());

                _errordescription = value;
            }
        }

        /// <summary>
        /// 销售类型
        /// </summary>		
        public string SaleType
        {
            get { return _saletype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SaleType", value, value.ToString());

                _saletype = value;
            }
        }

        /// <summary>
        /// 医院编号
        /// </summary>		
        public string HospitalCode
        {
            get { return _hospitalcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalCode", value, value.ToString());

                _hospitalcode = value;
            }
        }

        /// <summary>
        /// 医院名称
        /// </summary>		
        public string HospitalName
        {
            get { return _hospitalname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalName", value, value.ToString());

                _hospitalname = value;
            }
        }

        /// <summary>
        /// 医院科室
        /// </summary>		
        public string HospitalOffice
        {
            get { return _hospitaloffice; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalOffice", value, value.ToString());

                _hospitaloffice = value;
            }
        }

        /// <summary>
        /// 发票号码
        /// </summary>		
        public string InvoiceNumber
        {
            get { return _invoicenumber; }
            set
            {
                if (value != null && value.Length > 400)
                    throw new ArgumentOutOfRangeException("Invalid value for InvoiceNumber", value, value.ToString());

                _invoicenumber = value;
            }
        }

        /// <summary>
        /// 发票日期
        /// </summary>		
        public string InvoiceDate
        {
            get { return _invoicedate; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for InvoiceDate", value, value.ToString());

                _invoicedate = value;
            }
        }

        /// <summary>
        /// 发票抬头
        /// </summary>		
        public string InvoiceTitle
        {
            get { return _invoicetitle; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for InvoiceTitle", value, value.ToString());

                _invoicetitle = value;
            }
        }

        /// <summary>
        /// 销售日期
        /// </summary>		
        public string ShipmentDate
        {
            get { return _shipmentdate; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipmentDate", value, value.ToString());

                _shipmentdate = value;
            }
        }

        /// <summary>
        /// 产品型号
        /// </summary>		
        public string ArticleNumber
        {
            get { return _articlenumber; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumber", value, value.ToString());

                _articlenumber = value;
            }
        }

        /// <summary>
        /// 产品名称
        /// </summary>		
        public string ChineseName
        {
            get { return _chinesename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ChineseName", value, value.ToString());

                _chinesename = value;
            }
        }

        /// <summary>
        /// 产品序列号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 销售单价
        /// </summary>		
        public string Price
        {
            get { return _price; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Price", value, value.ToString());

                _price = value;
            }
        }

        /// <summary>
        /// 产品有效期
        /// </summary>		
        public string ExpiredDate
        {
            get { return _expireddate; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ExpiredDate", value, value.ToString());

                _expireddate = value;
            }
        }

        /// <summary>
        /// 产品单位
        /// </summary>		
        public string Uom
        {
            get { return _uom; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Uom", value, value.ToString());

                _uom = value;
            }
        }

        /// <summary>
        /// 销售数量
        /// </summary>		
        public string Qty
        {
            get { return _qty; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Qty", value, value.ToString());

                _qty = value;
            }
        }

        /// <summary>
        /// 仓库名称
        /// </summary>		
        public string Warehouse
        {
            get { return _warehouse; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Warehouse", value, value.ToString());

                _warehouse = value;
            }
        }

        /// <summary>
        /// 经销商主键
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 医院主键
        /// </summary>		
        public Guid? HosId
        {
            get { return _hos_id; }
            set { _hos_id = value; }
        }

        /// <summary>
        /// 产品主键
        /// </summary>		
        public Guid? CfnId
        {
            get { return _cfn_id; }
            set { _cfn_id = value; }
        }

        /// <summary>
        /// 物料主键
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 产品线
        /// </summary>		
        public Guid? BumId
        {
            get { return _bum_id; }
            set { _bum_id = value; }
        }

        /// <summary>
        /// 仓库主键
        /// </summary>		
        public Guid? WhmId
        {
            get { return _whm_id; }
            set { _whm_id = value; }
        }

        /// <summary>
        /// 批次号主键
        /// </summary>		
        public Guid? LtmId
        {
            get { return _ltm_id; }
            set { _ltm_id = value; }
        }

        /// <summary>
        /// 医院编号错误信息
        /// </summary>		
        public string HospitalCodeErrMsg
        {
            get { return _hospitalcode_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalCodeErrMsg", value, value.ToString());

                _hospitalcode_errmsg = value;
            }
        }

        /// <summary>
        /// 销售日期错误信息
        /// </summary>		
        public string ShipmentDateErrMsg
        {
            get { return _shipmentdate_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipmentDateErrMsg", value, value.ToString());

                _shipmentdate_errmsg = value;
            }
        }

        /// <summary>
        /// 产品型号错误信息
        /// </summary>		
        public string ArticleNumberErrMsg
        {
            get { return _articlenumber_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumberErrMsg", value, value.ToString());

                _articlenumber_errmsg = value;
            }
        }

        /// <summary>
        /// 产品序列号错误信息
        /// </summary>		
        public string LotNumberErrMsg
        {
            get { return _lotnumber_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumberErrMsg", value, value.ToString());

                _lotnumber_errmsg = value;
            }
        }

        /// <summary>
        /// 销售数量错误信息
        /// </summary>		
        public string QtyErrMsg
        {
            get { return _qty_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for QtyErrMsg", value, value.ToString());

                _qty_errmsg = value;
            }
        }

        /// <summary>
        /// 销售单价错误信息
        /// </summary>		
        public string PriceErrMsg
        {
            get { return _price_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for PriceErrMsg", value, value.ToString());

                _price_errmsg = value;
            }
        }

        /// <summary>
        /// 仓库名称错误信息
        /// </summary>		
        public string WarehouseErrMsg
        {
            get { return _warehouse_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for WarehouseErrMsg", value, value.ToString());

                _warehouse_errmsg = value;
            }
        }

        /// <summary>
        /// 发票日期错误信息
        /// </summary>		
        public string InvoiceDateErrMsg
        {
            get { return _invoicedate_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InvoiceDateErrMsg", value, value.ToString());

                _invoicedate_errmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalNameErrMsg
        {
            get { return _hospitalname_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalNameErrMsg", value, value.ToString());

                _hospitalname_errmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string LotShipmentDate
		{
			get { return _lotshipmentdate; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for LotShipmentDate", value, value.ToString());

                _lotshipmentdate = value;
            }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LotShipmentDateErrMsg
		{
			get { return _lotshipmentdate_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for LotShipmentDateErrMsg", value, value.ToString());
				
				_lotshipmentdate_errmsg = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RemarkErrMsg
		{
			get { return _remark_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for RemarkErrMsg", value, value.ToString());
				
				_remark_errmsg = value;
			}
		}

        /// <summary>
        /// 
        /// </summary>		
        public string ConsignmentNbr
        {
            get { return _consignmentnbr; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsignmentNbr", value, value.ToString());

                _consignmentnbr = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ConsignmentNbrErrMsg
        {
            get { return _consignmentnbr_errmsg; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsignmentNbrErrMsg", value, value.ToString());

                _consignmentnbr_errmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? CahId
        {
            get { return _cah_id; }
            set { _cah_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string QrCodeErrMsg
        {
            get { return _qrcode_errmsg; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCodeErrMsg", value, value.ToString());

                _qrcode_errmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string QrCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCode", value, value.ToString());

                _qrcode = value;
            }
        }

        public string No
        {
            get { return _no; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for No", value, value.ToString());

                _no = value;
            }
        }
        public string OperType
        {
            get { return _opertype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for OperType", value, value.ToString());

                _opertype = value;
            }
        }

        #endregion





    }
}
