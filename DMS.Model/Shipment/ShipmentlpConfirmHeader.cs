/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ShipmentlpConfirmHeader
 * Created Time: 2014/5/30 13:06:04
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ShipmentlpConfirmHeader
	/// </summary>
	[Serializable]
	public class ShipmentlpConfirmHeader : BaseModel
	{
		#region Private Members 7
		
		private Guid _id; 
		private string _salesno; 
		private string _orderno; 
		private DateTime? _confirmdate; 
		private string _remark; 
		private Guid _importuser; 
		private DateTime? _importdate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ShipmentlpConfirmHeader()
		{
			_id = Guid.Empty; 
			_salesno = null; 
			_orderno = null; 
			_confirmdate = null;
			_remark = null; 
			_importuser = Guid.Empty; 
			_importdate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SalesNo
		{
			get { return _salesno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SalesNo", value, value.ToString());
				
				_salesno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrderNo
		{
			get { return _orderno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());
				
				_orderno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? ConfirmDate
		{
			get { return _confirmdate; }
			set { _confirmdate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid ImportUser
		{
			get { return _importuser; }
			set { _importuser = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? ImportDate
		{
			get { return _importdate; }
			set { _importdate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
