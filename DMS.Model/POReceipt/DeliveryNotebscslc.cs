/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DeliveryNotebscslc
 * Created Time: 2015/12/14 20:35:55
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	DeliveryNotebscslc
    /// </summary>
    [Serializable]
    public class DeliveryNotebscslc : BaseModel
    {
        #region Private Members 45

        private Guid _id;
        private string _deliverynotenbr;
        private DateTime? _deliverydate;
        private string _soldtosapcode;
        private string _soldtoname;
        private string _shiptosapcode;
        private string _shiptoname;
        private string _cfn;
        private string _upn;
        private string _lotnumber;
        private string _qrcode;
        private decimal? _shipqty;
        private decimal? _receiveqty;
        private DateTime? _expireddate;
        private string _deliveryunitofmeasure;
        private string _receiveunitofmeasure;
        private decimal? _unitprice;
        private string _orderno;
        private string _boxno;
        private string _ordertype;
        private int? _linenbrinfile;
        private string _sapdeliverylinenbr;
        private string _importfilename;
        private string _shipmenttype;
        private string _problemdescription;
        private string _sapsalesorderid;
        private Guid? _poreceiptlot_prl_id;
        private DateTime? _handledate;
        private Guid? _dma_id;
        private string _bu_name;
        private Guid? _bum_id;
        private Guid? _pct_id;
        private Guid? _cfn_id;
        private Guid? _pma_id;
        private Guid? _ltm_id;
        private string _carrier;
        private string _trackingno;
        private string _shiptype;
        private string _note;
        private string _towhmcode;
        private Guid? _towhmid;
        private string _clientid;
        private string _batchnbr;
        private string _status;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public DeliveryNotebscslc()
        {
            _id = Guid.Empty;
            _deliverynotenbr = null;
            _deliverydate = null;
            _soldtosapcode = null;
            _soldtoname = null;
            _shiptosapcode = null;
            _shiptoname = null;
            _cfn = null;
            _upn = null;
            _lotnumber = null;
            _qrcode = null;
            _shipqty = null;
            _receiveqty = null;
            _expireddate = null;
            _deliveryunitofmeasure = null;
            _receiveunitofmeasure = null;
            _unitprice = null;
            _orderno = null;
            _boxno = null;
            _ordertype = null;
            _linenbrinfile = null;
            _sapdeliverylinenbr = null;
            _importfilename = null;
            _shipmenttype = null;
            _problemdescription = null;
            _sapsalesorderid = null;
            _poreceiptlot_prl_id = null;
            _handledate = null;
            _dma_id = null;
            _bu_name = null;
            _bum_id = null;
            _pct_id = null;
            _cfn_id = null;
            _pma_id = null;
            _ltm_id = null;
            _carrier = null;
            _trackingno = null;
            _shiptype = null;
            _note = null;
            _towhmcode = null;
            _towhmid = null;
            _clientid = null;
            _batchnbr = null;
            _status = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// SAP数据导入时出现的问题
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 发货单号码
        /// </summary>		
        public string DeliveryNoteNbr
        {
            get { return _deliverynotenbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DeliveryNoteNbr", value, value.ToString());

                _deliverynotenbr = value;
            }
        }

        /// <summary>
        /// 发货日期
        /// </summary>		
        public DateTime? DeliveryDate
        {
            get { return _deliverydate; }
            set { _deliverydate = value; }
        }

        /// <summary>
        /// 购买方SAP编号
        /// </summary>		
        public string SoldTosapCode
        {
            get { return _soldtosapcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SoldTosapCode", value, value.ToString());

                _soldtosapcode = value;
            }
        }

        /// <summary>
        /// 购买方名称
        /// </summary>		
        public string SoldToName
        {
            get { return _soldtoname; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for SoldToName", value, value.ToString());

                _soldtoname = value;
            }
        }

        /// <summary>
        /// 收货方SAP账号
        /// </summary>		
        public string ShipTosapCode
        {
            get { return _shiptosapcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipTosapCode", value, value.ToString());

                _shiptosapcode = value;
            }
        }

        /// <summary>
        /// 收货方名称
        /// </summary>		
        public string ShipToName
        {
            get { return _shiptoname; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipToName", value, value.ToString());

                _shiptoname = value;
            }
        }

        /// <summary>
        /// CFN
        /// </summary>		
        public string Cfn
        {
            get { return _cfn; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Cfn", value, value.ToString());

                _cfn = value;
            }
        }

        /// <summary>
        /// UPN
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// 批次或序列号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 产品二维码
        /// </summary>		
        public string QrCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for QrCode", value, value.ToString());

                _qrcode = value;
            }
        }

        /// <summary>
        /// 发货数量
        /// </summary>		
        public decimal? ShipQty
        {
            get { return _shipqty; }
            set { _shipqty = value; }
        }

        /// <summary>
        /// 收货数量
        /// </summary>		
        public decimal? ReceiveQty
        {
            get { return _receiveqty; }
            set { _receiveqty = value; }
        }

        /// <summary>
        /// 过期日期
        /// </summary>		
        public DateTime? ExpiredDate
        {
            get { return _expireddate; }
            set { _expireddate = value; }
        }

        /// <summary>
        /// 发货单位
        /// </summary>		
        public string DeliveryUnitOfMeasure
        {
            get { return _deliveryunitofmeasure; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for DeliveryUnitOfMeasure", value, value.ToString());

                _deliveryunitofmeasure = value;
            }
        }

        /// <summary>
        /// 收货单位
        /// </summary>		
        public string ReceiveUnitOfMeasure
        {
            get { return _receiveunitofmeasure; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ReceiveUnitOfMeasure", value, value.ToString());

                _receiveunitofmeasure = value;
            }
        }

        /// <summary>
        /// 单价
        /// </summary>		
        public decimal? UnitPrice
        {
            get { return _unitprice; }
            set { _unitprice = value; }
        }

        /// <summary>
        /// 采购单代码（订单号码）
        /// </summary>		
        public string OrderNo
        {
            get { return _orderno; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());

                _orderno = value;
            }
        }

        /// <summary>
        /// 装箱单号
        /// </summary>		
        public string BoxNo
        {
            get { return _boxno; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for BoxNo", value, value.ToString());

                _boxno = value;
            }
        }

        /// <summary>
        /// 订单类型
        /// </summary>		
        public string OrderType
        {
            get { return _ordertype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderType", value, value.ToString());

                _ordertype = value;
            }
        }

        /// <summary>
        /// 记录在导入文件中的行号
        /// </summary>		
        public int? LineNbrInFile
        {
            get { return _linenbrinfile; }
            set { _linenbrinfile = value; }
        }

        /// <summary>
        /// SAP发货单中的行号
        /// </summary>		
        public string SapDeliveryLineNbr
        {
            get { return _sapdeliverylinenbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SapDeliveryLineNbr", value, value.ToString());

                _sapdeliverylinenbr = value;
            }
        }

        /// <summary>
        /// 导入文件名
        /// </summary>		
        public string ImportFileName
        {
            get { return _importfilename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ImportFileName", value, value.ToString());

                _importfilename = value;
            }
        }

        /// <summary>
        /// 发货类型
        /// </summary>		
        public string ShipmentType
        {
            get { return _shipmenttype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipmentType", value, value.ToString());

                _shipmenttype = value;
            }
        }

        /// <summary>
        /// 问题描述
        /// </summary>		
        public string ProblemDescription
        {
            get { return _problemdescription; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ProblemDescription", value, value.ToString());

                _problemdescription = value;
            }
        }

        /// <summary>
        /// 销售订单代码
        /// </summary>		
        public string SapSalesOrderid
        {
            get { return _sapsalesorderid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SapSalesOrderid", value, value.ToString());

                _sapsalesorderid = value;
            }
        }

        /// <summary>
        /// 采购接收单记录号，如果此字段不为空，说明对应数据已经放到对应的采购接收单中。
        /// </summary>		
        public Guid? PoReceiptLotPrlId
        {
            get { return _poreceiptlot_prl_id; }
            set { _poreceiptlot_prl_id = value; }
        }

        /// <summary>
        /// 处理日期
        /// </summary>		
        public DateTime? HandleDate
        {
            get { return _handledate; }
            set { _handledate = value; }
        }

        /// <summary>
        /// 经销商ID
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 部门名称
        /// </summary>		
        public string BuName
        {
            get { return _bu_name; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for BuName", value, value.ToString());

                _bu_name = value;
            }
        }

        /// <summary>
        /// 产品线记录号
        /// </summary>		
        public Guid? BumId
        {
            get { return _bum_id; }
            set { _bum_id = value; }
        }

        /// <summary>
        /// 产品分类ID
        /// </summary>		
        public Guid? PctId
        {
            get { return _pct_id; }
            set { _pct_id = value; }
        }

        /// <summary>
        /// 产品CFNID
        /// </summary>		
        public Guid? CfnId
        {
            get { return _cfn_id; }
            set { _cfn_id = value; }
        }

        /// <summary>
        /// 产品UPNID
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 产品批号ID
        /// </summary>		
        public Guid? LtmId
        {
            get { return _ltm_id; }
            set { _ltm_id = value; }
        }

        /// <summary>
        /// 承运方
        /// </summary>		
        public string Carrier
        {
            get { return _carrier; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Carrier", value, value.ToString());

                _carrier = value;
            }
        }

        /// <summary>
        /// 运单号
        /// </summary>		
        public string TrackingNo
        {
            get { return _trackingno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for TrackingNo", value, value.ToString());

                _trackingno = value;
            }
        }

        /// <summary>
        /// 运输方式
        /// </summary>		
        public string ShipType
        {
            get { return _shiptype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipType", value, value.ToString());

                _shiptype = value;
            }
        }

        /// <summary>
        /// 备注
        /// </summary>		
        public string Note
        {
            get { return _note; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Note", value, value.ToString());

                _note = value;
            }
        }

        /// <summary>
        /// 收货仓库编号
        /// </summary>		
        public string ToWhmCode
        {
            get { return _towhmcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ToWhmCode", value, value.ToString());

                _towhmcode = value;
            }
        }

        /// <summary>
        /// 收货仓库ID
        /// </summary>		
        public Guid? ToWhmId
        {
            get { return _towhmid; }
            set { _towhmid = value; }
        }

        /// <summary>
        /// 客户端ID
        /// </summary>		
        public string Clientid
        {
            get { return _clientid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Clientid", value, value.ToString());

                _clientid = value;
            }
        }

        /// <summary>
        /// 处理批次
        /// </summary>		
        public string BatchNbr
        {
            get { return _batchnbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for BatchNbr", value, value.ToString());

                _batchnbr = value;
            }
        }

        /// <summary>
        /// 记录状态（Success、Waiting、Failure）
        /// </summary>		
        public string Status
        {
            get { return _status; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());

                _status = value;
            }
        }




        #endregion





    }
}
