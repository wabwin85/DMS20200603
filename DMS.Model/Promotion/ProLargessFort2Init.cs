/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProLargessFort2Init
 * Created Time: 2019/5/14 19:01:29
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ProLargessFort2Init
    /// </summary>
    [Serializable]
    public class ProLargessFort2Init : BaseModel
    {
        #region Private Members 21

        private Guid _id;
        private string _policytype;
        private string _policytypeerrmsg;
        private string _policyno;
        private string _policynoerrmsg;
        private string _sapcode;
        private string _sapcodeerrmsg;
        private string _bu;
        private string _buerrmsg;
        private string _validdate;
        private string _validdateerrmsg;
        private string _pointtype;
        private string _pointtypeerrmsg;
        private string _freegoods;
        private string _freegoodserrmsg;
        private string _currentperiod;
        private string _currentperioderrmsg;
        private string _remarmag;
        private Guid? _userid;
        private int? _linenbr;
        private bool? _errorflag;
        private string _authproducttype;
        private string _authproducttypeerrmsg;
        private string _pl5;
        private string _pl5srrmsg;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ProLargessFort2Init()
        {
            _id = Guid.Empty;
            _policytype = null;
            _policytypeerrmsg = null;
            _policyno = null;
            _policynoerrmsg = null;
            _sapcode = null;
            _sapcodeerrmsg = null;
            _bu = null;
            _buerrmsg = null;
            _validdate = null;
            _validdateerrmsg = null;
            _pointtype = null;
            _pointtypeerrmsg = null;
            _freegoods = null;
            _freegoodserrmsg = null;
            _currentperiod = null;
            _currentperioderrmsg = null;
            _remarmag = null;
            _userid = null;
            _linenbr = null;
            _errorflag = null;
            _authproducttype = null;
            _authproducttypeerrmsg = null;
            _pl5 = null;
            _pl5srrmsg = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PolicyType
        {
            get { return _policytype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for PolicyType", value, value.ToString());

                _policytype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PolicyTypeErrmsg
        {
            get { return _policytypeerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for PolicyTypeErrmsg", value, value.ToString());

                _policytypeerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PolicyNo
        {
            get { return _policyno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for PolicyNo", value, value.ToString());

                _policyno = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PolicyNoErrMsg
        {
            get { return _policynoerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for PolicyNoErrMsg", value, value.ToString());

                _policynoerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string SapCode
        {
            get { return _sapcode; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for SapCode", value, value.ToString());

                _sapcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string SapCodeErrMsg
        {
            get { return _sapcodeerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for SapCodeErrMsg", value, value.ToString());

                _sapcodeerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Bu
        {
            get { return _bu; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Bu", value, value.ToString());

                _bu = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string BuErrMsg
        {
            get { return _buerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for BuErrMsg", value, value.ToString());

                _buerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ValidDate
        {
            get { return _validdate; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ValidDate", value, value.ToString());

                _validdate = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ValidDateErrMsg
        {
            get { return _validdateerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for ValidDateErrMsg", value, value.ToString());

                _validdateerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PointType
        {
            get { return _pointtype; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PointType", value, value.ToString());

                _pointtype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PointTypeErrMsg
        {
            get { return _pointtypeerrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for PointTypeErrMsg", value, value.ToString());

                _pointtypeerrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string FreeGoods
        {
            get { return _freegoods; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for FreeGoods", value, value.ToString());

                _freegoods = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string FreeGoodsErrMsg
        {
            get { return _freegoodserrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for FreeGoodsErrMsg", value, value.ToString());

                _freegoodserrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CurrentPeriod
        {
            get { return _currentperiod; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CurrentPeriod", value, value.ToString());

                _currentperiod = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CurrentPeriodErrMsg
        {
            get { return _currentperioderrmsg; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CurrentPeriodErrMsg", value, value.ToString());

                _currentperioderrmsg = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string RemarMag
        {
            get { return _remarmag; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for RemarMag", value, value.ToString());

                _remarmag = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? UserId
        {
            get { return _userid; }
            set { _userid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? ErrorFlag
        {
            get { return _errorflag; }
            set { _errorflag = value; }
        }


        public string AuthProductType
        {
            get { return _authproducttype; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for AuthProductType", value, value.ToString());

                _authproducttype = value;
            }
        }
        public string AuthProductTypeErrMsg
        {
            get { return _authproducttypeerrmsg; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for AuthProductTypeErrMsg", value, value.ToString());

                _authproducttypeerrmsg = value;
            }
        }
        public string PL5
        {
            get { return _pl5; }
            set
            {
                if (value != null && value.Length > 150)
                    throw new ArgumentOutOfRangeException("Invalid value for PL5", value, value.ToString());

                _pl5 = value;
            }
        }
        public string PL5ErrMsg
        {
            get { return _pl5srrmsg; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for PL5ErrMsg", value, value.ToString());

                _pl5srrmsg = value;
            }
        }

        #endregion





    }
}
