/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : FileKeyWord
 * Created Time: 2017/12/29 16:49:14
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Signature.Model
{
	/// <summary>
	///	FileKeyWord
	/// </summary>
	[Serializable]
	public class FileKeyWord
	{
		#region Private Members 11
		
		private Guid _id;
        private string _sealtype;
        private string _usertype; 
		private string _filetype; 
		private string _keyword; 
		private double? _xpadding; 
		private double? _ypadding;
        private double? _edgesyposition;
		private int? _isactive;
        private Guid? _createuser;
        private string _createusername;
        private DateTime? _createdate;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public FileKeyWord()
		{
			_id = Guid.Empty;
            _sealtype = null;
            _usertype = null; 
			_filetype = null; 
			_keyword = null; 
			_xpadding = null;
			_ypadding = null;
            _edgesyposition = null;
			_isactive = null;
            _createuser = null;
            _createusername = null;
            _createdate = null;
        }
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}

        /// <summary>
        /// 
        /// </summary>		
        public string SealType
        {
            get { return _sealtype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SealType", value, value.ToString());

                _sealtype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string UserType
		{
			get { return _usertype; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for UserType", value, value.ToString());
				
				_usertype = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string FileType
		{
			get { return _filetype; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for FileType", value, value.ToString());
				
				_filetype = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string KeyWord
		{
			get { return _keyword; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for KeyWord", value, value.ToString());
				
				_keyword = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double? Xpadding
		{
			get { return _xpadding; }
			set { _xpadding = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double? Ypadding
		{
			get { return _ypadding; }
			set { _ypadding = value; }
		}

        public double? EdgesYPosition
        {
            get { return _edgesyposition; }
            set { _edgesyposition = value; }
        }
        /// <summary>
        /// 
        /// </summary>		
        public int? IsActive
		{
			get { return _isactive; }
			set { _isactive = value; }
		}

        /// <summary>
        /// 
        /// </summary>		
        public Guid? CreateUser
        {
            get { return _createuser; }
            set { _createuser = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CreateUserName
        {
            get { return _createusername; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreateUserName", value, value.ToString());

                _createusername = value;
            }
        }

        /// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateDate
        {
            get { return _createdate; }
            set { _createdate = value; }
        }



        #endregion





    }
}
