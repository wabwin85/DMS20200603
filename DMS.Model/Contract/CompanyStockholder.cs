/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : CompanyStockholder
 * Created Time: 2013/11/12 17:41:42
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	CompanyStockholder
	/// </summary>
	[Serializable]
	public class CompanyStockholder : BaseModel
	{
		#region Private Members 21
		
		private Guid _id; 
		private Guid _cm_id; 
		private string _name; 
		private int? _ownership; 
		private string _business_address; 
		private string _telephone; 
		private string _fax; 
		private string _email; 
		private string _home_address; 
		private string _pbumport; 
		private string _identitycard; 
		private DateTime? _birthday; 
		private string _birthplace; 
		private string _country; 
		private string _register; 
		private string _possessor; 
		private string _middle_entity; 
		private DateTime? _update_date; 
		private Guid? _update_user; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public CompanyStockholder()
		{
			_id = Guid.Empty; 
			_cm_id = Guid.Empty; 
			_name = null; 
			_ownership = null;
			_business_address = null; 
			_telephone = null; 
			_fax = null; 
			_email = null; 
			_home_address = null; 
			_pbumport = null; 
			_identitycard = null; 
			_birthday = null;
			_birthplace = null; 
			_country = null; 
			_register = null; 
			_possessor = null; 
			_middle_entity = null; 
			_update_date = null;
			_update_user = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// ID
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 公司ID
		/// </summary>		
		public Guid CmId
		{
			get { return _cm_id; }
			set { _cm_id = value; }
		}
			
		/// <summary>
		/// 全名
		/// </summary>		
		public string Name
		{
			get { return _name; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Name", value, value.ToString());
				
				_name = value;
			}
		}
			
		/// <summary>
		/// 关系/所有权
		/// </summary>		
		public int? Ownership
		{
			get { return _ownership; }
			set { _ownership = value; }
		}
			
		/// <summary>
		/// 办公地址
		/// </summary>		
		public string BusinessAddress
		{
			get { return _business_address; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for BusinessAddress", value, value.ToString());
				
				_business_address = value;
			}
		}
			
		/// <summary>
		/// 电话
		/// </summary>		
		public string Telephone
		{
			get { return _telephone; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Telephone", value, value.ToString());
				
				_telephone = value;
			}
		}
			
		/// <summary>
		/// 传真
		/// </summary>		
		public string Fax
		{
			get { return _fax; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Fax", value, value.ToString());
				
				_fax = value;
			}
		}
			
		/// <summary>
		/// 电子邮件
		/// </summary>		
		public string Email
		{
			get { return _email; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Email", value, value.ToString());
				
				_email = value;
			}
		}
			
		/// <summary>
		/// 居住地址
		/// </summary>		
		public string HomeAddress
		{
			get { return _home_address; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for HomeAddress", value, value.ToString());
				
				_home_address = value;
			}
		}
			
		/// <summary>
		/// 护照
		/// </summary>		
		public string Pbumport
		{
			get { return _pbumport; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Pbumport", value, value.ToString());
				
				_pbumport = value;
			}
		}
			
		/// <summary>
		/// 国家居民ID
		/// </summary>		
		public string IdentityCard
		{
			get { return _identitycard; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for IdentityCard", value, value.ToString());
				
				_identitycard = value;
			}
		}
			
		/// <summary>
		/// 出生日期
		/// </summary>		
		public DateTime? Birthday
		{
			get { return _birthday; }
			set { _birthday = value; }
		}
			
		/// <summary>
		/// 出生地点
		/// </summary>		
		public string Birthplace
		{
			get { return _birthplace; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Birthplace", value, value.ToString());
				
				_birthplace = value;
			}
		}
			
		/// <summary>
		/// 成立国家
		/// </summary>		
		public string Country
		{
			get { return _country; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Country", value, value.ToString());
				
				_country = value;
			}
		}
			
		/// <summary>
		/// 登记
		/// </summary>		
		public string Register
		{
			get { return _register; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Register", value, value.ToString());
				
				_register = value;
			}
		}
			
		/// <summary>
		/// 最终实益拥有人
		/// </summary>		
		public string Possessor
		{
			get { return _possessor; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Possessor", value, value.ToString());
				
				_possessor = value;
			}
		}
			
		/// <summary>
		/// 中间实体
		/// </summary>		
		public string MiddleEntity
		{
			get { return _middle_entity; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for MiddleEntity", value, value.ToString());
				
				_middle_entity = value;
			}
		}
			
		/// <summary>
		/// 更新日期
		/// </summary>		
		public DateTime? UpdateDate
		{
			get { return _update_date; }
			set { _update_date = value; }
		}
			
		/// <summary>
		/// 更新人
		/// </summary>		
		public Guid? UpdateUser
		{
			get { return _update_user; }
			set { _update_user = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
