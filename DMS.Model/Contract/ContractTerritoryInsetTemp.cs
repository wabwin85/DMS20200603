/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ContractTerritoryInsetTemp
 * Created Time: 2016/6/19 16:18:21
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ContractTerritoryInsetTemp
	/// </summary>
	[Serializable]
	public class ContractTerritoryInsetTemp : BaseModel
	{
		#region Private Members 6

        private string _datid; 
		private string _hospitalcode; 
		private string _hospitalname; 
		private string _depart; 
		private string _departremark; 
		private string _errmsg; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ContractTerritoryInsetTemp()
		{
			_datid = null;
			_hospitalcode = null; 
			_hospitalname = null; 
			_depart = null; 
			_departremark = null; 
			_errmsg = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties

        public string DatId
        {
            get { return _datid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for DatId", value, value.ToString());

                _datid = value;
            }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		public string HospitalCode
		{
			get { return _hospitalcode; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalCode", value, value.ToString());
				
				_hospitalcode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string HospitalName
		{
			get { return _hospitalname; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalName", value, value.ToString());
				
				_hospitalname = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Depart
		{
			get { return _depart; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Depart", value, value.ToString());
				
				_depart = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DepartRemark
		{
			get { return _departremark; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for DepartRemark", value, value.ToString());
				
				_departremark = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErrMsg
		{
			get { return _errmsg; }
			set	
			{
				if( value!= null && value.Length > 1073741823)
					throw new ArgumentOutOfRangeException("Invalid value for ErrMsg", value, value.ToString());
				
				_errmsg = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
