/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InventoryAdjustHeader
 * Created Time: 2016/12/13 16:41:48
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	InventoryAdjustHeader
    /// </summary>
    [Serializable]
    public class InventoryAdjustHeader:BaseModel
    {
        #region Private Members 17
        private Guid _id;
        private string _reason;
        private string _inv_adj_nbr;
        private Guid _dma_id;
        private DateTime? _approvaldate;
        private Guid? _approval_usr_userid;
        private string _auditornotes;
        private string _userdescription;
        private string _status;
        private Guid? _reverse_iah_id;
        private Guid? _productline_bum_id;
        private string _warehousetype;
        private string _rsm;
        private string _applytype;
        private string _retrunreason;
        private string _SaleRep;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public InventoryAdjustHeader()
        {
            _id = Guid.Empty;
            _reason = null;
            _inv_adj_nbr = null;
            _dma_id = Guid.Empty;
            _approvaldate = null;
         
            _approval_usr_userid = null;
            _auditornotes = null;
            _userdescription = null;
            _status = null;
           
            _reverse_iah_id = null;
            _productline_bum_id = null;
            _warehousetype = null;
            _rsm = null;
            _applytype = null;
            _retrunreason = null;
            _SaleRep = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 库存调整原因
        /// </summary>		
        public string Reason
        {
            get { return _reason; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Reason", value, value.ToString());

                _reason = value;
            }
        }

        /// <summary>
        /// 库存调整单据编号
        /// </summary>		
        public string InvAdjNbr
        {
            get { return _inv_adj_nbr; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for InvAdjNbr", value, value.ToString());

                _inv_adj_nbr = value;
            }
        }

        /// <summary>
        /// 经销商
        /// </summary>		
        public Guid DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 批准日期
        /// </summary>		
        public DateTime? ApprovalDate
        {
            get { return _approvaldate; }
            set { _approvaldate = value; }
        }

       
        /// <summary>
        /// 批准人
        /// </summary>		
        public Guid? ApprovalUsrUserid
        {
            get { return _approval_usr_userid; }
            set { _approval_usr_userid = value; }
        }

        /// <summary>
        /// 批准说明
        /// </summary>		
        public string AuditorNotes
        {
            get { return _auditornotes; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for AuditorNotes", value, value.ToString());

                _auditornotes = value;
            }
        }

        /// <summary>
        /// 用户说明
        /// </summary>		
        public string UserDescription
        {
            get { return _userdescription; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for UserDescription", value, value.ToString());

                _userdescription = value;
            }
        }

        /// <summary>
        /// 状态
        /// </summary>		
        public string Status
        {
            get { return _status; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());

                _status = value;
            }
        }

     
        /// <summary>
        /// 撤销单据的记录
        /// </summary>		
        public Guid? ReverseIahId
        {
            get { return _reverse_iah_id; }
            set { _reverse_iah_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductLineBumId
        {
            get { return _productline_bum_id; }
            set { _productline_bum_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string WarehouseType
        {
            get { return _warehousetype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for WarehouseType", value, value.ToString());

                _warehousetype = value;
            }
        }

        public string SaleRep
        {
            get { return _SaleRep; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SaleRep", value, value.ToString());

                _SaleRep = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Rsm
        {
            get { return _rsm; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Rsm", value, value.ToString());

                _rsm = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ApplyType
        {
            get { return _applytype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ApplyType", value, value.ToString());

                _applytype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string RetrunReason
        {
            get { return _retrunreason; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for RetrunReason", value, value.ToString());

                _retrunreason = value;
            }
        }




        #endregion





    }
}
