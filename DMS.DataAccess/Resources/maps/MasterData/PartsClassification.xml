<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PartsClassificationMap" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">
    <alias>
        <typeAlias alias="PartsClassification" assembly="DMS.Model.dll" type="DMS.Model.PartsClassification" />
    </alias>
    <resultMaps>
        <resultMap id="PartsClassificationResult" class="PartsClassification">
            <result property="Name" column="PCT_Name" type="string" dbType="varchar"/>
            <result property="EnglishName" column="PCT_EnglishName" type="string" dbType="varchar"/>
            <result property="Id" column="PCT_ID" type="Guid" dbType="Guid"/>
            <result property="ProductLineId" column="PCT_ProductLine_BUM_ID" type="Guid" dbType="Guid"/>
            <result property="ParentId" column="PCT_ParentClassification_PCT_ID" type="Guid" dbType="Guid"/>
            <result property="Description" column="PCT_Description" type="string" dbType="varchar"/>
        </resultMap>
    </resultMaps>
    <parameterMaps>
      <parameterMap id="PartsClassificationMap" class="System.Collections.Hashtable" >
        <parameter property="Name" column="Name" />
        <parameter property="EnglishName" column="EnglishName" />
        <parameter property="Id" column="Id" />
        <parameter property="ProductLineId" column="ProductLineId" />
        <parameter property="ParentId" column="ParentId" />
        <parameter property="Description" column="Description" />
        <parameter property="ParentCode" column="ParentCode" />
        <parameter property="Code" column="Code" />
        <parameter property="ClsNode" column="ClsNode" />
        <parameter property="OpName" column="OpName" />
        <parameter property="IsValid" column="IsValid" direction="Output" />
      </parameterMap>
    </parameterMaps>
    <statements>

        <select id="SelectPartsClassification" parameterClass="string" resultClass="PartsClassification">
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,cc.CC_Division AS ParentCode,cc.CC_Code AS Code,'Contract' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationContract cc ON cc.CC_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
            <isParameterPresent>
              PCT_ID = #value#
            </isParameterPresent>
          </dynamic>
          union
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,ca.CA_ParentCode AS ParentCode,ca.CA_Code AS Code,'Authorization' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationAuthorization ca ON ca.CA_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
            <isParameterPresent>
              PCT_ID = #value#
            </isParameterPresent>
          </dynamic>
          union
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,cq.CQ_ParentCode AS ParentCode,cq.CQ_Code AS Code,'Quota' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationQuota cq ON cq.CQ_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
                <isParameterPresent>
                    PCT_ID = #value#
                </isParameterPresent>
          </dynamic>
        </select>
      <select id="SelectRootPartsClassification" parameterClass="string" resultClass="PartsClassification">
        SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
        FROM PartsClassification where PCT_ParentClassification_PCT_ID is null or PCT_ParentClassification_PCT_ID='00000000-0000-0000-0000-000000000000'
      </select>
        <select id="SelectByFilterPartsClassification" parameterClass="string" resultClass="PartsClassification">
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,cc.CC_Division AS ParentCode,cc.CC_Code AS Code,'Contract' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationContract cc ON cc.CC_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="Name">PCT_Name=#Name#</isNotNull>
            <isNotNull prepend="AND" property="EnglishName">PCT_Name=#EnglishName#</isNotNull>
            <isNotNull prepend="AND" property="Id">PCT_ID=#Id#</isNotNull>
            <isNotNull prepend="AND" property="ProductLineId">PCT_ProductLine_BUM_ID=#ProductLineId#</isNotNull>
            <isNotNull prepend="AND" property="ParentId">PCT_ParentClassification_PCT_ID=#ParentId#</isNotNull>
            <isNotNull prepend="AND" property="Description">PCT_Description=#Description#</isNotNull>
          </dynamic>
          union
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,ca.CA_ParentCode AS ParentCode,ca.CA_Code AS Code,'Authorization' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationAuthorization ca ON ca.CA_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="Name">PCT_Name=#Name#</isNotNull>
            <isNotNull prepend="AND" property="EnglishName">PCT_Name=#EnglishName#</isNotNull>
            <isNotNull prepend="AND" property="Id">PCT_ID=#Id#</isNotNull>
            <isNotNull prepend="AND" property="ProductLineId">PCT_ProductLine_BUM_ID=#ProductLineId#</isNotNull>
            <isNotNull prepend="AND" property="ParentId">PCT_ParentClassification_PCT_ID=#ParentId#</isNotNull>
            <isNotNull prepend="AND" property="Description">PCT_Description=#Description#</isNotNull>
          </dynamic>
          union
          SELECT PCT_Name AS Name,PCT_EnglishName AS EnglishName,PCT_ID AS Id,PCT_ProductLine_BUM_ID AS ProductLineId,PCT_ParentClassification_PCT_ID AS ParentId,PCT_Description AS Description
          ,cq.CQ_ParentCode AS ParentCode,cq.CQ_Code AS Code,'Quota' AS ClsNode
          FROM PartsClassification pc
          INNER JOIN interface.ClassificationQuota cq ON cq.CQ_ID=pc.PCT_ID
          <dynamic prepend="WHERE">
                <isNotNull prepend="AND" property="Name">PCT_Name=#Name#</isNotNull>
                <isNotNull prepend="AND" property="EnglishName">PCT_Name=#EnglishName#</isNotNull>
                <isNotNull prepend="AND" property="Id">PCT_ID=#Id#</isNotNull>
                <isNotNull prepend="AND" property="ProductLineId">PCT_ProductLine_BUM_ID=#ProductLineId#</isNotNull>
                <isNotNull prepend="AND" property="ParentId">PCT_ParentClassification_PCT_ID=#ParentId#</isNotNull>
                <isNotNull prepend="AND" property="Description">PCT_Description=#Description#</isNotNull>
          </dynamic>
        </select>
        <insert id="InsertPartsClassification" parameterClass="PartsClassification">
            INSERT INTO PartsClassification
            (PCT_Name,PCT_EnglishName,PCT_ID,PCT_ProductLine_BUM_ID,PCT_ParentClassification_PCT_ID,PCT_Description)
            VALUES(#Name#,#EnglishName#,#Id#,#ProductLineId#,#ParentId#,#Description#)
        </insert>
        <update id="UpdatePartsClassification" parameterClass="PartsClassification">
            UPDATE PartsClassification
            SET PCT_Name=#Name#, PCT_EnglishName=#EnglishName#,PCT_ID=#Id#,PCT_ProductLine_BUM_ID=#ProductLineId#,PCT_ParentClassification_PCT_ID=#ParentId#,PCT_Description=#Description#
            WHERE PCT_ID = #Id#
        </update>
        <delete id="DeletePartsClassification" parameterClass="string">
            DELETE FROM PartsClassification
            WHERE PCT_ID = #value#
        </delete>
        <procedure id="ModifyPartsClassification" parameterMap="PartsClassificationMap">
            dbo.GC_ModifyPartsClassification
        </procedure>
    </statements>
</sqlMap>
