/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : HospitalReportUser
 * Created Time: 2013/12/5 11:50:11
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	HospitalReportUser
    /// </summary>
    [Serializable]
    public class HospitalReportUser : BaseModel
    {
        #region Private Members 11

        private Guid _id;
        private Guid _hospitalid;
        private string _username;
        private string _phone;
        private string _wechat;
        private bool? _isactive;
        private bool? _isdeleted;
        private Guid? _updateuser;
        private DateTime? _updatedate;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public HospitalReportUser()
        {
            _id = Guid.Empty;
            _hospitalid = Guid.Empty;
            _username = null;
            _phone = null;
            _wechat = null;
            _isactive = null;
            _isdeleted = null;
            _updateuser = null;
            _updatedate = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 医院ID
        /// </summary>		
        public Guid HospitalId
        {
            get { return _hospitalid; }
            set { _hospitalid = value; }
        }

        /// <summary>
        /// 姓名
        /// </summary>		
        public string UserName
        {
            get { return _username; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for UserName", value, value.ToString());

                _username = value;
            }
        }

        /// <summary>
        /// 手机号（唯一）
        /// </summary>		
        public string Phone
        {
            get { return _phone; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Phone", value, value.ToString());

                _phone = value;
            }
        }

        /// <summary>
        /// 绑定微信号(分号分割)
        /// </summary>		
        public string WeChat
        {
            get { return _wechat; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for WeChat", value, value.ToString());

                _wechat = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? IsActive
        {
            get { return _isactive; }
            set { _isactive = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public bool? IsDeleted
        {
            get { return _isdeleted; }
            set { _isdeleted = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? UpdateUser
        {
            get { return _updateuser; }
            set { _updateuser = value; }
        }

        /// <summary>
        /// 更新时间
        /// </summary>		
        public DateTime? UpdateDate
        {
            get { return _updatedate; }
            set { _updatedate = value; }
        }




        #endregion





    }
}
