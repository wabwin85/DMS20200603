/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : Dealerqa
 * Created Time: 2010-6-12 13:50:57
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	Dealerqa
	/// </summary>
	[Serializable]
	public class Dealerqa : BaseModel
	{
		#region Private Members
		
		private Guid _id; 
		private Guid _dealer_id; 
		private string _type; 
		private string _status; 
		private DateTime _questiondate; 
		private Guid _question_user_id; 
		private DateTime _answerdate; 
		private Guid _answer_user_id; 
		private string _title; 
		private string _body; 
		private string _answer;
        private string _category; 	
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Dealerqa()
		{
			_id = new Guid(); 
			_dealer_id = new Guid(); 
			_type = null; 
			_status = null; 
			_questiondate = new DateTime(); 
			_question_user_id = new Guid(); 
			_answerdate = new DateTime(); 
			_answer_user_id = new Guid(); 
			_title = null; 
			_body = null; 
			_answer = null;
            _category = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 经销商ID
		/// </summary>		
		public Guid DealerId
		{
			get { return _dealer_id; }
			set { _dealer_id = value; }
		}
			
		/// <summary>
		/// 问题类型
		/// </summary>		
		public string Type
		{
			get { return _type; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Type", value, value.ToString());
				
				_type = value;
			}
		}
			
		/// <summary>
		/// 问题状态
		/// </summary>		
		public string Status
		{
			get { return _status; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());
				
				_status = value;
			}
		}
			
		/// <summary>
		/// 提问日期
		/// </summary>		
		public DateTime QuestionDate
		{
			get { return _questiondate; }
			set { _questiondate = value; }
		}
			
		/// <summary>
		/// 提问人ID
		/// </summary>		
		public Guid QuestionUserId
		{
			get { return _question_user_id; }
			set { _question_user_id = value; }
		}
			
		/// <summary>
		/// 回答日期
		/// </summary>		
		public DateTime AnswerDate
		{
			get { return _answerdate; }
			set { _answerdate = value; }
		}
			
		/// <summary>
		/// 回答人ID
		/// </summary>		
		public Guid AnswerUserId
		{
			get { return _answer_user_id; }
			set { _answer_user_id = value; }
		}
			
		/// <summary>
		/// 标题
		/// </summary>		
		public string Title
		{
			get { return _title; }
			set	
			{
				if( value!= null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for Title", value, value.ToString());
				
				_title = value;
			}
		}
			
		/// <summary>
		/// 内容
		/// </summary>		
		public string Body
		{
			get { return _body; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Body", value, value.ToString());
				
				_body = value;
			}
		}
			
		/// <summary>
		/// DQA_Answer
		/// </summary>		
		public string Answer
		{
			get { return _answer; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Answer", value, value.ToString());
				
				_answer = value;
			}
		}



        /// <summary>
        /// 
        /// </summary>		
        public string Category
        {
            get { return _category; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Category", value, value.ToString());

                _category = value;
            }
        }
		#endregion 
		
		
		
		
		
	}
}
