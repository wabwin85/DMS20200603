/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : MailMessageAttachment
 * Created Time: 2018-5-29 15:58:42
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	MailMessageAttachment
    /// </summary>
    [Serializable]
    public class MailMessageAttachment : BaseModel
    {
        #region Private Members 5

        private Guid _id;
        private Guid? _mmq_id;
        private string _filepath;
        private string _filetype;
        private string _fileidentifier;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public MailMessageAttachment()
        {
            _id = Guid.Empty;
            _mmq_id = null;
            _filepath = null;
            _filetype = null;
            _fileidentifier = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? MmqId
        {
            get { return _mmq_id; }
            set { _mmq_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string FilePath
        {
            get { return _filepath; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for FilePath", value, value.ToString());

                _filepath = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string FileType
        {
            get { return _filetype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for FileType", value, value.ToString());

                _filetype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string FileIdentifier
        {
            get { return _fileidentifier; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for FileIdentifier", value, value.ToString());

                _fileidentifier = value;
            }
        }




        #endregion





    }
}
