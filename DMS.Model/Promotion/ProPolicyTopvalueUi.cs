/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProPolicyTopvalueUi
 * Created Time: 2015/12/23 11:55:49
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ProPolicyTopvalueUi
	/// </summary>
	[Serializable]
	public class ProPolicyTopvalueUi : BaseModel
	{
		#region Private Members 8

        private int? _policyid; 
		private Guid? _dealerid; 
		private string _hospitalid; 
		private string _period; 
		private decimal? _topvalue; 
		private string _createby; 
		private DateTime? _createtime; 
		private string _curruser;
        private string _sapcode;
        private string _errmsg;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ProPolicyTopvalueUi()
		{
            _policyid = null; 
			_dealerid = null;
			_hospitalid = null; 
			_period = null; 
			_topvalue = null;
			_createby = null; 
			_createtime = null;
			_curruser = null;
            _sapcode = null;
            _errmsg = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
        public int? PolicyId
		{
			get { return _policyid; }
			set { _policyid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? DealerId
		{
			get { return _dealerid; }
			set { _dealerid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string HospitalId
		{
			get { return _hospitalid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalId", value, value.ToString());
				
				_hospitalid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Period
		{
			get { return _period; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Period", value, value.ToString());
				
				_period = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? TopValue
		{
			get { return _topvalue; }
			set { _topvalue = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateBy
		{
			get { return _createby; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CreateBy", value, value.ToString());
				
				_createby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateTime
		{
			get { return _createtime; }
			set { _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CurrUser
		{
			get { return _curruser; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CurrUser", value, value.ToString());
				
				_curruser = value;
			}
		}


        /// <summary>
        /// 
        /// </summary>		
        public string SAPCode
        {
            get { return _sapcode; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for SAPCode", value, value.ToString());

                _sapcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ErrMsg
        {
            get { return _errmsg; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrMsg", value, value.ToString());

                _errmsg = value;
            }
        }
	
		
		#endregion 
		
		
		
		
		
	}
}
