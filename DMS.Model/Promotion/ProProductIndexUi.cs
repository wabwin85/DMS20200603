/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ProHospitalPrdSalesTagetUi
 * Created Time: 2016/1/10 16:09:45
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ProProductIndexUi
    /// </summary>
    [Serializable]
    public class ProProductIndexUi : BaseModel
    {
        #region Private Members 11
		
		private int? _policyfactorid; 
		private Guid? _dealerid; 
		private string _hospitalid; 
		private string _period; 
		private string _targetlevel; 
		private decimal? _targetvalue; 
		private string _createby; 
		private DateTime? _createtime; 
		private string _curruser; 
		private string _sapcode; 
		private string _errmsg; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
        public ProProductIndexUi()
		{
			_policyfactorid = null;
			_dealerid = null;
			_hospitalid = null; 
			_period = null; 
			_targetlevel = null; 
			_targetvalue = null;
			_createby = null; 
			_createtime = null;
			_curruser = null; 
			_sapcode = null; 
			_errmsg = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public int? PolicyFactorId
		{
			get { return _policyfactorid; }
			set { _policyfactorid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? DealerId
		{
			get { return _dealerid; }
			set { _dealerid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string HospitalId
		{
			get { return _hospitalid; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for HospitalId", value, value.ToString());
				
				_hospitalid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Period
		{
			get { return _period; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Period", value, value.ToString());
				
				_period = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TargetLevel
		{
			get { return _targetlevel; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for TargetLevel", value, value.ToString());
				
				_targetlevel = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? TargetValue
		{
			get { return _targetvalue; }
			set { _targetvalue = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateBy
		{
			get { return _createby; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CreateBy", value, value.ToString());
				
				_createby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateTime
		{
			get { return _createtime; }
			set { _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CurrUser
		{
			get { return _curruser; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for CurrUser", value, value.ToString());
				
				_curruser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SapCode
		{
			get { return _sapcode; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SapCode", value, value.ToString());
				
				_sapcode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErrMsg
		{
			get { return _errmsg; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for ErrMsg", value, value.ToString());
				
				_errmsg = value;
			}
		}
			
		
	
		
		#endregion 
    }
}
