/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ContractAmendment
 * Created Time: 2013/12/4 17:57:05
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ContractAmendment
	/// </summary>
	[Serializable]
    public class ContractAmendment : BaseModel
	{
        #region Private Members 70

        private Guid _cam_id;
        private Guid _cam_cm_id;
        private Guid _cam_dma_id;
        private string _cam_division;
        private int? _cam_markettype;
        private string _cam_amendment_reason;
        private string _cam_dealer_name;
        private DateTime? _cam_agreement_effectivedate;
        private DateTime? _cam_agreement_expirationdate;
        private DateTime? _cam_amendment_effectivedate;
        private bool? _cam_standard_amendment;
        private bool? _cam_productline_ischange;
        private string _cam_productline_old;
        private string _cam_productline_new;
        private string _cam_productline_remarks;
        private bool? _cam_price_ischange;
        private string _cam_price_old;
        private string _cam_price_new;
        private string _cam_price_remarks;
        private bool? _cam_special_ischange;
        private string _cam_special_old;
        private string _cam_special_amendment;
        private string _cam_special_amendment_remraks;
        private bool? _cam_territory_ischange;
        private string _cam_territory_remarks;
        private bool? _cam_quota_ischange;
        private string _cam_quota_remakrs;
        private bool? _cam_payment_ischange;
        private string _cam_payment_old;
        private string _cam_payment_new;
        private string _cam_payment_remarks;
        private bool? _cam_credit_limit_ischange;
        private string _cam_credit_limit_old;
        private string _cam_credit_limit_new;
        private string _cam_security_deposit_old;
        private string _cam_security_deposit_new;
        private string _cam_account_old;
        private string _cam_account_new;
        private string _cam_guarantee_way_new;
        private string _cam_guarantee_way_old;
        private string _cam_guarantee_way_remark;
        private string _cam_attachment_old;
        private string _cam_attachment_new;
        private bool? _cam_hasconflict;
        private string _cam_conflict_remarks;
        private string _cam_business_handover;
        private bool? _cam_supplementary_letter;
        private string _cam_rsm_printname;
        private DateTime? _cam_rsm_date;
        private string _cam_ncm_printname;
        private DateTime? _cam_ncm_date;
        private string _cam_nsm_printname;
        private DateTime? _cam_nsm_date;
        private string _cam_ncmforpart2_printname;
        private DateTime? _cam_ncmforpart2_date;
        private string _cam_drm_printname;
        private DateTime? _cam_drm_date;
        private string _cam_fc_printname;
        private DateTime? _cam_fc_date;
        private string _cam_cd_printname;
        private DateTime? _cam_cd_date;
        private string _cam_vpf_printname;
        private DateTime? _cam_vpf_date;
        private string _cam_vpap_printname;
        private DateTime? _cam_vpap_date;
        private string _cam_status;
        private string _cam_type;
        private DateTime? _cam_create_date;
        private Guid? _cam_create_user;
        private Guid? _cam_update_user;
        private DateTime? _cam_update_date;
        private string _cam_subdepid;
        private string _cam_subdepname;	
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ContractAmendment()
        {
            _cam_id = Guid.Empty;
            _cam_cm_id = Guid.Empty;
            _cam_dma_id = Guid.Empty;
            _cam_division = null;
            _cam_markettype = null;
            _cam_amendment_reason = null;
            _cam_dealer_name = null;
            _cam_agreement_effectivedate = null;
            _cam_agreement_expirationdate = null;
            _cam_amendment_effectivedate = null;
            _cam_standard_amendment = null;
            _cam_productline_ischange = null;
            _cam_productline_old = null;
            _cam_productline_new = null;
            _cam_productline_remarks = null;
            _cam_price_ischange = null;
            _cam_price_old = null;
            _cam_price_new = null;
            _cam_price_remarks = null;
            _cam_special_ischange = null;
            _cam_special_old = null;
            _cam_special_amendment = null;
            _cam_special_amendment_remraks = null;
            _cam_territory_ischange = null;
            _cam_territory_remarks = null;
            _cam_quota_ischange = null;
            _cam_quota_remakrs = null;
            _cam_payment_ischange = null;
            _cam_payment_old = null;
            _cam_payment_new = null;
            _cam_payment_remarks = null;
            _cam_credit_limit_ischange = null;
            _cam_credit_limit_old = null;
            _cam_credit_limit_new = null;
            _cam_security_deposit_old = null;
            _cam_security_deposit_new = null;
            _cam_account_old = null;
            _cam_account_new = null;
            _cam_guarantee_way_new = null;
            _cam_guarantee_way_old = null;
            _cam_guarantee_way_remark = null;
            _cam_attachment_old = null;
            _cam_attachment_new = null;
            _cam_hasconflict = null;
            _cam_conflict_remarks = null;
            _cam_business_handover = null;
            _cam_supplementary_letter = null;
            _cam_rsm_printname = null;
            _cam_rsm_date = null;
            _cam_ncm_printname = null;
            _cam_ncm_date = null;
            _cam_nsm_printname = null;
            _cam_nsm_date = null;
            _cam_ncmforpart2_printname = null;
            _cam_ncmforpart2_date = null;
            _cam_drm_printname = null;
            _cam_drm_date = null;
            _cam_fc_printname = null;
            _cam_fc_date = null;
            _cam_cd_printname = null;
            _cam_cd_date = null;
            _cam_vpf_printname = null;
            _cam_vpf_date = null;
            _cam_vpap_printname = null;
            _cam_vpap_date = null;
            _cam_status = null;
            _cam_type = null;
            _cam_create_date = null;
            _cam_create_user = null;
            _cam_update_user = null;
            _cam_update_date = null;
            _cam_subdepid = null;
            _cam_subdepname = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// CAM_ID
        /// </summary>		
        public Guid CamId
        {
            get { return _cam_id; }
            set { _cam_id = value; }
        }

        /// <summary>
        /// CAM_CM_ID
        /// </summary>		
        public Guid CamCmId
        {
            get { return _cam_cm_id; }
            set { _cam_cm_id = value; }
        }

        /// <summary>
        /// CAM_DMA_ID
        /// </summary>		
        public Guid CamDmaId
        {
            get { return _cam_dma_id; }
            set { _cam_dma_id = value; }
        }

        /// <summary>
        /// CAM_Division
        /// </summary>		
        public string CamDivision
        {
            get { return _cam_division; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamDivision", value, value.ToString());

                _cam_division = value;
            }
        }

        /// <summary>
        /// 市场类型：1：新兴市场，0：普通市场
        /// </summary>		
        public int? CamMarketType
        {
            get { return _cam_markettype; }
            set { _cam_markettype = value; }
        }

        /// <summary>
        /// CAM_Amendment_Reason
        /// </summary>		
        public string CamAmendmentReason
        {
            get { return _cam_amendment_reason; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamAmendmentReason", value, value.ToString());

                _cam_amendment_reason = value;
            }
        }

        /// <summary>
        /// CAM_Dealer_Name
        /// </summary>		
        public string CamDealerName
        {
            get { return _cam_dealer_name; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CamDealerName", value, value.ToString());

                _cam_dealer_name = value;
            }
        }

        /// <summary>
        /// CAM_Agreement_EffectiveDate
        /// </summary>		
        public DateTime? CamAgreementEffectiveDate
        {
            get { return _cam_agreement_effectivedate; }
            set { _cam_agreement_effectivedate = value; }
        }

        /// <summary>
        /// CAM_Agreement_ExpirationDate
        /// </summary>		
        public DateTime? CamAgreementExpirationDate
        {
            get { return _cam_agreement_expirationdate; }
            set { _cam_agreement_expirationdate = value; }
        }

        /// <summary>
        /// CAM_Amendment_EffectiveDate
        /// </summary>		
        public DateTime? CamAmendmentEffectiveDate
        {
            get { return _cam_amendment_effectivedate; }
            set { _cam_amendment_effectivedate = value; }
        }

        /// <summary>
        /// CAM_Standard_Amendment
        /// </summary>		
        public bool? CamStandardAmendment
        {
            get { return _cam_standard_amendment; }
            set { _cam_standard_amendment = value; }
        }

        /// <summary>
        /// CAM_ProductLine_IsChange
        /// </summary>		
        public bool? CamProductLineIsChange
        {
            get { return _cam_productline_ischange; }
            set { _cam_productline_ischange = value; }
        }

        /// <summary>
        /// CAM_ProductLine_Old
        /// </summary>		
        public string CamProductLineOld
        {
            get { return _cam_productline_old; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamProductLineOld", value, value.ToString());

                _cam_productline_old = value;
            }
        }

        /// <summary>
        /// CAM_ProductLine_New
        /// </summary>		
        public string CamProductLineNew
        {
            get { return _cam_productline_new; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamProductLineNew", value, value.ToString());

                _cam_productline_new = value;
            }
        }

        /// <summary>
        /// 产品线修改备注
        /// </summary>		
        public string CamProductLineRemarks
        {
            get { return _cam_productline_remarks; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamProductLineRemarks", value, value.ToString());

                _cam_productline_remarks = value;
            }
        }

        /// <summary>
        /// CAM_Price_IsChange
        /// </summary>		
        public bool? CamPriceIsChange
        {
            get { return _cam_price_ischange; }
            set { _cam_price_ischange = value; }
        }

        /// <summary>
        /// CAM_Price_Old
        /// </summary>		
        public string CamPriceOld
        {
            get { return _cam_price_old; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPriceOld", value, value.ToString());

                _cam_price_old = value;
            }
        }

        /// <summary>
        /// CAM_Price_New
        /// </summary>		
        public string CamPriceNew
        {
            get { return _cam_price_new; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPriceNew", value, value.ToString());

                _cam_price_new = value;
            }
        }

        /// <summary>
        /// CAM_Price_Remarks
        /// </summary>		
        public string CamPriceRemarks
        {
            get { return _cam_price_remarks; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPriceRemarks", value, value.ToString());

                _cam_price_remarks = value;
            }
        }

        /// <summary>
        /// CAM_Special_IsChange
        /// </summary>		
        public bool? CamSpecialIsChange
        {
            get { return _cam_special_ischange; }
            set { _cam_special_ischange = value; }
        }

        /// <summary>
        /// CAM_Special_Old
        /// </summary>		
        public string CamSpecialOld
        {
            get { return _cam_special_old; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSpecialOld", value, value.ToString());

                _cam_special_old = value;
            }
        }

        /// <summary>
        /// CAM_Special_Amendment
        /// </summary>		
        public string CamSpecialAmendment
        {
            get { return _cam_special_amendment; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSpecialAmendment", value, value.ToString());

                _cam_special_amendment = value;
            }
        }

        /// <summary>
        /// CAM_Special_Amendment_Remraks
        /// </summary>		
        public string CamSpecialAmendmentRemraks
        {
            get { return _cam_special_amendment_remraks; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSpecialAmendmentRemraks", value, value.ToString());

                _cam_special_amendment_remraks = value;
            }
        }

        /// <summary>
        /// CAM_Territory_IsChange
        /// </summary>		
        public bool? CamTerritoryIsChange
        {
            get { return _cam_territory_ischange; }
            set { _cam_territory_ischange = value; }
        }

        /// <summary>
        /// 授权区域修改备注
        /// </summary>		
        public string CamTerritoryRemarks
        {
            get { return _cam_territory_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamTerritoryRemarks", value, value.ToString());

                _cam_territory_remarks = value;
            }
        }

        /// <summary>
        /// CAM_Quota_IsChange
        /// </summary>		
        public bool? CamQuotaIsChange
        {
            get { return _cam_quota_ischange; }
            set { _cam_quota_ischange = value; }
        }

        /// <summary>
        /// 指标修改备注
        /// </summary>		
        public string CamQuotaRemakrs
        {
            get { return _cam_quota_remakrs; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamQuotaRemakrs", value, value.ToString());

                _cam_quota_remakrs = value;
            }
        }

        /// <summary>
        /// CAM_Payment_IsChange
        /// </summary>		
        public bool? CamPaymentIsChange
        {
            get { return _cam_payment_ischange; }
            set { _cam_payment_ischange = value; }
        }

        /// <summary>
        /// CAM_Payment_Old
        /// </summary>		
        public string CamPaymentOld
        {
            get { return _cam_payment_old; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPaymentOld", value, value.ToString());

                _cam_payment_old = value;
            }
        }

        /// <summary>
        /// CAM_Payment_New
        /// </summary>		
        public string CamPaymentNew
        {
            get { return _cam_payment_new; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPaymentNew", value, value.ToString());

                _cam_payment_new = value;
            }
        }

        /// <summary>
        /// CAM_Payment_Remarks
        /// </summary>		
        public string CamPaymentRemarks
        {
            get { return _cam_payment_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamPaymentRemarks", value, value.ToString());

                _cam_payment_remarks = value;
            }
        }

        /// <summary>
        /// CAM_Credit_Limit_IsChange
        /// </summary>		
        public bool? CamCreditLimitIsChange
        {
            get { return _cam_credit_limit_ischange; }
            set { _cam_credit_limit_ischange = value; }
        }

        /// <summary>
        /// CAM_Credit_Limit_Old
        /// </summary>		
        public string CamCreditLimitOld
        {
            get { return _cam_credit_limit_old; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamCreditLimitOld", value, value.ToString());

                _cam_credit_limit_old = value;
            }
        }

        /// <summary>
        /// CAM_Credit_Limit_New
        /// </summary>		
        public string CamCreditLimitNew
        {
            get { return _cam_credit_limit_new; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamCreditLimitNew", value, value.ToString());

                _cam_credit_limit_new = value;
            }
        }

        /// <summary>
        /// CAM_Security_Deposit_Old
        /// </summary>		
        public string CamSecurityDepositOld
        {
            get { return _cam_security_deposit_old; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSecurityDepositOld", value, value.ToString());

                _cam_security_deposit_old = value;
            }
        }

        /// <summary>
        /// CAM_Security_Deposit_New
        /// </summary>		
        public string CamSecurityDepositNew
        {
            get { return _cam_security_deposit_new; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSecurityDepositNew", value, value.ToString());

                _cam_security_deposit_new = value;
            }
        }

        /// <summary>
        /// CAM_Account_Old
        /// </summary>		
        public string CamAccountOld
        {
            get { return _cam_account_old; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CamAccountOld", value, value.ToString());

                _cam_account_old = value;
            }
        }

        /// <summary>
        /// CAM_Account_New
        /// </summary>		
        public string CamAccountNew
        {
            get { return _cam_account_new; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CamAccountNew", value, value.ToString());

                _cam_account_new = value;
            }
        }

        /// <summary>
        /// CAM_Guarantee_Way_New
        /// </summary>		
        public string CamGuaranteeWayNew
        {
            get { return _cam_guarantee_way_new; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamGuaranteeWayNew", value, value.ToString());

                _cam_guarantee_way_new = value;
            }
        }

        /// <summary>
        /// CAM_Guarantee_Way_Old
        /// </summary>		
        public string CamGuaranteeWayOld
        {
            get { return _cam_guarantee_way_old; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamGuaranteeWayOld", value, value.ToString());

                _cam_guarantee_way_old = value;
            }
        }

        /// <summary>
        /// CAM_Guarantee_Way_Remark
        /// </summary>		
        public string CamGuaranteeWayRemark
        {
            get { return _cam_guarantee_way_remark; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamGuaranteeWayRemark", value, value.ToString());

                _cam_guarantee_way_remark = value;
            }
        }

        /// <summary>
        /// CAM_Attachment_Old
        /// </summary>		
        public string CamAttachmentOld
        {
            get { return _cam_attachment_old; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamAttachmentOld", value, value.ToString());

                _cam_attachment_old = value;
            }
        }

        /// <summary>
        /// CAM_Attachment_New
        /// </summary>		
        public string CamAttachmentNew
        {
            get { return _cam_attachment_new; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CamAttachmentNew", value, value.ToString());

                _cam_attachment_new = value;
            }
        }

        /// <summary>
        /// CAM_HasConflict
        /// </summary>		
        public bool? CamHasConflict
        {
            get { return _cam_hasconflict; }
            set { _cam_hasconflict = value; }
        }

        /// <summary>
        /// CAM_Conflict_Remarks
        /// </summary>		
        public string CamConflictRemarks
        {
            get { return _cam_conflict_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamConflictRemarks", value, value.ToString());

                _cam_conflict_remarks = value;
            }
        }

        /// <summary>
        /// CAM_Business_Handover
        /// </summary>		
        public string CamBusinessHandover
        {
            get { return _cam_business_handover; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CamBusinessHandover", value, value.ToString());

                _cam_business_handover = value;
            }
        }

        /// <summary>
        /// CAM_Supplementary_Letter
        /// </summary>		
        public bool? CamSupplementaryLetter
        {
            get { return _cam_supplementary_letter; }
            set { _cam_supplementary_letter = value; }
        }

        /// <summary>
        /// CAM_RSM_PrintName
        /// </summary>		
        public string CamRsmPrintName
        {
            get { return _cam_rsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamRsmPrintName", value, value.ToString());

                _cam_rsm_printname = value;
            }
        }

        /// <summary>
        /// CAM_RSM_Date
        /// </summary>		
        public DateTime? CamRsmDate
        {
            get { return _cam_rsm_date; }
            set { _cam_rsm_date = value; }
        }

        /// <summary>
        /// CAM_NCM_PrintName
        /// </summary>		
        public string CamNcmPrintName
        {
            get { return _cam_ncm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamNcmPrintName", value, value.ToString());

                _cam_ncm_printname = value;
            }
        }

        /// <summary>
        /// CAM_NCM_Date
        /// </summary>		
        public DateTime? CamNcmDate
        {
            get { return _cam_ncm_date; }
            set { _cam_ncm_date = value; }
        }

        /// <summary>
        /// CAM_NSM_PrintName
        /// </summary>		
        public string CamNsmPrintName
        {
            get { return _cam_nsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamNsmPrintName", value, value.ToString());

                _cam_nsm_printname = value;
            }
        }

        /// <summary>
        /// CAM_NSM_Date
        /// </summary>		
        public DateTime? CamNsmDate
        {
            get { return _cam_nsm_date; }
            set { _cam_nsm_date = value; }
        }

        /// <summary>
        /// CAM_NCMForPart2_PrintName
        /// </summary>		
        public string CamNcmForPart2PrintName
        {
            get { return _cam_ncmforpart2_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamNcmForPart2PrintName", value, value.ToString());

                _cam_ncmforpart2_printname = value;
            }
        }

        /// <summary>
        /// CAM_NCMForPart2_Date
        /// </summary>		
        public DateTime? CamNcmForPart2Date
        {
            get { return _cam_ncmforpart2_date; }
            set { _cam_ncmforpart2_date = value; }
        }

        /// <summary>
        /// CAM_DRM_PrintName
        /// </summary>		
        public string CamDrmPrintName
        {
            get { return _cam_drm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamDrmPrintName", value, value.ToString());

                _cam_drm_printname = value;
            }
        }

        /// <summary>
        /// CAM_DRM_Date
        /// </summary>		
        public DateTime? CamDrmDate
        {
            get { return _cam_drm_date; }
            set { _cam_drm_date = value; }
        }

        /// <summary>
        /// CAM_FC_PrintName
        /// </summary>		
        public string CamFcPrintName
        {
            get { return _cam_fc_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamFcPrintName", value, value.ToString());

                _cam_fc_printname = value;
            }
        }

        /// <summary>
        /// CAM_FC_Date
        /// </summary>		
        public DateTime? CamFcDate
        {
            get { return _cam_fc_date; }
            set { _cam_fc_date = value; }
        }

        /// <summary>
        /// CAM_CD_PrintName
        /// </summary>		
        public string CamCdPrintName
        {
            get { return _cam_cd_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamCdPrintName", value, value.ToString());

                _cam_cd_printname = value;
            }
        }

        /// <summary>
        /// CAM_CD_Date
        /// </summary>		
        public DateTime? CamCdDate
        {
            get { return _cam_cd_date; }
            set { _cam_cd_date = value; }
        }

        /// <summary>
        /// CAM_VPF_PrintName
        /// </summary>		
        public string CamVpfPrintName
        {
            get { return _cam_vpf_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamVpfPrintName", value, value.ToString());

                _cam_vpf_printname = value;
            }
        }

        /// <summary>
        /// CAM_VPF_Date
        /// </summary>		
        public DateTime? CamVpfDate
        {
            get { return _cam_vpf_date; }
            set { _cam_vpf_date = value; }
        }

        /// <summary>
        /// CAM_VPAP_PrintName
        /// </summary>		
        public string CamVpapPrintName
        {
            get { return _cam_vpap_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamVpapPrintName", value, value.ToString());

                _cam_vpap_printname = value;
            }
        }

        /// <summary>
        /// CAM_VPAP_Date
        /// </summary>		
        public DateTime? CamVpapDate
        {
            get { return _cam_vpap_date; }
            set { _cam_vpap_date = value; }
        }

        /// <summary>
        /// 状态
        /// </summary>		
        public string CamStatus
        {
            get { return _cam_status; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CamStatus", value, value.ToString());

                _cam_status = value;
            }
        }

        /// <summary>
        /// 合同类型
        /// </summary>		
        public string CamType
        {
            get { return _cam_type; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CamType", value, value.ToString());

                _cam_type = value;
            }
        }

        /// <summary>
        /// 创建日期
        /// </summary>		
        public DateTime? CamCreateDate
        {
            get { return _cam_create_date; }
            set { _cam_create_date = value; }
        }

        /// <summary>
        /// 创建人
        /// </summary>		
        public Guid? CamCreateUser
        {
            get { return _cam_create_user; }
            set { _cam_create_user = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? CamUpdateUser
        {
            get { return _cam_update_user; }
            set { _cam_update_user = value; }
        }

        /// <summary>
        /// 更新日期
        /// </summary>		
        public DateTime? CamUpdateDate
        {
            get { return _cam_update_date; }
            set { _cam_update_date = value; }
        }


         /// <summary>
        /// 合同分类
        /// </summary>		
        public string CamSubDepid
        {
            get { return _cam_subdepid; }
            set {

                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSubDepid", value, value.ToString());

                _cam_subdepid = value;
            }
        }

        public string CamSubdepName
        {
            get { return _cam_subdepname; }
            set
            {

                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CamSubdepName", value, value.ToString());

                _cam_subdepname = value;
            }
        }

        #endregion 
		
		
	}
}
