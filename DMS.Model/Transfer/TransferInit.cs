/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : TransferInit
 * Created Time: 2013/12/21 10:40:28
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	TransferInit
	/// </summary>
	[Serializable]
	public class TransferInit : BaseModel
	{
		#region Private Members 24
		
		private Guid _id; 
		private Guid? _user; 
		private DateTime? _uploaddate; 
		private int? _linenbr; 
		private string _filename; 
		private bool? _errorflag; 
		private string _errordescription; 
		private string _warehousefrom; 
		private string _warehouseto;
        private string _articlenumber; 
		private string _lotnumber; 
		private string _transferqty; 
		private Guid? _dma_id; 
		private Guid? _cfn_id; 
		private Guid? _bum_id; 
		private Guid? _whmfrom_id; 
		private Guid? _whmto_id; 
		private string _whmtypefrom; 
		private string _whmtypeto;
        private string _articlenumber_errmsg; 
		private string _transferqty_errmsg; 
		private string _warehousefrom_errmsg; 
		private string _warehouseto_errmsg; 
		private string _lotnumber_errmsg;
        private string _qrcode;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public TransferInit()
		{
			_id = Guid.Empty; 
			_user = null;
			_uploaddate = null;
			_linenbr = null;
			_filename = null; 
			_errorflag = null;
			_errordescription = null; 
			_warehousefrom = null; 
			_warehouseto = null;
            _articlenumber = null; 
			_lotnumber = null; 
			_transferqty = null; 
			_dma_id = null;
			_cfn_id = null;
			_bum_id = null;
			_whmfrom_id = null;
			_whmto_id = null;
			_whmtypefrom = null; 
			_whmtypeto = null;
            _articlenumber_errmsg = null; 
			_transferqty_errmsg = null; 
			_warehousefrom_errmsg = null; 
			_warehouseto_errmsg = null; 
			_lotnumber_errmsg = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// TRI_ID
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// TRI_USER
		/// </summary>		
		public Guid? User
		{
			get { return _user; }
			set { _user = value; }
		}
			
		/// <summary>
		/// TRI_UploadDate
		/// </summary>		
		public DateTime? UploadDate
		{
			get { return _uploaddate; }
			set { _uploaddate = value; }
		}
			
		/// <summary>
		/// TRI_LineNbr
		/// </summary>		
		public int? LineNbr
		{
			get { return _linenbr; }
			set { _linenbr = value; }
		}
			
		/// <summary>
		/// TRI_FileName
		/// </summary>		
		public string FileName
		{
			get { return _filename; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for FileName", value, value.ToString());
				
				_filename = value;
			}
		}
			
		/// <summary>
		/// TRI_ErrorFlag
		/// </summary>		
		public bool? ErrorFlag
		{
			get { return _errorflag; }
			set { _errorflag = value; }
		}
			
		/// <summary>
		/// TRI_ErrorDescription
		/// </summary>		
		public string ErrorDescription
		{
			get { return _errordescription; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ErrorDescription", value, value.ToString());
				
				_errordescription = value;
			}
		}
			
		/// <summary>
		/// TRI_WarehouseFrom
		/// </summary>		
		public string WarehouseFrom
		{
			get { return _warehousefrom; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for WarehouseFrom", value, value.ToString());
				
				_warehousefrom = value;
			}
		}
			
		/// <summary>
		/// TRI_WarehouseTo
		/// </summary>		
		public string WarehouseTo
		{
			get { return _warehouseto; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for WarehouseTo", value, value.ToString());
				
				_warehouseto = value;
			}
		}
			
		/// <summary>
		/// TRI_ArticleNum
		/// </summary>		
        public string ArticleNumber
		{
            get { return _articlenumber; }
			set	
			{
				if( value!= null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumber", value, value.ToString());

                _articlenumber = value;
			}
		}
			
		/// <summary>
		/// TRI_LotNumber
		/// </summary>		
		public string LotNumber
		{
			get { return _lotnumber; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());
				
				_lotnumber = value;
			}
		}
			
		/// <summary>
		/// TRI_TransferQty
		/// </summary>		
		public string TransferQty
		{
			get { return _transferqty; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for TransferQty", value, value.ToString());
				
				_transferqty = value;
			}
		}
			
		/// <summary>
		/// TRI_DMA_ID
		/// </summary>		
		public Guid? DmaId
		{
			get { return _dma_id; }
			set { _dma_id = value; }
		}
			
		/// <summary>
		/// TRI_CFN_ID
		/// </summary>		
		public Guid? CfnId
		{
			get { return _cfn_id; }
			set { _cfn_id = value; }
		}
			
		/// <summary>
		/// TRI_BUM_ID
		/// </summary>		
		public Guid? BumId
		{
			get { return _bum_id; }
			set { _bum_id = value; }
		}
			
		/// <summary>
		/// TRI_WHMFrom_ID
		/// </summary>		
		public Guid? WhmFromId
		{
			get { return _whmfrom_id; }
			set { _whmfrom_id = value; }
		}
			
		/// <summary>
		/// TRI_WHMTo_ID
		/// </summary>		
		public Guid? WhmToId
		{
			get { return _whmto_id; }
			set { _whmto_id = value; }
		}
			
		/// <summary>
		/// TRI_WHMTypeFrom
		/// </summary>		
		public string WhmTypeFrom
		{
			get { return _whmtypefrom; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for WhmTypeFrom", value, value.ToString());
				
				_whmtypefrom = value;
			}
		}
			
		/// <summary>
		/// TRI_WHMTypeTo
		/// </summary>		
		public string WhmTypeTo
		{
			get { return _whmtypeto; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for WhmTypeTo", value, value.ToString());
				
				_whmtypeto = value;
			}
		}
			
		/// <summary>
		/// TRI_ArticleNum_ErrMsg
		/// </summary>		
        public string ArticleNumberErrMsg
		{
            get { return _articlenumber_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ArticleNumberErrMsg", value, value.ToString());

                _articlenumber_errmsg = value;
			}
		}
			
		/// <summary>
		/// TRI_TransferQty_ErrMsg
		/// </summary>		
		public string TransferQtyErrMsg
		{
			get { return _transferqty_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for TransferQtyErrMsg", value, value.ToString());
				
				_transferqty_errmsg = value;
			}
		}
			
		/// <summary>
		/// TRI_WarehouseFrom_ErrMsg
		/// </summary>		
		public string WarehouseFromErrMsg
		{
			get { return _warehousefrom_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for WarehouseFromErrMsg", value, value.ToString());
				
				_warehousefrom_errmsg = value;
			}
		}
			
		/// <summary>
		/// TRI_WarehouseTo_ErrMsg
		/// </summary>		
		public string WarehouseToErrMsg
		{
			get { return _warehouseto_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for WarehouseToErrMsg", value, value.ToString());
				
				_warehouseto_errmsg = value;
			}
		}
			
		/// <summary>
		/// TRI_LotNumber_ErrMsg
		/// </summary>		
		public string LotNumberErrMsg
		{
			get { return _lotnumber_errmsg; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for LotNumberErrMsg", value, value.ToString());
				
				_lotnumber_errmsg = value;
			}
		}

        public string QRCode
        {
            get { return _qrcode; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for QRCode", value, value.ToString());

                _qrcode = value;
            }
        }
	
		
		#endregion 
		
		
		
		
		
	}
}
