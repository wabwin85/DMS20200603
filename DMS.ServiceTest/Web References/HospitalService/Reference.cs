//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DMS.ServiceTest.HospitalService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HospitalSoap", Namespace="http://tempuri.org/")]
    public partial class Hospital : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback DownloadDealerInventoryWithQROperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadChannelLogisticInfoWithQROperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadHospitalTransactionWithQROperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDealerInventoryWithQRForRedCrossOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRedCrossHospitalTransactionWithQROperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Hospital() {
            this.Url = global::DMS.ServiceTest.Properties.Settings.Default.DMS_ServiceTest_HospitalService_Hospital;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DownloadDealerInventoryWithQRCompletedEventHandler DownloadDealerInventoryWithQRCompleted;
        
        /// <remarks/>
        public event DownloadChannelLogisticInfoWithQRCompletedEventHandler DownloadChannelLogisticInfoWithQRCompleted;
        
        /// <remarks/>
        public event UploadHospitalTransactionWithQRCompletedEventHandler UploadHospitalTransactionWithQRCompleted;
        
        /// <remarks/>
        public event DownloadDealerInventoryWithQRForRedCrossCompletedEventHandler DownloadDealerInventoryWithQRForRedCrossCompleted;
        
        /// <remarks/>
        public event UploadRedCrossHospitalTransactionWithQRCompletedEventHandler UploadRedCrossHospitalTransactionWithQRCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadDealerInventoryWithQR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadDealerInventoryWithQR(string qrcode, string dealercode) {
            object[] results = this.Invoke("DownloadDealerInventoryWithQR", new object[] {
                        qrcode,
                        dealercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDealerInventoryWithQRAsync(string qrcode, string dealercode) {
            this.DownloadDealerInventoryWithQRAsync(qrcode, dealercode, null);
        }
        
        /// <remarks/>
        public void DownloadDealerInventoryWithQRAsync(string qrcode, string dealercode, object userState) {
            if ((this.DownloadDealerInventoryWithQROperationCompleted == null)) {
                this.DownloadDealerInventoryWithQROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDealerInventoryWithQROperationCompleted);
            }
            this.InvokeAsync("DownloadDealerInventoryWithQR", new object[] {
                        qrcode,
                        dealercode}, this.DownloadDealerInventoryWithQROperationCompleted, userState);
        }
        
        private void OnDownloadDealerInventoryWithQROperationCompleted(object arg) {
            if ((this.DownloadDealerInventoryWithQRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDealerInventoryWithQRCompleted(this, new DownloadDealerInventoryWithQRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadChannelLogisticInfoWithQR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadChannelLogisticInfoWithQR(string qrcode) {
            object[] results = this.Invoke("DownloadChannelLogisticInfoWithQR", new object[] {
                        qrcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadChannelLogisticInfoWithQRAsync(string qrcode) {
            this.DownloadChannelLogisticInfoWithQRAsync(qrcode, null);
        }
        
        /// <remarks/>
        public void DownloadChannelLogisticInfoWithQRAsync(string qrcode, object userState) {
            if ((this.DownloadChannelLogisticInfoWithQROperationCompleted == null)) {
                this.DownloadChannelLogisticInfoWithQROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadChannelLogisticInfoWithQROperationCompleted);
            }
            this.InvokeAsync("DownloadChannelLogisticInfoWithQR", new object[] {
                        qrcode}, this.DownloadChannelLogisticInfoWithQROperationCompleted, userState);
        }
        
        private void OnDownloadChannelLogisticInfoWithQROperationCompleted(object arg) {
            if ((this.DownloadChannelLogisticInfoWithQRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadChannelLogisticInfoWithQRCompleted(this, new DownloadChannelLogisticInfoWithQRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadHospitalTransactionWithQR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadHospitalTransactionWithQR(string xml) {
            object[] results = this.Invoke("UploadHospitalTransactionWithQR", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadHospitalTransactionWithQRAsync(string xml) {
            this.UploadHospitalTransactionWithQRAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadHospitalTransactionWithQRAsync(string xml, object userState) {
            if ((this.UploadHospitalTransactionWithQROperationCompleted == null)) {
                this.UploadHospitalTransactionWithQROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadHospitalTransactionWithQROperationCompleted);
            }
            this.InvokeAsync("UploadHospitalTransactionWithQR", new object[] {
                        xml}, this.UploadHospitalTransactionWithQROperationCompleted, userState);
        }
        
        private void OnUploadHospitalTransactionWithQROperationCompleted(object arg) {
            if ((this.UploadHospitalTransactionWithQRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadHospitalTransactionWithQRCompleted(this, new UploadHospitalTransactionWithQRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadDealerInventoryWithQRForRedCross", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadDealerInventoryWithQRForRedCross(string qrcode, string upn, string merchandisename, string supplyid, string supplyname) {
            object[] results = this.Invoke("DownloadDealerInventoryWithQRForRedCross", new object[] {
                        qrcode,
                        upn,
                        merchandisename,
                        supplyid,
                        supplyname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDealerInventoryWithQRForRedCrossAsync(string qrcode, string upn, string merchandisename, string supplyid, string supplyname) {
            this.DownloadDealerInventoryWithQRForRedCrossAsync(qrcode, upn, merchandisename, supplyid, supplyname, null);
        }
        
        /// <remarks/>
        public void DownloadDealerInventoryWithQRForRedCrossAsync(string qrcode, string upn, string merchandisename, string supplyid, string supplyname, object userState) {
            if ((this.DownloadDealerInventoryWithQRForRedCrossOperationCompleted == null)) {
                this.DownloadDealerInventoryWithQRForRedCrossOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDealerInventoryWithQRForRedCrossOperationCompleted);
            }
            this.InvokeAsync("DownloadDealerInventoryWithQRForRedCross", new object[] {
                        qrcode,
                        upn,
                        merchandisename,
                        supplyid,
                        supplyname}, this.DownloadDealerInventoryWithQRForRedCrossOperationCompleted, userState);
        }
        
        private void OnDownloadDealerInventoryWithQRForRedCrossOperationCompleted(object arg) {
            if ((this.DownloadDealerInventoryWithQRForRedCrossCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDealerInventoryWithQRForRedCrossCompleted(this, new DownloadDealerInventoryWithQRForRedCrossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadRedCrossHospitalTransactionWithQR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadRedCrossHospitalTransactionWithQR(string xml) {
            object[] results = this.Invoke("UploadRedCrossHospitalTransactionWithQR", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRedCrossHospitalTransactionWithQRAsync(string xml) {
            this.UploadRedCrossHospitalTransactionWithQRAsync(xml, null);
        }
        
        /// <remarks/>
        public void UploadRedCrossHospitalTransactionWithQRAsync(string xml, object userState) {
            if ((this.UploadRedCrossHospitalTransactionWithQROperationCompleted == null)) {
                this.UploadRedCrossHospitalTransactionWithQROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRedCrossHospitalTransactionWithQROperationCompleted);
            }
            this.InvokeAsync("UploadRedCrossHospitalTransactionWithQR", new object[] {
                        xml}, this.UploadRedCrossHospitalTransactionWithQROperationCompleted, userState);
        }
        
        private void OnUploadRedCrossHospitalTransactionWithQROperationCompleted(object arg) {
            if ((this.UploadRedCrossHospitalTransactionWithQRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRedCrossHospitalTransactionWithQRCompleted(this, new UploadRedCrossHospitalTransactionWithQRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DownloadDealerInventoryWithQRCompletedEventHandler(object sender, DownloadDealerInventoryWithQRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDealerInventoryWithQRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDealerInventoryWithQRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DownloadChannelLogisticInfoWithQRCompletedEventHandler(object sender, DownloadChannelLogisticInfoWithQRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadChannelLogisticInfoWithQRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadChannelLogisticInfoWithQRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UploadHospitalTransactionWithQRCompletedEventHandler(object sender, UploadHospitalTransactionWithQRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadHospitalTransactionWithQRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadHospitalTransactionWithQRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DownloadDealerInventoryWithQRForRedCrossCompletedEventHandler(object sender, DownloadDealerInventoryWithQRForRedCrossCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDealerInventoryWithQRForRedCrossCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDealerInventoryWithQRForRedCrossCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UploadRedCrossHospitalTransactionWithQRCompletedEventHandler(object sender, UploadRedCrossHospitalTransactionWithQRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRedCrossHospitalTransactionWithQRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRedCrossHospitalTransactionWithQRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591