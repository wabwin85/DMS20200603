/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ContractRenewal
 * Created Time: 2013/12/15 10:38:29
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ContractRenewal
	/// </summary>
	[Serializable]
    public class ContractRenewal : BaseModel
	{
        #region Private Members 75

        private Guid _cre_id;
        private Guid _cre_cm_id;
        private Guid _cre_dma_id;
        private string _cre_division;
        private int? _cre_markettype;
        private bool? _cre_fromisupdate;
        private string _cre_dealer_name;
        private string _cre_contracttype_current;
        private string _cre_contracttype_renewal;
        private string _cre_contracttype_remarks;
        private string _cre_bscentity_current;
        private string _cre_bscentity_renewal;
        private string _cre_bscentity_remarks;
        private string _cre_exclusiveness_current;
        private string _cre_exclusiveness_renewal;
        private string _cre_exclusiveness_remarks;
        private DateTime? _cre_agrmt_effectivedate_current;
        private DateTime? _cre_agrmt_effectivedate_renewal;
        private DateTime? _cre_agrmt_expirationdate_current;
        private DateTime? _cre_agrmt_expirationdate_renewal;
        private string _cre_agreementterm_remarks;
        private string _cre_productline_old;
        private string _cre_productline_new;
        private string _cre_productline_remarks;
        private string _cre_prices_current;
        private string _cre_prices_renewal;
        private string _cre_prices_remarks;
        private string _cre_territory_remarks;
        private string _cre_quota_remakrs;
        private string _cre_specialsales_current;
        private string _cre_specialsales_renewal;
        private string _cre_specialsales_remarks;
        private string _cre_payment_current;
        private string _cre_payment_renewal;
        private string _cre_payment_remarks;
        private string _cre_creditlimits_current;
        private string _cre_creditlimits_renewal;
        private string _cre_creditlimits_remarks;
        private string _cre_account_current;
        private string _cre_account_renewal;
        private string _cre_guarantee_way_current;
        private string _cre_guarantee_way_renewal;
        private string _cre_guarantee_way_remark;
        private string _cre_securitydeposit_current;
        private string _cre_securitydeposit_renewal;
        private string _cre_securitydeposit_remarks;
        private string _cre_attachment_renewal;
        private bool? _cre_hasconflict;
        private string _cre_conflict_remarks;
        private string _cre_business_handover;
        private bool? _cre_hasiaf;
        private string _cre_rsm_printname;
        private DateTime? _cre_rsm_date;
        private string _cre_ncm_printname;
        private DateTime? _cre_ncm_date;
        private string _cre_nsm_printname;
        private DateTime? _cre_nsm_date;
        private string _cre_ncmforpart2_printname;
        private DateTime? _cre_ncmforpart2_date;
        private string _cre_drm_printname;
        private DateTime? _cre_drm_date;
        private string _cre_fc_printname;
        private DateTime? _cre_fc_date;
        private string _cre_cd_printname;
        private DateTime? _cre_cd_date;
        private string _cre_vpf_printname;
        private DateTime? _cre_vpf_date;
        private string _cre_vpap_printname;
        private DateTime? _cre_vpap_date;
        private string _cre_status;
        private string _cre_type;
        private DateTime? _cre_create_date;
        private Guid? _cre_create_user;
        private Guid? _cre_update_user;
        private DateTime? _cre_update_date;
        private string _cre_subdepid;
        private string _cre_subdepname;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ContractRenewal()
        {
            _cre_id = Guid.Empty;
            _cre_cm_id = Guid.Empty;
            _cre_dma_id = Guid.Empty;
            _cre_division = null;
            _cre_markettype = null;
            _cre_fromisupdate = null;
            _cre_dealer_name = null;
            _cre_contracttype_current = null;
            _cre_contracttype_renewal = null;
            _cre_contracttype_remarks = null;
            _cre_bscentity_current = null;
            _cre_bscentity_renewal = null;
            _cre_bscentity_remarks = null;
            _cre_exclusiveness_current = null;
            _cre_exclusiveness_renewal = null;
            _cre_exclusiveness_remarks = null;
            _cre_agrmt_effectivedate_current = null;
            _cre_agrmt_effectivedate_renewal = null;
            _cre_agrmt_expirationdate_current = null;
            _cre_agrmt_expirationdate_renewal = null;
            _cre_agreementterm_remarks = null;
            _cre_productline_old = null;
            _cre_productline_new = null;
            _cre_productline_remarks = null;
            _cre_prices_current = null;
            _cre_prices_renewal = null;
            _cre_prices_remarks = null;
            _cre_territory_remarks = null;
            _cre_quota_remakrs = null;
            _cre_specialsales_current = null;
            _cre_specialsales_renewal = null;
            _cre_specialsales_remarks = null;
            _cre_payment_current = null;
            _cre_payment_renewal = null;
            _cre_payment_remarks = null;
            _cre_creditlimits_current = null;
            _cre_creditlimits_renewal = null;
            _cre_creditlimits_remarks = null;
            _cre_account_current = null;
            _cre_account_renewal = null;
            _cre_guarantee_way_current = null;
            _cre_guarantee_way_renewal = null;
            _cre_guarantee_way_remark = null;
            _cre_securitydeposit_current = null;
            _cre_securitydeposit_renewal = null;
            _cre_securitydeposit_remarks = null;
            _cre_attachment_renewal = null;
            _cre_hasconflict = null;
            _cre_conflict_remarks = null;
            _cre_business_handover = null;
            _cre_hasiaf = null;
            _cre_rsm_printname = null;
            _cre_rsm_date = null;
            _cre_ncm_printname = null;
            _cre_ncm_date = null;
            _cre_nsm_printname = null;
            _cre_nsm_date = null;
            _cre_ncmforpart2_printname = null;
            _cre_ncmforpart2_date = null;
            _cre_drm_printname = null;
            _cre_drm_date = null;
            _cre_fc_printname = null;
            _cre_fc_date = null;
            _cre_cd_printname = null;
            _cre_cd_date = null;
            _cre_vpf_printname = null;
            _cre_vpf_date = null;
            _cre_vpap_printname = null;
            _cre_vpap_date = null;
            _cre_status = null;
            _cre_type = null;
            _cre_create_date = null;
            _cre_create_user = null;
            _cre_update_user = null;
            _cre_update_date = null;
            _cre_subdepid = null;
            _cre_subdepname = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// CRE_ID
        /// </summary>		
        public Guid CreId
        {
            get { return _cre_id; }
            set { _cre_id = value; }
        }

        /// <summary>
        /// CRE_CM_ID
        /// </summary>		
        public Guid CreCmId
        {
            get { return _cre_cm_id; }
            set { _cre_cm_id = value; }
        }

        /// <summary>
        /// CRE_DMA_ID
        /// </summary>		
        public Guid CreDmaId
        {
            get { return _cre_dma_id; }
            set { _cre_dma_id = value; }
        }

        /// <summary>
        /// CRE_Division
        /// </summary>		
        public string CreDivision
        {
            get { return _cre_division; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreDivision", value, value.ToString());

                _cre_division = value;
            }
        }

        /// <summary>
        /// 市场类型
        /// </summary>		
        public int? CreMarketType
        {
            get { return _cre_markettype; }
            set { _cre_markettype = value; }
        }

        /// <summary>
        /// IAF 3 是否被修改
        /// </summary>		
        public bool? CreFromIsUpdate
        {
            get { return _cre_fromisupdate; }
            set { _cre_fromisupdate = value; }
        }

        /// <summary>
        /// CRE_Dealer_Name
        /// </summary>		
        public string CreDealerName
        {
            get { return _cre_dealer_name; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreDealerName", value, value.ToString());

                _cre_dealer_name = value;
            }
        }

        /// <summary>
        /// CRE_ContractType_Current
        /// </summary>		
        public string CreContractTypeCurrent
        {
            get { return _cre_contracttype_current; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreContractTypeCurrent", value, value.ToString());

                _cre_contracttype_current = value;
            }
        }

        /// <summary>
        /// CRE_ContractType_Renewal
        /// </summary>		
        public string CreContractTypeRenewal
        {
            get { return _cre_contracttype_renewal; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreContractTypeRenewal", value, value.ToString());

                _cre_contracttype_renewal = value;
            }
        }

        /// <summary>
        /// CRE_ContractType_Remarks
        /// </summary>		
        public string CreContractTypeRemarks
        {
            get { return _cre_contracttype_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreContractTypeRemarks", value, value.ToString());

                _cre_contracttype_remarks = value;
            }
        }

        /// <summary>
        /// CRE_BSCEntity_Current
        /// </summary>		
        public string CreBscEntityCurrent
        {
            get { return _cre_bscentity_current; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreBscEntityCurrent", value, value.ToString());

                _cre_bscentity_current = value;
            }
        }

        /// <summary>
        /// CRE_BSCEntity_Renewal
        /// </summary>		
        public string CreBscEntityRenewal
        {
            get { return _cre_bscentity_renewal; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreBscEntityRenewal", value, value.ToString());

                _cre_bscentity_renewal = value;
            }
        }

        /// <summary>
        /// CRE_BSCEntity_Remarks
        /// </summary>		
        public string CreBscEntityRemarks
        {
            get { return _cre_bscentity_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreBscEntityRemarks", value, value.ToString());

                _cre_bscentity_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Exclusiveness_Current
        /// </summary>		
        public string CreExclusivenessCurrent
        {
            get { return _cre_exclusiveness_current; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreExclusivenessCurrent", value, value.ToString());

                _cre_exclusiveness_current = value;
            }
        }

        /// <summary>
        /// CRE_Exclusiveness_Renewal
        /// </summary>		
        public string CreExclusivenessRenewal
        {
            get { return _cre_exclusiveness_renewal; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreExclusivenessRenewal", value, value.ToString());

                _cre_exclusiveness_renewal = value;
            }
        }

        /// <summary>
        /// CRE_Exclusiveness_Remarks
        /// </summary>		
        public string CreExclusivenessRemarks
        {
            get { return _cre_exclusiveness_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreExclusivenessRemarks", value, value.ToString());

                _cre_exclusiveness_remarks = value;
            }
        }

        /// <summary>
        /// Agreement Term Effective Date Current
        /// </summary>		
        public DateTime? CreAgrmtEffectiveDateCurrent
        {
            get { return _cre_agrmt_effectivedate_current; }
            set { _cre_agrmt_effectivedate_current = value; }
        }

        /// <summary>
        /// Agreement Term Effective Date Renewal
        /// </summary>		
        public DateTime? CreAgrmtEffectiveDateRenewal
        {
            get { return _cre_agrmt_effectivedate_renewal; }
            set { _cre_agrmt_effectivedate_renewal = value; }
        }

        /// <summary>
        /// Agreement Term Expiration Date Current
        /// </summary>		
        public DateTime? CreAgrmtExpirationDateCurrent
        {
            get { return _cre_agrmt_expirationdate_current; }
            set { _cre_agrmt_expirationdate_current = value; }
        }

        /// <summary>
        /// Agreement Term Expiration Date Renewal
        /// </summary>		
        public DateTime? CreAgrmtExpirationDateRenewal
        {
            get { return _cre_agrmt_expirationdate_renewal; }
            set { _cre_agrmt_expirationdate_renewal = value; }
        }

        /// <summary>
        /// CRE_AgreementTerm_Remarks
        /// </summary>		
        public string CreAgreementTermRemarks
        {
            get { return _cre_agreementterm_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreAgreementTermRemarks", value, value.ToString());

                _cre_agreementterm_remarks = value;
            }
        }

        /// <summary>
        /// CRE_ProductLine_Old
        /// </summary>		
        public string CreProductLineOld
        {
            get { return _cre_productline_old; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CreProductLineOld", value, value.ToString());

                _cre_productline_old = value;
            }
        }

        /// <summary>
        /// CRE_ProductLine_New
        /// </summary>		
        public string CreProductLineNew
        {
            get { return _cre_productline_new; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreProductLineNew", value, value.ToString());

                _cre_productline_new = value;
            }
        }

        /// <summary>
        /// 产品线修改备注
        /// </summary>		
        public string CreProductLineRemarks
        {
            get { return _cre_productline_remarks; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreProductLineRemarks", value, value.ToString());

                _cre_productline_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Prices_Current
        /// </summary>		
        public string CrePricesCurrent
        {
            get { return _cre_prices_current; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePricesCurrent", value, value.ToString());

                _cre_prices_current = value;
            }
        }

        /// <summary>
        /// CRE_Prices_Renewal
        /// </summary>		
        public string CrePricesRenewal
        {
            get { return _cre_prices_renewal; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePricesRenewal", value, value.ToString());

                _cre_prices_renewal = value;
            }
        }

        /// <summary>
        /// CRE_Prices_Remarks
        /// </summary>		
        public string CrePricesRemarks
        {
            get { return _cre_prices_remarks; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePricesRemarks", value, value.ToString());

                _cre_prices_remarks = value;
            }
        }

        /// <summary>
        /// 授权区域修改备注
        /// </summary>		
        public string CreTerritoryRemarks
        {
            get { return _cre_territory_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreTerritoryRemarks", value, value.ToString());

                _cre_territory_remarks = value;
            }
        }

        /// <summary>
        /// 指标修改备注
        /// </summary>		
        public string CreQuotaRemakrs
        {
            get { return _cre_quota_remakrs; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreQuotaRemakrs", value, value.ToString());

                _cre_quota_remakrs = value;
            }
        }

        /// <summary>
        /// CRE_SpecialSales_Current
        /// </summary>		
        public string CreSpecialSalesCurrent
        {
            get { return _cre_specialsales_current; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSpecialSalesCurrent", value, value.ToString());

                _cre_specialsales_current = value;
            }
        }

        /// <summary>
        /// CRE_SpecialSales_Renewal
        /// </summary>		
        public string CreSpecialSalesRenewal
        {
            get { return _cre_specialsales_renewal; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSpecialSalesRenewal", value, value.ToString());

                _cre_specialsales_renewal = value;
            }
        }

        /// <summary>
        /// CRE_SpecialSales_Remarks
        /// </summary>		
        public string CreSpecialSalesRemarks
        {
            get { return _cre_specialsales_remarks; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSpecialSalesRemarks", value, value.ToString());

                _cre_specialsales_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Payment_Current
        /// </summary>		
        public string CrePaymentCurrent
        {
            get { return _cre_payment_current; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePaymentCurrent", value, value.ToString());

                _cre_payment_current = value;
            }
        }

        /// <summary>
        /// CRE_Payment_Renewal
        /// </summary>		
        public string CrePaymentRenewal
        {
            get { return _cre_payment_renewal; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePaymentRenewal", value, value.ToString());

                _cre_payment_renewal = value;
            }
        }

        /// <summary>
        /// CRE_Payment_Remarks
        /// </summary>		
        public string CrePaymentRemarks
        {
            get { return _cre_payment_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CrePaymentRemarks", value, value.ToString());

                _cre_payment_remarks = value;
            }
        }

        /// <summary>
        /// CRE_CreditLimits_Current
        /// </summary>		
        public string CreCreditLimitsCurrent
        {
            get { return _cre_creditlimits_current; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreCreditLimitsCurrent", value, value.ToString());

                _cre_creditlimits_current = value;
            }
        }

        /// <summary>
        /// CRE_CreditLimits_Renewal
        /// </summary>		
        public string CreCreditLimitsRenewal
        {
            get { return _cre_creditlimits_renewal; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreCreditLimitsRenewal", value, value.ToString());

                _cre_creditlimits_renewal = value;
            }
        }

        /// <summary>
        /// CRE_CreditLimits_Remarks
        /// </summary>		
        public string CreCreditLimitsRemarks
        {
            get { return _cre_creditlimits_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreCreditLimitsRemarks", value, value.ToString());

                _cre_creditlimits_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Account_Current
        /// </summary>		
        public string CreAccountCurrent
        {
            get { return _cre_account_current; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CreAccountCurrent", value, value.ToString());

                _cre_account_current = value;
            }
        }

        /// <summary>
        /// CRE_Account_Renewal
        /// </summary>		
        public string CreAccountRenewal
        {
            get { return _cre_account_renewal; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CreAccountRenewal", value, value.ToString());

                _cre_account_renewal = value;
            }
        }

        /// <summary>
        /// CRE_Guarantee_Way_Current
        /// </summary>		
        public string CreGuaranteeWayCurrent
        {
            get { return _cre_guarantee_way_current; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreGuaranteeWayCurrent", value, value.ToString());

                _cre_guarantee_way_current = value;
            }
        }

        /// <summary>
        /// CRE_Guarantee_Way_Renewal
        /// </summary>		
        public string CreGuaranteeWayRenewal
        {
            get { return _cre_guarantee_way_renewal; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreGuaranteeWayRenewal", value, value.ToString());

                _cre_guarantee_way_renewal = value;
            }
        }

        /// <summary>
        /// CRE_Guarantee_Way_Remark
        /// </summary>		
        public string CreGuaranteeWayRemark
        {
            get { return _cre_guarantee_way_remark; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreGuaranteeWayRemark", value, value.ToString());

                _cre_guarantee_way_remark = value;
            }
        }

        /// <summary>
        /// CRE_SecurityDeposit_Current
        /// </summary>		
        public string CreSecurityDepositCurrent
        {
            get { return _cre_securitydeposit_current; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSecurityDepositCurrent", value, value.ToString());

                _cre_securitydeposit_current = value;
            }
        }

        /// <summary>
        /// CRE_SecurityDeposit_Renewal
        /// </summary>		
        public string CreSecurityDepositRenewal
        {
            get { return _cre_securitydeposit_renewal; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSecurityDepositRenewal", value, value.ToString());

                _cre_securitydeposit_renewal = value;
            }
        }

        /// <summary>
        /// CRE_SecurityDeposit_Remarks
        /// </summary>		
        public string CreSecurityDepositRemarks
        {
            get { return _cre_securitydeposit_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSecurityDepositRemarks", value, value.ToString());

                _cre_securitydeposit_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Attachment_Renewal
        /// </summary>		
        public string CreAttachmentRenewal
        {
            get { return _cre_attachment_renewal; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreAttachmentRenewal", value, value.ToString());

                _cre_attachment_renewal = value;
            }
        }

        /// <summary>
        /// CRE_HasConflict
        /// </summary>		
        public bool? CreHasConflict
        {
            get { return _cre_hasconflict; }
            set { _cre_hasconflict = value; }
        }

        /// <summary>
        /// CRE_Conflict_Remarks
        /// </summary>		
        public string CreConflictRemarks
        {
            get { return _cre_conflict_remarks; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreConflictRemarks", value, value.ToString());

                _cre_conflict_remarks = value;
            }
        }

        /// <summary>
        /// CRE_Business_Handover
        /// </summary>		
        public string CreBusinessHandover
        {
            get { return _cre_business_handover; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CreBusinessHandover", value, value.ToString());

                _cre_business_handover = value;
            }
        }

        /// <summary>
        /// CRE_HasIAF
        /// </summary>		
        public bool? CreHasiaf
        {
            get { return _cre_hasiaf; }
            set { _cre_hasiaf = value; }
        }

        /// <summary>
        /// CRE_RSM_PrintName
        /// </summary>		
        public string CreRsmPrintName
        {
            get { return _cre_rsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreRsmPrintName", value, value.ToString());

                _cre_rsm_printname = value;
            }
        }

        /// <summary>
        /// CRE_RSM_Date
        /// </summary>		
        public DateTime? CreRsmDate
        {
            get { return _cre_rsm_date; }
            set { _cre_rsm_date = value; }
        }

        /// <summary>
        /// CRE_NCM_PrintName
        /// </summary>		
        public string CreNcmPrintName
        {
            get { return _cre_ncm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreNcmPrintName", value, value.ToString());

                _cre_ncm_printname = value;
            }
        }

        /// <summary>
        /// CRE_NCM_Date
        /// </summary>		
        public DateTime? CreNcmDate
        {
            get { return _cre_ncm_date; }
            set { _cre_ncm_date = value; }
        }

        /// <summary>
        /// CRE_NSM_PrintName
        /// </summary>		
        public string CreNsmPrintName
        {
            get { return _cre_nsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreNsmPrintName", value, value.ToString());

                _cre_nsm_printname = value;
            }
        }

        /// <summary>
        /// CRE_NSM_Date
        /// </summary>		
        public DateTime? CreNsmDate
        {
            get { return _cre_nsm_date; }
            set { _cre_nsm_date = value; }
        }

        /// <summary>
        /// CRE_NCMForPart2_PrintName
        /// </summary>		
        public string CreNcmForPart2PrintName
        {
            get { return _cre_ncmforpart2_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreNcmForPart2PrintName", value, value.ToString());

                _cre_ncmforpart2_printname = value;
            }
        }

        /// <summary>
        /// CRE_NCMForPart2_Date
        /// </summary>		
        public DateTime? CreNcmForPart2Date
        {
            get { return _cre_ncmforpart2_date; }
            set { _cre_ncmforpart2_date = value; }
        }

        /// <summary>
        /// CRE_DRM_PrintName
        /// </summary>		
        public string CreDrmPrintName
        {
            get { return _cre_drm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreDrmPrintName", value, value.ToString());

                _cre_drm_printname = value;
            }
        }

        /// <summary>
        /// CRE_DRM_Date
        /// </summary>		
        public DateTime? CreDrmDate
        {
            get { return _cre_drm_date; }
            set { _cre_drm_date = value; }
        }

        /// <summary>
        /// CRE_FC_PrintName
        /// </summary>		
        public string CreFcPrintName
        {
            get { return _cre_fc_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreFcPrintName", value, value.ToString());

                _cre_fc_printname = value;
            }
        }

        /// <summary>
        /// CRE_FC_Date
        /// </summary>		
        public DateTime? CreFcDate
        {
            get { return _cre_fc_date; }
            set { _cre_fc_date = value; }
        }

        /// <summary>
        /// CRE_CD_PrintName
        /// </summary>		
        public string CreCdPrintName
        {
            get { return _cre_cd_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreCdPrintName", value, value.ToString());

                _cre_cd_printname = value;
            }
        }

        /// <summary>
        /// CRE_CD_Date
        /// </summary>		
        public DateTime? CreCdDate
        {
            get { return _cre_cd_date; }
            set { _cre_cd_date = value; }
        }

        /// <summary>
        /// CRE_VPF_PrintName
        /// </summary>		
        public string CreVpfPrintName
        {
            get { return _cre_vpf_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreVpfPrintName", value, value.ToString());

                _cre_vpf_printname = value;
            }
        }

        /// <summary>
        /// CRE_VPF_Date
        /// </summary>		
        public DateTime? CreVpfDate
        {
            get { return _cre_vpf_date; }
            set { _cre_vpf_date = value; }
        }

        /// <summary>
        /// CRE_VPAP_PrintName
        /// </summary>		
        public string CreVpapPrintName
        {
            get { return _cre_vpap_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreVpapPrintName", value, value.ToString());

                _cre_vpap_printname = value;
            }
        }

        /// <summary>
        /// CRE_VPAP_Date
        /// </summary>		
        public DateTime? CreVpapDate
        {
            get { return _cre_vpap_date; }
            set { _cre_vpap_date = value; }
        }

        /// <summary>
        /// 状态
        /// </summary>		
        public string CreStatus
        {
            get { return _cre_status; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CreStatus", value, value.ToString());

                _cre_status = value;
            }
        }

        /// <summary>
        /// 合同类型
        /// </summary>		
        public string CreType
        {
            get { return _cre_type; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CreType", value, value.ToString());

                _cre_type = value;
            }
        }

        /// <summary>
        /// 创建日期
        /// </summary>		
        public DateTime? CreCreateDate
        {
            get { return _cre_create_date; }
            set { _cre_create_date = value; }
        }

        /// <summary>
        /// 创建人
        /// </summary>		
        public Guid? CreCreateUser
        {
            get { return _cre_create_user; }
            set { _cre_create_user = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? CreUpdateUser
        {
            get { return _cre_update_user; }
            set { _cre_update_user = value; }
        }

        /// <summary>
        /// 更新日期
        /// </summary>		
        public DateTime? CreUpdateDate
        {
            get { return _cre_update_date; }
            set { _cre_update_date = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CreSubDepid
        {
            get { return _cre_subdepid; }
            set {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSubDepid", value, value.ToString());

                _cre_subdepid = value;
            }
        }

        public string CreSubdepName
        {
            get { return _cre_subdepname; }
            set {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CreSubdepName", value, value.ToString());

                _cre_subdepname = value;
            }
        }
        


        #endregion 
		
		
	}
}
