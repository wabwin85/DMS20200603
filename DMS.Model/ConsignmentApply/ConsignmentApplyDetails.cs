/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentApplyDetails
 * Created Time: 2015/12/1 17:04:48
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ConsignmentApplyDetails
    /// </summary>
    [Serializable]
    public class ConsignmentApplyDetails : BaseModel
    {
        #region Private Members 15

        private Guid _id;
        private Guid _cah_id;
        private Guid? _cfn_id;
        private Guid? _cfnset_id;
        private string _uom;
        private decimal? _qty;
        private decimal? _price;
        private decimal? _actual_price;
        private decimal? _amount;
        private string _remark;
        private string _lotnumber;
        private string _barcode;
        private Guid? _barcode_id;
        private Guid? _iah_id;
        private Guid? _ial_id;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConsignmentApplyDetails()
        {
            _id = Guid.Empty;
            _cah_id = Guid.Empty;
            _cfn_id = null;
            _cfnset_id = null;
            _uom = null;
            _qty = null;
            _price = null;
            _actual_price = null;
            _amount = null;
            _remark = null;
            _lotnumber = null;
            _barcode = null;
            _barcode_id = null;
            _iah_id = null;
            _ial_id = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 经销商主键
        /// </summary>		
        public Guid CahId
        {
            get { return _cah_id; }
            set { _cah_id = value; }
        }

        /// <summary>
        /// 产品主键
        /// </summary>		
        public Guid? CfnId
        {
            get { return _cfn_id; }
            set { _cfn_id = value; }
        }

        /// <summary>
        /// 组套成品主键
        /// </summary>		
        public Guid? CfnSetId
        {
            get { return _cfnset_id; }
            set { _cfnset_id = value; }
        }

        /// <summary>
        /// 单位
        /// </summary>		
        public string Uom
        {
            get { return _uom; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for Uom", value, value.ToString());

                _uom = value;
            }
        }

        /// <summary>
        /// 申请数量
        /// </summary>		
        public decimal? Qty
        {
            get { return _qty; }
            set { _qty = value; }
        }

        /// <summary>
        /// 产品单价
        /// </summary>		
        public decimal? Price
        {
            get { return _price; }
            set { _price = value; }
        }

        /// <summary>
        /// 实际单价
        /// </summary>		
        public decimal? ActualPrice
        {
            get { return _actual_price; }
            set { _actual_price = value; }
        }

        /// <summary>
        /// 小计
        /// </summary>		
        public decimal? Amount
        {
            get { return _amount; }
            set { _amount = value; }
        }

        /// <summary>
        /// 备注
        /// </summary>		
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());

                _remark = value;
            }
        }

        /// <summary>
        /// 批次号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 二维码（备用）
        /// </summary>		
        public string BarCode
        {
            get { return _barcode; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for BarCode", value, value.ToString());

                _barcode = value;
            }
        }

        /// <summary>
        /// 二维码主键（备用）
        /// </summary>		
        public Guid? BarCodeId
        {
            get { return _barcode_id; }
            set { _barcode_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? IahId
        {
            get { return _iah_id; }
            set { _iah_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? IalId
        {
            get { return _ial_id; }
            set { _ial_id = value; }
        }




        #endregion





    }
}
