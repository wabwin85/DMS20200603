/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : InventoryqrOperation
 * Created Time: 2016/1/27 16:48:03
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	InventoryqrOperation
    /// </summary>
    [Serializable]
    public class InventoryqrOperation : BaseModel
    {
        #region Private Members 15

        private Guid _id;
        private Guid? _qrc_id;
        private Guid? _dma_id;
        private Guid? _cfn_id;
        private Guid? _pma_id;
        private string _upn;
        private Guid? _lot_id;
        private string _lotnumber;
        private string _barcode;
        private decimal? _qty;
        private decimal? _shipmentprice;
        private Guid? _towarehouseid;
        private string _operationtype;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public InventoryqrOperation()
        {
            _id = Guid.Empty;
            _qrc_id = null;
            _dma_id = null;
            _cfn_id = null;
            _pma_id = null;
            _upn = null;
            _lot_id = null;
            _lotnumber = null;
            _barcode = null;
            _qty = null;
            _shipmentprice = null;
            _towarehouseid = null;
            _operationtype = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// interface.T_I_WC_DealerBarcodeQRcodeScan 主键
        /// </summary>		
        public Guid? QrcId
        {
            get { return _qrc_id; }
            set { _qrc_id = value; }
        }

        /// <summary>
        /// 经销商
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// CFN ID
        /// </summary>		
        public Guid? CfnId
        {
            get { return _cfn_id; }
            set { _cfn_id = value; }
        }

        /// <summary>
        /// Product ID
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 产品型号
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// Lot Id
        /// </summary>		
        public Guid? LotId
        {
            get { return _lot_id; }
            set { _lot_id = value; }
        }

        /// <summary>
        /// 批次号
        /// </summary>		
        public string LotNumber
        {
            get { return _lotnumber; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for LotNumber", value, value.ToString());

                _lotnumber = value;
            }
        }

        /// <summary>
        /// 二维码
        /// </summary>		
        public string BarCode
        {
            get { return _barcode; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for BarCode", value, value.ToString());

                _barcode = value;
            }
        }

        /// <summary>
        /// 数量
        /// </summary>		
        public decimal? Qty
        {
            get { return _qty; }
            set { _qty = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public decimal? ShipmentPrice
        {
            get { return _shipmentprice; }
            set { _shipmentprice = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ToWarehouseId
        {
            get { return _towarehouseid; }
            set { _towarehouseid = value; }
        }

        /// <summary>
        /// 操作类型
        /// </summary>		
        public string OperationType
        {
            get { return _operationtype; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for OperationType", value, value.ToString());

                _operationtype = value;
            }
        }




        #endregion





    }
}
