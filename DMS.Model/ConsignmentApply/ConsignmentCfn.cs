/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentCfn
 * Created Time: 2015/11/13 16:24:55
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ConsignmentCfn
	/// </summary>
	[Serializable]
	public class ConsignmentCfn : BaseModel
	{
		#region Private Members 10
		
		private Guid _id; 
		private Guid _cm_id; 
		private Guid _cfn_id; 
		private Guid? _cfnset_id; 
		private string _uom; 
		private decimal? _qty; 
		private decimal? _price; 
		private decimal? _actual_price; 
		private decimal? _amount; 
		private string _remark; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ConsignmentCfn()
		{
			_id = Guid.Empty; 
			_cm_id = Guid.Empty; 
			_cfn_id = Guid.Empty; 
			_cfnset_id = null;
			_uom = null; 
			_qty = null;
			_price = null;
			_actual_price = null;
			_amount = null;
			_remark = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid CmId
		{
			get { return _cm_id; }
			set { _cm_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid CfnId
		{
			get { return _cfn_id; }
			set { _cfn_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? CfnSetId
		{
			get { return _cfnset_id; }
			set { _cfnset_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Uom
		{
			get { return _uom; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Uom", value, value.ToString());
				
				_uom = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? Qty
		{
			get { return _qty; }
			set { _qty = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? Price
		{
			get { return _price; }
			set { _price = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? ActualPrice
		{
			get { return _actual_price; }
			set { _actual_price = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public decimal? Amount
		{
			get { return _amount; }
			set { _amount = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
