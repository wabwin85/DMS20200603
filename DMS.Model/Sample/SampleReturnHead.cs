/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : SampleReturnHead
 * Created Time: 2016/3/8 17:35:47
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	SampleReturnHead
    /// </summary>
    [Serializable]
    public class SampleReturnHead : BaseModel
    {
        #region Private Members 22

        private Guid _samplereturnheadid;
        private string _sampletype;
        private string _returnrequire;
        private string _returnno;
        private string _applyno;
        private Guid? _dealerid;
        private string _returndate;
        private string _returnuserid;
        private string _returnuser;
        private string _processuserid;
        private string _processuser;
        private string _returnhosp;
        private string _returndept;
        private string _returndivision;
        private string _dealername;
        private string _returnreason;
        private string _returnquantity;
        private string _confirmquantity;
        private string _returnmemo;
        private string _returnstatus;
        private string _createuser;
        private DateTime? _createdate;
        private string _updateuser; 
        private DateTime? _updatedate;
        private string _CourierNumber;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public SampleReturnHead()
        {
            _samplereturnheadid = Guid.Empty;
            _sampletype = null;
            _returnrequire = null;
            _returnno = null;
            _applyno = null;
            _dealerid = null;
            _returndate = null;
            _returnuserid = null;
            _returnuser = null;
            _processuserid = null;
            _processuser = null;
            _returnhosp = null;
            _returndept = null;
            _returndivision = null;
            _dealername = null;
            _returnreason = null;
            _returnquantity = null;
            _confirmquantity = null;
            _returnmemo = null;
            _returnstatus = null;
            _createuser = null;
            _createdate = null;
            _updateuser = null; 
            _updatedate = null;
            _CourierNumber = null;

        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 样品退货主ID
        /// </summary>		
        public Guid SampleReturnHeadId
        {
            get { return _samplereturnheadid; }
            set { _samplereturnheadid = value; }
        }

        /// <summary>
        /// 样品类型
        /// </summary>		
        public string SampleType
        {
            get { return _sampletype; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for SampleType", value, value.ToString());

                _sampletype = value;
            }
        }

        /// <summary>
        /// 退货要求
        /// </summary>		
        public string ReturnRequire
        {
            get { return _returnrequire; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnRequire", value, value.ToString());

                _returnrequire = value;
            }
        }

        /// <summary>
        /// 退货单编号
        /// </summary>		
        public string ReturnNo
        {
            get { return _returnno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnNo", value, value.ToString());

                _returnno = value;
            }
        }

        /// <summary>
        /// 申请单编号
        /// </summary>		
        public string ApplyNo
        {
            get { return _applyno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ApplyNo", value, value.ToString());

                _applyno = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? DealerId
        {
            get { return _dealerid; }
            set { _dealerid = value; }
        }

        /// <summary>
        /// 申请日期
        /// </summary>		
        public string ReturnDate
        {
            get { return _returndate; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnDate", value, value.ToString());

                _returndate = value;
            }
        }

        /// <summary>
        /// 申请人ID
        /// </summary>		
        public string ReturnUserId
        {
            get { return _returnuserid; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnUserId", value, value.ToString());

                _returnuserid = value;
            }
        }

        /// <summary>
        /// 申请者
        /// </summary>		
        public string ReturnUser
        {
            get { return _returnuser; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnUser", value, value.ToString());

                _returnuser = value;
            }
        }

        /// <summary>
        /// 使用人ID
        /// </summary>		
        public string ProcessUserId
        {
            get { return _processuserid; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ProcessUserId", value, value.ToString());

                _processuserid = value;
            }
        }

        /// <summary>
        /// 使用人
        /// </summary>		
        public string ProcessUser
        {
            get { return _processuser; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ProcessUser", value, value.ToString());

                _processuser = value;
            }
        }

        /// <summary>
        /// 医院
        /// </summary>		
        public string ReturnHosp
        {
            get { return _returnhosp; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnHosp", value, value.ToString());

                _returnhosp = value;
            }
        }

        /// <summary>
        /// 部门
        /// </summary>		
        public string ReturnDept
        {
            get { return _returndept; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnDept", value, value.ToString());

                _returndept = value;
            }
        }

        /// <summary>
        /// 事业部
        /// </summary>		
        public string ReturnDivision
        {
            get { return _returndivision; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnDivision", value, value.ToString());

                _returndivision = value;
            }
        }

        /// <summary>
        /// 经销商
        /// </summary>		
        public string DealerName
        {
            get { return _dealername; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerName", value, value.ToString());

                _dealername = value;
            }
        }

        /// <summary>
        /// 退货原因
        /// </summary>		
        public string ReturnReason
        {
            get { return _returnreason; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnReason", value, value.ToString());

                _returnreason = value;
            }
        }

        /// <summary>
        /// 申请退货总数量
        /// </summary>		
        public string ReturnQuantity
        {
            get { return _returnquantity; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnQuantity", value, value.ToString());

                _returnquantity = value;
            }
        }

        /// <summary>
        /// 确认退货总数量
        /// </summary>		
        public string ConfirmQuantity
        {
            get { return _confirmquantity; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ConfirmQuantity", value, value.ToString());

                _confirmquantity = value;
            }
        }

        /// <summary>
        /// 备注
        /// </summary>		
        public string ReturnMemo
        {
            get { return _returnmemo; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnMemo", value, value.ToString());

                _returnmemo = value;
            }
        }

        /// <summary>
        /// New 新申请<br/>   InApproval 审批中<br/>   Approved 审批通过<br/>   Delivery 已发货<br/>   Receive 收货确认<br/>   Deny 审批拒绝
        /// </summary>		
        public string ReturnStatus
        {
            get { return _returnstatus; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ReturnStatus", value, value.ToString());

                _returnstatus = value;
            }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public string CreateUser
        {
            get { return _createuser; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());

                _createuser = value;
            }
        }

        /// <summary>
        /// 更新时间
        /// </summary>		
        public DateTime? CreateDate
        {
            get { return _createdate; }
            set { _createdate = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public string UpdateUser
        {
            get { return _updateuser; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for UpdateUser", value, value.ToString());

                _updateuser = value;
            }
        }

        /// <summary>
        /// 更新时间
        /// </summary>		
        public DateTime? UpdateDate
        {
            get { return _updatedate; }
            set { _updatedate = value; }
        }
        public string CourierNumber
        {
            get { return _CourierNumber; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CourierNumber", value, value.ToString());

                _CourierNumber = value;
            }
        }



        #endregion





    }
}
