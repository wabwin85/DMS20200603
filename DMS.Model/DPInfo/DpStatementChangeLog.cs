/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DpStatementChangeLog
 * Created Time: 2015/12/7 10:32:27
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	DpStatementChangeLog
	/// </summary>
	[Serializable]
	public class DpStatementChangeLog : BaseModel
	{
		#region Private Members 7
		
		private Guid _id; 
		private Guid _std_id; 
		private string _valueold; 
		private string _valuenew; 
		private string _remark; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DpStatementChangeLog()
		{
			_id = Guid.Empty; 
			_std_id = Guid.Empty; 
			_valueold = null; 
			_valuenew = null; 
			_remark = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid StdId
		{
			get { return _std_id; }
			set { _std_id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ValueOld
		{
			get { return _valueold; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ValueOld", value, value.ToString());
				
				_valueold = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ValueNew
		{
			get { return _valuenew; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ValueNew", value, value.ToString());
				
				_valuenew = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
