/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DealerSign
 * Created Time: 2015/7/31 10:48:58
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	DealerSign
	/// </summary>
	[Serializable]
	public class DealerSign : BaseModel
	{
		#region Private Members 9
		
		private Guid _signid; 
		private string _signname; 
		private string _signdesc;
        private Guid? _trainid;
        private string _signstatus;
        private DateTime? _createtime; 
		private Guid? _updateuser; 
		private DateTime? _updatetime; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DealerSign()
		{
			_signid = Guid.Empty; 
			_signname = null; 
			_signdesc = null;
            _trainid = null;
            _signstatus = null;
			_createtime = null;
			_updateuser = null;
			_updatetime = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid SignId
		{
			get { return _signid; }
			set { _signid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SignName
		{
			get { return _signname; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for SignName", value, value.ToString());
				
				_signname = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SignDesc
		{
			get { return _signdesc; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for SignDesc", value, value.ToString());
				
				_signdesc = value;
			}
		}

        /// <summary>
        /// 
        /// </summary>		
        public Guid? TrainId
        {
            get { return _trainid; }
            set { _trainid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string SignStatus
        {
            get { return _signstatus; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SignStatus", value, value.ToString());

                _signstatus = value;
            }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateTime
		{
			get { return _createtime; }
			set { _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? UpdateUser
		{
			get { return _updateuser; }
			set { _updateuser = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? UpdateTime
		{
			get { return _updatetime; }
			set { _updatetime = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
