/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DealerMaster
 * Created Time: 2012/4/17 11:33:16
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	DealerMaster
	/// </summary>
	[Serializable]
	public class DealerInfo
	{
		#region Private Members 59
		
		private Guid _id; 
		private string _cust_cd; 
		private Guid? _modleid; 
		private string _version; 
		private string _column1; 
		private string _column2; 
		private string _column3; 
		private string _column4; 
		private string _column5; 
		private string _column6; 
		private string _column7; 
		private string _column8; 
		private string _column9; 
		private string _column10; 
		private string _column11; 
		private string _column12; 
		private string _column13; 
		private string _column14; 
		private string _column15; 
		private string _column16; 
		private string _column17; 
		private string _column18; 
		private string _column19; 
		private string _column20; 
		private string _column21; 
		private string _column22; 
		private string _column23; 
		private string _column24; 
		private string _column25; 
		private string _column26; 
		private string _column27; 
		private string _column28; 
		private string _column29; 
		private string _column30; 
		private string _column31; 
		private string _column32; 
		private string _column33; 
		private string _column34; 
		private string _column35; 
		private string _column36; 
		private string _column37; 
		private string _column38; 
		private string _column39; 
		private string _column40; 
		private string _column41; 
		private string _column42; 
		private string _column43; 
		private string _column44; 
		private string _column45; 
		private string _column46; 
		private string _column47; 
		private string _column48; 
		private string _column49; 
		private string _column50; 
		private bool? _isaction; 
		private string _createby; 
		private DateTime? _createdate; 
		private string _modifyby; 
		private DateTime? _modifydate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
        public DealerInfo()
		{
			_id = Guid.Empty; 
			_cust_cd = null; 
			_modleid = null;
			_version = null; 
			_column1 = null; 
			_column2 = null; 
			_column3 = null; 
			_column4 = null; 
			_column5 = null; 
			_column6 = null; 
			_column7 = null; 
			_column8 = null; 
			_column9 = null; 
			_column10 = null; 
			_column11 = null; 
			_column12 = null; 
			_column13 = null; 
			_column14 = null; 
			_column15 = null; 
			_column16 = null; 
			_column17 = null; 
			_column18 = null; 
			_column19 = null; 
			_column20 = null; 
			_column21 = null; 
			_column22 = null; 
			_column23 = null; 
			_column24 = null; 
			_column25 = null; 
			_column26 = null; 
			_column27 = null; 
			_column28 = null; 
			_column29 = null; 
			_column30 = null; 
			_column31 = null; 
			_column32 = null; 
			_column33 = null; 
			_column34 = null; 
			_column35 = null; 
			_column36 = null; 
			_column37 = null; 
			_column38 = null; 
			_column39 = null; 
			_column40 = null; 
			_column41 = null; 
			_column42 = null; 
			_column43 = null; 
			_column44 = null; 
			_column45 = null; 
			_column46 = null; 
			_column47 = null; 
			_column48 = null; 
			_column49 = null; 
			_column50 = null; 
			_isaction = null;
			_createby = null; 
			_createdate = null;
			_modifyby = null; 
			_modifydate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CustCd
		{
			get { return _cust_cd; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for CustCd", value, value.ToString());
				
				_cust_cd = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? Modleid
		{
			get { return _modleid; }
			set { _modleid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Version
		{
			get { return _version; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Version", value, value.ToString());
				
				_version = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column1
		{
			get { return _column1; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column1", value, value.ToString());
				
				_column1 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column2
		{
			get { return _column2; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column2", value, value.ToString());
				
				_column2 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column3
		{
			get { return _column3; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column3", value, value.ToString());
				
				_column3 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column4
		{
			get { return _column4; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column4", value, value.ToString());
				
				_column4 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column5
		{
			get { return _column5; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column5", value, value.ToString());
				
				_column5 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column6
		{
			get { return _column6; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column6", value, value.ToString());
				
				_column6 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column7
		{
			get { return _column7; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column7", value, value.ToString());
				
				_column7 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column8
		{
			get { return _column8; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column8", value, value.ToString());
				
				_column8 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column9
		{
			get { return _column9; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column9", value, value.ToString());
				
				_column9 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column10
		{
			get { return _column10; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column10", value, value.ToString());
				
				_column10 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column11
		{
			get { return _column11; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column11", value, value.ToString());
				
				_column11 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column12
		{
			get { return _column12; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column12", value, value.ToString());
				
				_column12 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column13
		{
			get { return _column13; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column13", value, value.ToString());
				
				_column13 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column14
		{
			get { return _column14; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column14", value, value.ToString());
				
				_column14 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column15
		{
			get { return _column15; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column15", value, value.ToString());
				
				_column15 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column16
		{
			get { return _column16; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column16", value, value.ToString());
				
				_column16 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column17
		{
			get { return _column17; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column17", value, value.ToString());
				
				_column17 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column18
		{
			get { return _column18; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column18", value, value.ToString());
				
				_column18 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column19
		{
			get { return _column19; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column19", value, value.ToString());
				
				_column19 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column20
		{
			get { return _column20; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column20", value, value.ToString());
				
				_column20 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column21
		{
			get { return _column21; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column21", value, value.ToString());
				
				_column21 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column22
		{
			get { return _column22; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column22", value, value.ToString());
				
				_column22 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column23
		{
			get { return _column23; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column23", value, value.ToString());
				
				_column23 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column24
		{
			get { return _column24; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column24", value, value.ToString());
				
				_column24 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column25
		{
			get { return _column25; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column25", value, value.ToString());
				
				_column25 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column26
		{
			get { return _column26; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column26", value, value.ToString());
				
				_column26 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column27
		{
			get { return _column27; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column27", value, value.ToString());
				
				_column27 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column28
		{
			get { return _column28; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column28", value, value.ToString());
				
				_column28 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column29
		{
			get { return _column29; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column29", value, value.ToString());
				
				_column29 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column30
		{
			get { return _column30; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column30", value, value.ToString());
				
				_column30 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column31
		{
			get { return _column31; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column31", value, value.ToString());
				
				_column31 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column32
		{
			get { return _column32; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column32", value, value.ToString());
				
				_column32 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column33
		{
			get { return _column33; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column33", value, value.ToString());
				
				_column33 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column34
		{
			get { return _column34; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column34", value, value.ToString());
				
				_column34 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column35
		{
			get { return _column35; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column35", value, value.ToString());
				
				_column35 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column36
		{
			get { return _column36; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column36", value, value.ToString());
				
				_column36 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column37
		{
			get { return _column37; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column37", value, value.ToString());
				
				_column37 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column38
		{
			get { return _column38; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column38", value, value.ToString());
				
				_column38 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column39
		{
			get { return _column39; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column39", value, value.ToString());
				
				_column39 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column40
		{
			get { return _column40; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column40", value, value.ToString());
				
				_column40 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column41
		{
			get { return _column41; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column41", value, value.ToString());
				
				_column41 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column42
		{
			get { return _column42; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column42", value, value.ToString());
				
				_column42 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column43
		{
			get { return _column43; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column43", value, value.ToString());
				
				_column43 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column44
		{
			get { return _column44; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column44", value, value.ToString());
				
				_column44 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column45
		{
			get { return _column45; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column45", value, value.ToString());
				
				_column45 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column46
		{
			get { return _column46; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column46", value, value.ToString());
				
				_column46 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column47
		{
			get { return _column47; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column47", value, value.ToString());
				
				_column47 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column48
		{
			get { return _column48; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column48", value, value.ToString());
				
				_column48 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column49
		{
			get { return _column49; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column49", value, value.ToString());
				
				_column49 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Column50
		{
			get { return _column50; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Column50", value, value.ToString());
				
				_column50 = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public bool? IsAction
		{
			get { return _isaction; }
			set { _isaction = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateBy
		{
			get { return _createby; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for CreateBy", value, value.ToString());
				
				_createby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateDate
		{
			get { return _createdate; }
			set { _createdate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ModifyBy
		{
			get { return _modifyby; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for ModifyBy", value, value.ToString());
				
				_modifyby = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? ModifyDate
		{
			get { return _modifydate; }
			set { _modifydate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
