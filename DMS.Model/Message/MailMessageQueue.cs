/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : MailMessageQueue
 * Created Time: 2011-3-8 16:00:18
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	MailMessageQueue
	/// </summary>
	[Serializable]
	public class MailMessageQueue : BaseModel
	{
		#region Private Members 9
		
		private Guid _id; 
		private string _queueno; 
		private string _from; 
		private string _to; 
		private string _subject; 
		private string _body; 
		private string _status; 
		private DateTime? _senddate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public MailMessageQueue()
		{
			_id = Guid.Empty; 
			_queueno = null; 
			_from = null; 
			_to = null; 
			_subject = null; 
			_body = null; 
			_status = null; 
			_senddate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 队列号
		/// </summary>		
		public string QueueNo
		{
			get { return _queueno; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for QueueNo", value, value.ToString());
				
				_queueno = value;
			}
		}
			
		/// <summary>
		/// 发件人
		/// </summary>		
		public string From
		{
			get { return _from; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for From", value, value.ToString());
				
				_from = value;
			}
		}
			
		/// <summary>
		/// 收件人
		/// </summary>		
		public string To
		{
			get { return _to; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for To", value, value.ToString());
				
				_to = value;
			}
		}
			
		/// <summary>
		/// 主题
		/// </summary>		
		public string Subject
		{
			get { return _subject; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Subject", value, value.ToString());
				
				_subject = value;
			}
		}
			
		/// <summary>
		/// 内容
		/// </summary>		
		public string Body
		{
			get { return _body; }
			set	
			{
                //if( value!= null && value.Length > 2000)
                //    throw new ArgumentOutOfRangeException("Invalid value for Body", value, value.ToString());
				
				_body = value;
			}
		}
			
		/// <summary>
		/// 发送状态<br/>   Waiting<br/>   Success<br/>   Failure<br/>   
		/// </summary>		
		public string Status
		{
			get { return _status; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());
				
				_status = value;
			}
		}
			
		/// <summary>
		/// 发送时间
		/// </summary>		
		public DateTime? SendDate
		{
			get { return _senddate; }
			set { _senddate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
