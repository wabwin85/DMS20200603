/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ContractAppointment
 * Created Time: 2013/11/29 11:39:48
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ContractAppointment
    /// </summary>
    [Serializable]
    public class ContractAppointment : BaseModel
    {
        #region Private Members 86

        private Guid _cap_id;
        private Guid _cap_cm_id;
        private Guid _cap_dma_id;
        private string _cap_division;
        private int? _cap_markettype;
        private string _cap_recommender;
        private string _cap_job_title;
        private string _cap_company_name;
        private string _cap_contact_person;
        private string _cap_email_address;
        private string _cap_office_number;
        private string _cap_mobile_phone;
        private string _cap_office_address;
        private string _cap_company_type;
        private DateTime? _cap_established_time;
        private string _cap_registered_capital;
        private string _cap_website;
        private bool? _cap_business_license;
        private bool? _cap_medical_license;
        private bool? _cap_tax_registration;
        private string _cap_healthcare_experience;
        private string _cap_interventional_experience;
        private string _cap_kol_relationships;
        private string _cap_business_partnerships;
        private string _cap_competency_justifications;
        private string _cap_contract_type;
        private string _cap_bsc_entity;
        private string _cap_exclusiveness;
        private DateTime? _cap_effectivedate;
        private DateTime? _cap_expirationdate;
        private string _cap_productline;
        private string _cap_pricing;
        private string _cap_pricing_discount;
        private string _cap_pricing_discount_remark;
        private string _cap_pricing_rebate;
        private string _cap_pricing_rebate_remark;
        private string _cap_territory;
        private string _cap_quotas;
        private string _cap_payment_term;
        private string _cap_special_sales;
        private string _cap_credit_limit;
        private string _cap_account;
        private string _cap_guarantee;
        private string _cap_guarantee_remark;
        private string _cap_security_deposit;
        private DateTime? _cap_interview_date;
        private string _cap_venue;
        private string _cap_interview;
        private string _cap_interview_findings;
        private DateTime? _cap_coc_traning_date;
        private bool? _cap_non_compete;
        private string _cap_non_compete_reason;
        private bool? _cap_sub_dealers;
        private bool? _cap_fcpa_concerns_property1;
        private bool? _cap_fcpa_concerns_property2;
        private bool? _cap_fcpa_concerns_property3;
        private string _cap_fcpa_concerns_other;
        private bool? _cap_dealer_conflict;
        private string _cap_dealer_conflict_reason;
        private bool? _cap_exclusive_conflict;
        private string _cap_exclusive_conflict_reason;
        private string _cap_attachment;
        private string _cap_rsm_printname;
        private DateTime? _cap_rsm_date;
        private string _cap_ncm_printname;
        private DateTime? _cap_ncm_date;
        private string _cap_nsm_printname;
        private DateTime? _cap_nsm_date;
        private string _cap_ncmforpart2_printname;
        private DateTime? _cap_ncmforpart2_date;
        private string _cap_drm_printname;
        private DateTime? _cap_drm_date;
        private string _cap_fc_printname;
        private DateTime? _cap_fc_date;
        private string _cap_cd_printname;
        private DateTime? _cap_cd_date;
        private string _cap_vpf_printname;
        private DateTime? _cap_vpf_date;
        private string _cap_vpap_printname;
        private DateTime? _cap_vpap_date;
        private string _cap_status;
        private string _cap_type;
        private DateTime? _cap_create_date;
        private Guid? _cap_create_user;
        private Guid? _cap_update_user;
        private DateTime? _cap_update_date;
        private bool? _cap_coconfirm;
        private string _cap_subdepid;
        private string _cap_subdepname; 
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ContractAppointment()
        {
            _cap_id = Guid.Empty;
            _cap_cm_id = Guid.Empty;
            _cap_dma_id = Guid.Empty;
            _cap_division = null;
            _cap_markettype = null;
            _cap_recommender = null;
            _cap_job_title = null;
            _cap_company_name = null;
            _cap_contact_person = null;
            _cap_email_address = null;
            _cap_office_number = null;
            _cap_mobile_phone = null;
            _cap_office_address = null;
            _cap_company_type = null;
            _cap_established_time = null;
            _cap_registered_capital = null;
            _cap_website = null;
            _cap_business_license = null;
            _cap_medical_license = null;
            _cap_tax_registration = null;
            _cap_healthcare_experience = null;
            _cap_interventional_experience = null;
            _cap_kol_relationships = null;
            _cap_business_partnerships = null;
            _cap_competency_justifications = null;
            _cap_contract_type = null;
            _cap_bsc_entity = null;
            _cap_exclusiveness = null;
            _cap_effectivedate = null;
            _cap_expirationdate = null;
            _cap_productline = null;
            _cap_pricing = null;
            _cap_pricing_discount = null;
            _cap_pricing_discount_remark = null;
            _cap_pricing_rebate = null;
            _cap_pricing_rebate_remark = null;
            _cap_territory = null;
            _cap_quotas = null;
            _cap_payment_term = null;
            _cap_special_sales = null;
            _cap_credit_limit = null;
            _cap_account = null;
            _cap_guarantee = null;
            _cap_guarantee_remark = null;
            _cap_security_deposit = null;
            _cap_interview_date = null;
            _cap_venue = null;
            _cap_interview = null;
            _cap_interview_findings = null;
            _cap_coc_traning_date = null;
            _cap_non_compete = null;
            _cap_non_compete_reason = null;
            _cap_sub_dealers = null;
            _cap_fcpa_concerns_property1 = null;
            _cap_fcpa_concerns_property2 = null;
            _cap_fcpa_concerns_property3 = null;
            _cap_fcpa_concerns_other = null;
            _cap_dealer_conflict = null;
            _cap_dealer_conflict_reason = null;
            _cap_exclusive_conflict = null;
            _cap_exclusive_conflict_reason = null;
            _cap_attachment = null;
            _cap_rsm_printname = null;
            _cap_rsm_date = null;
            _cap_ncm_printname = null;
            _cap_ncm_date = null;
            _cap_nsm_printname = null;
            _cap_nsm_date = null;
            _cap_ncmforpart2_printname = null;
            _cap_ncmforpart2_date = null;
            _cap_drm_printname = null;
            _cap_drm_date = null;
            _cap_fc_printname = null;
            _cap_fc_date = null;
            _cap_cd_printname = null;
            _cap_cd_date = null;
            _cap_vpf_printname = null;
            _cap_vpf_date = null;
            _cap_vpap_printname = null;
            _cap_vpap_date = null;
            _cap_status = null;
            _cap_type = null;
            _cap_create_date = null;
            _cap_create_user = null;
            _cap_update_user = null;
            _cap_update_date = null;
            _cap_coconfirm = null;
            _cap_subdepid = null;
            _cap_subdepname = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// CAP_ID
        /// </summary>		
        public Guid CapId
        {
            get { return _cap_id; }
            set { _cap_id = value; }
        }

        /// <summary>
        /// CAP_CM_ID
        /// </summary>		
        public Guid CapCmId
        {
            get { return _cap_cm_id; }
            set { _cap_cm_id = value; }
        }

        /// <summary>
        /// CAP_DMA_ID
        /// </summary>		
        public Guid CapDmaId
        {
            get { return _cap_dma_id; }
            set { _cap_dma_id = value; }
        }

        /// <summary>
        /// CAP_Division
        /// </summary>		
        public string CapDivision
        {
            get { return _cap_division; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapDivision", value, value.ToString());

                _cap_division = value;
            }
        }

        /// <summary>
        /// 市场类型：1：新兴市场，0：普通市场
        /// </summary>		
        public int? CapMarketType
        {
            get { return _cap_markettype; }
            set { _cap_markettype = value; }
        }

        /// <summary>
        /// CAP_Recommender
        /// </summary>		
        public string CapRecommender
        {
            get { return _cap_recommender; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapRecommender", value, value.ToString());

                _cap_recommender = value;
            }
        }

        /// <summary>
        /// CAP_Job_Title
        /// </summary>		
        public string CapJobTitle
        {
            get { return _cap_job_title; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapJobTitle", value, value.ToString());

                _cap_job_title = value;
            }
        }

        /// <summary>
        /// CAP_Company_Name
        /// </summary>		
        public string CapCompanyName
        {
            get { return _cap_company_name; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapCompanyName", value, value.ToString());

                _cap_company_name = value;
            }
        }

        /// <summary>
        /// CAP_Contact_Person
        /// </summary>		
        public string CapContactPerson
        {
            get { return _cap_contact_person; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapContactPerson", value, value.ToString());

                _cap_contact_person = value;
            }
        }

        /// <summary>
        /// CAP_Email_Address
        /// </summary>		
        public string CapEmailAddress
        {
            get { return _cap_email_address; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapEmailAddress", value, value.ToString());

                _cap_email_address = value;
            }
        }

        /// <summary>
        /// CAP_Office_Number
        /// </summary>		
        public string CapOfficeNumber
        {
            get { return _cap_office_number; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapOfficeNumber", value, value.ToString());

                _cap_office_number = value;
            }
        }

        /// <summary>
        /// CAP_Mobile_Phone
        /// </summary>		
        public string CapMobilePhone
        {
            get { return _cap_mobile_phone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapMobilePhone", value, value.ToString());

                _cap_mobile_phone = value;
            }
        }

        /// <summary>
        /// CAP_Office_Address
        /// </summary>		
        public string CapOfficeAddress
        {
            get { return _cap_office_address; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CapOfficeAddress", value, value.ToString());

                _cap_office_address = value;
            }
        }

        /// <summary>
        /// CAP_Company_Type
        /// </summary>		
        public string CapCompanyType
        {
            get { return _cap_company_type; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapCompanyType", value, value.ToString());

                _cap_company_type = value;
            }
        }

        /// <summary>
        /// CAP_Established_Time
        /// </summary>		
        public DateTime? CapEstablishedTime
        {
            get { return _cap_established_time; }
            set { _cap_established_time = value; }
        }

        /// <summary>
        /// CAP_Registered_Capital
        /// </summary>		
        public string CapRegisteredCapital
        {
            get { return _cap_registered_capital; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapRegisteredCapital", value, value.ToString());

                _cap_registered_capital = value;
            }
        }

        /// <summary>
        /// CAP_Website
        /// </summary>		
        public string CapWebsite
        {
            get { return _cap_website; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapWebsite", value, value.ToString());

                _cap_website = value;
            }
        }

        /// <summary>
        /// CAP_Business_License
        /// </summary>		
        public bool? CapBusinessLicense
        {
            get { return _cap_business_license; }
            set { _cap_business_license = value; }
        }

        /// <summary>
        /// CAP_Medical_License
        /// </summary>		
        public bool? CapMedicalLicense
        {
            get { return _cap_medical_license; }
            set { _cap_medical_license = value; }
        }

        /// <summary>
        /// CAP_Tax_Registration
        /// </summary>		
        public bool? CapTaxRegistration
        {
            get { return _cap_tax_registration; }
            set { _cap_tax_registration = value; }
        }

        /// <summary>
        /// CAP_Healthcare_Experience
        /// </summary>		
        public string CapHealthcareExperience
        {
            get { return _cap_healthcare_experience; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapBusinessPartnerships", value, value.ToString());

                _cap_healthcare_experience = value;
            }
        }

        /// <summary>
        /// CAP_Interventional_Experience
        /// </summary>		
        public string CapInterventionalExperience
        {
            get { return _cap_interventional_experience; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapInterventionalExperience", value, value.ToString());

                _cap_interventional_experience = value;
            }
        }

        /// <summary>
        /// CAP_KOL_Relationships
        /// </summary>		
        public string CapKolRelationships
        {
            get { return _cap_kol_relationships; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapKolRelationships", value, value.ToString());

                _cap_kol_relationships = value;
            }
        }

        /// <summary>
        /// CAP_Business_Partnerships
        /// </summary>		
        public string CapBusinessPartnerships
        {
            get { return _cap_business_partnerships; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapBusinessPartnerships", value, value.ToString());

                _cap_business_partnerships = value;
            }
        }

        /// <summary>
        /// CAP_Competency_Justifications
        /// </summary>		
        public string CapCompetencyJustifications
        {
            get { return _cap_competency_justifications; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CapCompetencyJustifications", value, value.ToString());

                _cap_competency_justifications = value;
            }
        }

        /// <summary>
        /// CAP_Contract_Type
        /// </summary>		
        public string CapContractType
        {
            get { return _cap_contract_type; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapContractType", value, value.ToString());

                _cap_contract_type = value;
            }
        }

        /// <summary>
        /// CAP_BSC_Entity
        /// </summary>		
        public string CapBscEntity
        {
            get { return _cap_bsc_entity; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapBscEntity", value, value.ToString());

                _cap_bsc_entity = value;
            }
        }

        /// <summary>
        /// CAP_Exclusiveness
        /// </summary>		
        public string CapExclusiveness
        {
            get { return _cap_exclusiveness; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapExclusiveness", value, value.ToString());

                _cap_exclusiveness = value;
            }
        }

        /// <summary>
        /// CAP_EffectiveDate
        /// </summary>		
        public DateTime? CapEffectiveDate
        {
            get { return _cap_effectivedate; }
            set { _cap_effectivedate = value; }
        }

        /// <summary>
        /// CAP_ExpirationDate
        /// </summary>		
        public DateTime? CapExpirationDate
        {
            get { return _cap_expirationdate; }
            set { _cap_expirationdate = value; }
        }

        /// <summary>
        /// CAP_ProductLine
        /// </summary>		
        public string CapProductLine
        {
            get { return _cap_productline; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CapProductLine", value, value.ToString());

                _cap_productline = value;
            }
        }

        /// <summary>
        /// CAP_Pricing
        /// </summary>		
        public string CapPricing
        {
            get { return _cap_pricing; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPricing", value, value.ToString());

                _cap_pricing = value;
            }
        }

        /// <summary>
        /// CAP_Pricing_Discount
        /// </summary>		
        public string CapPricingDiscount
        {
            get { return _cap_pricing_discount; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPricingDiscount", value, value.ToString());

                _cap_pricing_discount = value;
            }
        }

        /// <summary>
        /// CAP_Pricing_Discount_Remark
        /// </summary>		
        public string CapPricingDiscountRemark
        {
            get { return _cap_pricing_discount_remark; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPricingDiscountRemark", value, value.ToString());

                _cap_pricing_discount_remark = value;
            }
        }

        /// <summary>
        /// CAP_Pricing_Rebate
        /// </summary>		
        public string CapPricingRebate
        {
            get { return _cap_pricing_rebate; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPricingRebate", value, value.ToString());

                _cap_pricing_rebate = value;
            }
        }

        /// <summary>
        /// CAP_Pricing_Rebate_Remark
        /// </summary>		
        public string CapPricingRebateRemark
        {
            get { return _cap_pricing_rebate_remark; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPricingRebateRemark", value, value.ToString());

                _cap_pricing_rebate_remark = value;
            }
        }

        /// <summary>
        /// CAP_Territory
        /// </summary>		
        public string CapTerritory
        {
            get { return _cap_territory; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapTerritory", value, value.ToString());

                _cap_territory = value;
            }
        }

        /// <summary>
        /// CAP_Quotas
        /// </summary>		
        public string CapQuotas
        {
            get { return _cap_quotas; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CapQuotas", value, value.ToString());

                _cap_quotas = value;
            }
        }

        /// <summary>
        /// CAP_Payment_Term
        /// </summary>		
        public string CapPaymentTerm
        {
            get { return _cap_payment_term; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapPaymentTerm", value, value.ToString());

                _cap_payment_term = value;
            }
        }

        /// <summary>
        /// 特殊销售计划
        /// </summary>		
        public string CapSpecialSales
        {
            get { return _cap_special_sales; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapSpecialSales", value, value.ToString());

                _cap_special_sales = value;
            }
        }

        /// <summary>
        /// 信贷限额
        /// </summary>		
        public string CapCreditLimit
        {
            get { return _cap_credit_limit; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapCreditLimit", value, value.ToString());

                _cap_credit_limit = value;
            }
        }

        /// <summary>
        /// 开账天数
        /// </summary>		
        public string CapAccount
        {
            get { return _cap_account; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapAccount", value, value.ToString());

                _cap_account = value;
            }
        }

        /// <summary>
        /// 保证金担保方式
        /// </summary>		
        public string CapGuarantee
        {
            get { return _cap_guarantee; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapGuarantee", value, value.ToString());

                _cap_guarantee = value;
            }
        }

        /// <summary>
        /// CAP_Guarantee_Remark
        /// </summary>		
        public string CapGuaranteeRemark
        {
            get { return _cap_guarantee_remark; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CapGuaranteeRemark", value, value.ToString());

                _cap_guarantee_remark = value;
            }
        }

        /// <summary>
        /// 押金
        /// </summary>		
        public string CapSecurityDeposit
        {
            get { return _cap_security_deposit; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapSecurityDeposit", value, value.ToString());

                _cap_security_deposit = value;
            }
        }

        /// <summary>
        /// Time of Interview
        /// </summary>		
        public DateTime? CapInterviewDate
        {
            get { return _cap_interview_date; }
            set { _cap_interview_date = value; }
        }

        /// <summary>
        /// Venue
        /// </summary>		
        public string CapVenue
        {
            get { return _cap_venue; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapVenue", value, value.ToString());

                _cap_venue = value;
            }
        }

        /// <summary>
        /// Interviewee
        /// </summary>		
        public string CapInterview
        {
            get { return _cap_interview; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapInterview", value, value.ToString());

                _cap_interview = value;
            }
        }

        /// <summary>
        /// Findings
        /// </summary>		
        public string CapInterviewFindings
        {
            get { return _cap_interview_findings; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapInterviewFindings", value, value.ToString());

                _cap_interview_findings = value;
            }
        }

        /// <summary>
        /// CAP_COC_Traning_Date
        /// </summary>		
        public DateTime? CapCocTraningDate
        {
            get { return _cap_coc_traning_date; }
            set { _cap_coc_traning_date = value; }
        }

        /// <summary>
        ///  Does the dealer represent a competing product line with BSC currently? 
        /// </summary>		
        public bool? CapNonCompete
        {
            get { return _cap_non_compete; }
            set { _cap_non_compete = value; }
        }

        /// <summary>
        /// CAP_Non_Compete_Reason
        /// </summary>		
        public string CapNonCompeteReason
        {
            get { return _cap_non_compete_reason; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapNonCompeteReason", value, value.ToString());

                _cap_non_compete_reason = value;
            }
        }

        /// <summary>
        /// Sub-Dealers
        /// </summary>		
        public bool? CapSubDealers
        {
            get { return _cap_sub_dealers; }
            set { _cap_sub_dealers = value; }
        }

        /// <summary>
        /// Recommended by Government Officials ?
        /// </summary>		
        public bool? CapFcpaConcernsProperty1
        {
            get { return _cap_fcpa_concerns_property1; }
            set { _cap_fcpa_concerns_property1 = value; }
        }

        /// <summary>
        /// Company Has Government Background ?
        /// </summary>		
        public bool? CapFcpaConcernsProperty2
        {
            get { return _cap_fcpa_concerns_property2; }
            set { _cap_fcpa_concerns_property2 = value; }
        }

        /// <summary>
        /// Shareholders Have Government Background ?
        /// </summary>		
        public bool? CapFcpaConcernsProperty3
        {
            get { return _cap_fcpa_concerns_property3; }
            set { _cap_fcpa_concerns_property3 = value; }
        }

        /// <summary>
        /// Others (please illustrate): 
        /// </summary>		
        public string CapFcpaConcernsOther
        {
            get { return _cap_fcpa_concerns_other; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CapFcpaConcernsOther", value, value.ToString());

                _cap_fcpa_concerns_other = value;
            }
        }

        /// <summary>
        /// Conflict of Interest
        /// </summary>		
        public bool? CapDealerConflict
        {
            get { return _cap_dealer_conflict; }
            set { _cap_dealer_conflict = value; }
        }

        /// <summary>
        /// CAP_Dealer_Conflict_Reason
        /// </summary>		
        public string CapDealerConflictReason
        {
            get { return _cap_dealer_conflict_reason; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapDealerConflictReason", value, value.ToString());

                _cap_dealer_conflict_reason = value;
            }
        }

        /// <summary>
        /// Conflict of Other Exclusive Dealers
        /// </summary>		
        public bool? CapExclusiveConflict
        {
            get { return _cap_exclusive_conflict; }
            set { _cap_exclusive_conflict = value; }
        }

        /// <summary>
        /// CAP_Exclusive_Conflict_Reason
        /// </summary>		
        public string CapExclusiveConflictReason
        {
            get { return _cap_exclusive_conflict_reason; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapExclusiveConflictReason", value, value.ToString());

                _cap_exclusive_conflict_reason = value;
            }
        }

        /// <summary>
        /// CAP_Attachment
        /// </summary>		
        public string CapAttachment
        {
            get { return _cap_attachment; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CapAttachment", value, value.ToString());

                _cap_attachment = value;
            }
        }

        /// <summary>
        /// CAP_RSM_PrintName
        /// </summary>		
        public string CapRsmPrintName
        {
            get { return _cap_rsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapRsmPrintName", value, value.ToString());

                _cap_rsm_printname = value;
            }
        }

        /// <summary>
        /// CAP_RSM_Date
        /// </summary>		
        public DateTime? CapRsmDate
        {
            get { return _cap_rsm_date; }
            set { _cap_rsm_date = value; }
        }

        /// <summary>
        /// CAP_NCM_PrintName
        /// </summary>		
        public string CapNcmPrintName
        {
            get { return _cap_ncm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapNcmPrintName", value, value.ToString());

                _cap_ncm_printname = value;
            }
        }

        /// <summary>
        /// CAP_NCM_Date
        /// </summary>		
        public DateTime? CapNcmDate
        {
            get { return _cap_ncm_date; }
            set { _cap_ncm_date = value; }
        }

        /// <summary>
        /// CAP_NSM_PrintName
        /// </summary>		
        public string CapNsmPrintName
        {
            get { return _cap_nsm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapNsmPrintName", value, value.ToString());

                _cap_nsm_printname = value;
            }
        }

        /// <summary>
        /// CAP_NSM_Date
        /// </summary>		
        public DateTime? CapNsmDate
        {
            get { return _cap_nsm_date; }
            set { _cap_nsm_date = value; }
        }

        /// <summary>
        /// CAP_NCMForPart2_PrintName
        /// </summary>		
        public string CapNcmForPart2PrintName
        {
            get { return _cap_ncmforpart2_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapNcmForPart2PrintName", value, value.ToString());

                _cap_ncmforpart2_printname = value;
            }
        }

        /// <summary>
        /// CAP_NCMForPart2_Date
        /// </summary>		
        public DateTime? CapNcmForPart2Date
        {
            get { return _cap_ncmforpart2_date; }
            set { _cap_ncmforpart2_date = value; }
        }

        /// <summary>
        /// CAP_DRM_PrintName
        /// </summary>		
        public string CapDrmPrintName
        {
            get { return _cap_drm_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapDrmPrintName", value, value.ToString());

                _cap_drm_printname = value;
            }
        }

        /// <summary>
        /// CAP_DRM_Date
        /// </summary>		
        public DateTime? CapDrmDate
        {
            get { return _cap_drm_date; }
            set { _cap_drm_date = value; }
        }

        /// <summary>
        /// CAP_FC_PrintName
        /// </summary>		
        public string CapFcPrintName
        {
            get { return _cap_fc_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapFcPrintName", value, value.ToString());

                _cap_fc_printname = value;
            }
        }

        /// <summary>
        /// CAP_FC_Date
        /// </summary>		
        public DateTime? CapFcDate
        {
            get { return _cap_fc_date; }
            set { _cap_fc_date = value; }
        }

        /// <summary>
        /// CAP_CD_PrintName
        /// </summary>		
        public string CapCdPrintName
        {
            get { return _cap_cd_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapCdPrintName", value, value.ToString());

                _cap_cd_printname = value;
            }
        }

        /// <summary>
        /// CAP_CD_Date
        /// </summary>		
        public DateTime? CapCdDate
        {
            get { return _cap_cd_date; }
            set { _cap_cd_date = value; }
        }

        /// <summary>
        /// CAP_VPF_PrintName
        /// </summary>		
        public string CapVpfPrintName
        {
            get { return _cap_vpf_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapVpfPrintName", value, value.ToString());

                _cap_vpf_printname = value;
            }
        }

        /// <summary>
        /// CAP_VPF_Date
        /// </summary>		
        public DateTime? CapVpfDate
        {
            get { return _cap_vpf_date; }
            set { _cap_vpf_date = value; }
        }

        /// <summary>
        /// CAP_VPAP_PrintName
        /// </summary>		
        public string CapVpapPrintName
        {
            get { return _cap_vpap_printname; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CapVpapPrintName", value, value.ToString());

                _cap_vpap_printname = value;
            }
        }

        /// <summary>
        /// CAP_VPAP_Date
        /// </summary>		
        public DateTime? CapVpapDate
        {
            get { return _cap_vpap_date; }
            set { _cap_vpap_date = value; }
        }

        /// <summary>
        /// 状态
        /// </summary>		
        public string CapStatus
        {
            get { return _cap_status; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapStatus", value, value.ToString());

                _cap_status = value;
            }
        }

        /// <summary>
        /// 合同类型
        /// </summary>		
        public string CapType
        {
            get { return _cap_type; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CapType", value, value.ToString());

                _cap_type = value;
            }
        }

        /// <summary>
        /// 创建日期
        /// </summary>		
        public DateTime? CapCreateDate
        {
            get { return _cap_create_date; }
            set { _cap_create_date = value; }
        }

        /// <summary>
        /// 创建人
        /// </summary>		
        public Guid? CapCreateUser
        {
            get { return _cap_create_user; }
            set { _cap_create_user = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? CapUpdateUser
        {
            get { return _cap_update_user; }
            set { _cap_update_user = value; }
        }

        /// <summary>
        /// 更新日期
        /// </summary>		
        public DateTime? CapUpdateDate
        {
            get { return _cap_update_date; }
            set { _cap_update_date = value; }
        }


        /// <summary>
        /// CAP_COConfirm
        /// </summary>		
        public bool? CapCoConfirm
        {
            get { return _cap_coconfirm; }
            set { _cap_coconfirm = value; }
        }

        /// <summary>
        /// 合同分类ID
        /// </summary>		
        public string CapSubdepId
        {
            get { return _cap_subdepid; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapSubdepId", value, value.ToString());

                _cap_subdepid = value;
            }
        }

        /// <summary>
        /// 合同分类名称
        /// </summary>		
        public string CapSubdepName
        {
            get { return _cap_subdepname; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CapSubdepName", value, value.ToString());

                _cap_subdepname = value;
            }
        }
        #endregion


    }
}
