/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : SampleTesting
 * Created Time: 2016/3/4 13:50:30
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	SampleTesting
	/// </summary>
	[Serializable]
	public class SampleTesting : BaseModel
	{
		#region Private Members 12
		
		private Guid _sampletestingid; 
		private Guid _sampleheadid; 
		private string _division; 
		private string _priority; 
		private string _certificate; 
		private string _costcenter; 
		private string _arrivaldate; 
		private string _irf; 
		private string _ra; 
		private int? _sortno; 
		private DateTime? _updatedate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public SampleTesting()
		{
			_sampletestingid = Guid.Empty; 
			_sampleheadid = Guid.Empty; 
			_division = null; 
			_priority = null; 
			_certificate = null; 
			_costcenter = null; 
			_arrivaldate = null; 
			_irf = null; 
			_ra = null; 
			_sortno = null;
			_updatedate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 检测样品ID
		/// </summary>		
		public Guid SampleTestingId
		{
			get { return _sampletestingid; }
			set { _sampletestingid = value; }
		}
			
		/// <summary>
		/// 样品主ID
		/// </summary>		
		public Guid SampleHeadId
		{
			get { return _sampleheadid; }
			set { _sampleheadid = value; }
		}
			
		/// <summary>
		/// 业务部
		/// </summary>		
		public string Division
		{
			get { return _division; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Division", value, value.ToString());
				
				_division = value;
			}
		}
			
		/// <summary>
		/// 优先级
		/// </summary>		
		public string Priority
		{
			get { return _priority; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Priority", value, value.ToString());
				
				_priority = value;
			}
		}
			
		/// <summary>
		/// 注册证
		/// </summary>		
		public string Certificate
		{
			get { return _certificate; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Certificate", value, value.ToString());
				
				_certificate = value;
			}
		}
			
		/// <summary>
		/// 成本中心
		/// </summary>		
		public string CostCenter
		{
			get { return _costcenter; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for CostCenter", value, value.ToString());
				
				_costcenter = value;
			}
		}
			
		/// <summary>
		/// 期望到货日期
		/// </summary>		
		public string ArrivalDate
		{
			get { return _arrivaldate; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for ArrivalDate", value, value.ToString());
				
				_arrivaldate = value;
			}
		}
			
		/// <summary>
		/// IRF#
		/// </summary>		
		public string Irf
		{
			get { return _irf; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Irf", value, value.ToString());
				
				_irf = value;
			}
		}
			
		/// <summary>
		/// RA项目
		/// </summary>		
		public string Ra
		{
			get { return _ra; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Ra", value, value.ToString());
				
				_ra = value;
			}
		}
			
		/// <summary>
		/// 排序序号
		/// </summary>		
		public int? SortNo
		{
			get { return _sortno; }
			set { _sortno = value; }
		}
			
		/// <summary>
		/// 更新时间
		/// </summary>		
		public DateTime? UpdateDate
		{
			get { return _updatedate; }
			set { _updatedate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
