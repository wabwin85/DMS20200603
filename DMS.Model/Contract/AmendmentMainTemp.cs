/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : AmendmentMainTemp
 * Created Time: 2018/3/25 14:11:42
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	AmendmentMainTemp
	/// </summary>
	[Serializable]
	public class AmendmentMainTemp : BaseModel
	{
		#region Private Members 10
		
		private Guid _tempid; 
		private Guid _contractid; 
		private DateTime? _amendeffectivedate; 
		private string _purpose; 
		private int? _isequipment; 
		private string _assessment; 
		private DateTime? _assessmentstart; 
		private DateTime? _assessmentend; 
		private Guid? _updateuser; 
		private DateTime? _updatedate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public AmendmentMainTemp()
		{
			_tempid = Guid.Empty; 
			_contractid = Guid.Empty; 
			_amendeffectivedate = null;
			_purpose = null; 
			_isequipment = null;
			_assessment = null; 
			_assessmentstart = null;
			_assessmentend = null;
			_updateuser = null;
			_updatedate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid TempId
		{
			get { return _tempid; }
			set { _tempid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid ContractId
		{
			get { return _contractid; }
			set { _contractid = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? AmendEffectiveDate
		{
			get { return _amendeffectivedate; }
			set { _amendeffectivedate = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Purpose
		{
			get { return _purpose; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Purpose", value, value.ToString());
				
				_purpose = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public int? IsEquipment
		{
			get { return _isequipment; }
			set { _isequipment = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Assessment
		{
			get { return _assessment; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Assessment", value, value.ToString());
				
				_assessment = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? AssessmentStart
		{
			get { return _assessmentstart; }
			set { _assessmentstart = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? AssessmentEnd
		{
			get { return _assessmentend; }
			set { _assessmentend = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public Guid? UpdateUser
		{
			get { return _updateuser; }
			set { _updateuser = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? UpdateDate
		{
			get { return _updatedate; }
			set { _updatedate = value; }
		}
			
		
	
		
		#endregion 
		
		
		
		
		
	}
}
