/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DealerRelation
 * Created Time: 2010-5-18 10:00:26
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	DealerRelation
	/// </summary>
	[Serializable]
	public class DealerRelation : BaseModel
	{
		#region Private Members
		
		private Guid _id; 
		private Guid? _dma_id;
        private string _dma_name; 
		private Guid? _dma_relationid;
		private string _dma_relationname; 
		private string _remark; 
		private Guid _updateuser; 
		private DateTime _updatedate;
        private bool? _isdmsdealer; 
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DealerRelation()
		{
			_id = new Guid(); 
			_dma_id = null;
            _dma_name = null;
			_dma_relationid = null;
			_dma_relationname = null; 
			_remark = null; 
			_updateuser = new Guid(); 
			_updatedate = new DateTime();
            _isdmsdealer = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public Guid Id
		{
			get { return _id; }
			set { _id = value; }
		}
			
		/// <summary>
		/// 经销商主键
		/// </summary>		
		public Guid? DmaId
		{
			get { return _dma_id; }
			set { _dma_id = value; }
		}

        /// <summary>
        /// 经销商主键中文名
        /// </summary>		
        public string DmaName
        {
            get { return _dma_name; }
            set { _dma_name = value; }
        }
			
		/// <summary>
		/// 关联经销商主键
		/// </summary>		
		public Guid? DmaRelationid
		{
			get { return _dma_relationid; }
			set { _dma_relationid = value; }
		}
			
		/// <summary>
		/// 关联经销商名称
		/// </summary>		
		public string DmaRelationName
		{
			get { return _dma_relationname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for DmaRelationName", value, value.ToString());
				
				_dma_relationname = value;
			}
		}
			
		/// <summary>
		/// 关联经销商描述
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_remark = value;
			}
		}
			
		/// <summary>
		/// DRL_UpdateUser
		/// </summary>		
		public Guid UpdateUser
		{
			get { return _updateuser; }
			set { _updateuser = value; }
		}
			
		/// <summary>
		/// DRL_UpdateDate
		/// </summary>		
		public DateTime UpdateDate
		{
			get { return _updatedate; }
			set { _updatedate = value; }
		}

        /// <summary>
        /// IsDMSDealer
        /// </summary>
        public bool? IsDMSDealer
        {
            get { return _isdmsdealer; }
            set { _isdmsdealer = value; }
        }
	
		
		#endregion 
		
		
		
		
		
	}
}
