/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentApplyHeader
 * Created Time: 2015/11/30 17:47:48
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ConsignmentApplyHeader
    /// </summary>
    [Serializable]
    public class ConsignmentApplyHeader : BaseModel
    {
        #region Private Members 53

        private Guid _id;
        private Guid? _dma_id;
        private Guid? _productline_id;
        private Guid? _cm_id;
        private string _cm_consignmentname;
        private int? _cm_consignmentday;
        private int? _cm_delaynumber;
        private DateTime? _cm_startdate;
        private DateTime? _cm_enddate;
        private string _cm_type;
        private string _cm_remark;
        private int? _cm_returntime;
        private decimal? _cm_dailyfines;
        private decimal? _cm_lowestmargin;
        private decimal? _cm_totalamount;
        private DateTime? _ca_authstartdate;
        private DateTime? _ca_authenddate;
        private string _orderno;
        private string _ordertype;
        private string _orderstatus;
        private string _consignmentfrom;
        private Guid? _consignmentid;
        private DateTime? _submitdate;
        private Guid? _approveuser;
        private DateTime? _approvedate;
        private Guid? _updateuser;
        private DateTime? _updatedate;
        private string _salesname;
        private string _salesemail;
        private string _salesphone;
        private string _consignee;
        private string _shiptoaddress;
        private string _consigneephone;
        private Guid? _hospital_id;
        private string _hospital_name;
        private string _reason;
        private string _remark;
        private Guid? _from_dma_id;
        private Guid? _cah_id;
        private string _delay_orderno;
        private string _delay_ordertype;
        private string _delay_orderstatus;
        private int? _delay_delaytime;
        private Guid? _delay_submituser;
        private DateTime? _delay_submitdate;
        private Guid? _delay_approveuser;
        private DateTime? _delay_approvedate;
        private DateTime? _consignmentstartdate;
        private DateTime? _consignmenenddate;
        private string _poh_orderno;
        private Guid? _iah_id;
        private DateTime? _rdd;
        private bool? _isfixedmoney;
        private bool? _isfixedqty;
        private bool? _iskb;
        private bool? _isusediscount;
        private string _sendhospital;
        private string _sendaddress;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConsignmentApplyHeader()
        {
            _id = Guid.Empty;
            _dma_id = null;
            _productline_id = null;
            _cm_id = null;
            _cm_consignmentname = null;
            _cm_consignmentday = null;
            _cm_delaynumber = null;
            _cm_startdate = null;
            _cm_enddate = null;
            _cm_type = null;
            _cm_remark = null;
            _cm_returntime = null;
            _cm_dailyfines = null;
            _cm_lowestmargin = null;
            _cm_totalamount = null;
            _ca_authstartdate = null;
            _ca_authenddate = null;
            _orderno = null;
            _ordertype = null;
            _orderstatus = null;
            _consignmentfrom = null;
            _consignmentid = null;
            _submitdate = null;
            _approveuser = null;
            _approvedate = null;
            _updateuser = null;
            _updatedate = null;
            _salesname = null;
            _salesemail = null;
            _salesphone = null;
            _consignee = null;
            _shiptoaddress = null;
            _consigneephone = null;
            _hospital_id = null;
            _hospital_name = null;
            _reason = null;
            _remark = null;
            _from_dma_id = null;
            _cah_id = null;
            _delay_orderno = null;
            _delay_ordertype = null;
            _delay_orderstatus = null;
            _delay_delaytime = null;
            _delay_submituser = null;
            _delay_submitdate = null;
            _delay_approveuser = null;
            _delay_approvedate = null;
            _consignmentstartdate = null;
            _consignmenenddate = null;
            _poh_orderno = null;
            _iah_id = null;
            _rdd = null;
            _isfixedmoney = null;
            _isfixedqty = null;
            _iskb = null;
            _isusediscount = null;
            _sendhospital = null;
            _sendaddress = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 主键
        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }
        /// <summary>
        ///医院名称
        /// </summary>		
        public string SendHospital
        {
            get { return _sendhospital; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for SendHospital", value, value.ToString());

                _sendhospital = value;
            }
        }
        /// <summary>
        /// 医院地址
        /// </summary>		
        public string SendAddress
        {
            get { return _sendaddress; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for SendAddress", value, value.ToString());
                _sendaddress = value;
            }
        }
        /// <summary>
        /// 经销商主键
        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 产品线主键
        /// </summary>		
        public Guid? ProductLineId
        {
            get { return _productline_id; }
            set { _productline_id = value; }
        }

        /// <summary>
        /// 寄售规则主表ID（复制规则主表的信息）
        /// </summary>		
        public Guid? CmId
        {
            get { return _cm_id; }
            set { _cm_id = value; }
        }

        /// <summary>
        /// 寄售规则名称（复制规则主表的信息）
        /// </summary>		
        public string CmConsignmentName
        {
            get { return _cm_consignmentname; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmConsignmentName", value, value.ToString());

                _cm_consignmentname = value;
            }
        }

        /// <summary>
        /// 寄售天数（复制规则主表的信息）
        /// </summary>		
        public int? CmConsignmentDay
        {
            get { return _cm_consignmentday; }
            set { _cm_consignmentday = value; }
        }

        /// <summary>
        /// 可延期次数（复制规则主表的信息）
        /// </summary>		
        public int? CmDelayNumber
        {
            get { return _cm_delaynumber; }
            set { _cm_delaynumber = value; }
        }

        /// <summary>
        /// 开始时间（复制规则主表的信息）
        /// </summary>		
        public DateTime? CmStartDate
        {
            get { return _cm_startdate; }
            set { _cm_startdate = value; }
        }

        /// <summary>
        /// 结束时间（复制规则主表的信息）
        /// </summary>		
        public DateTime? CmEndDate
        {
            get { return _cm_enddate; }
            set { _cm_enddate = value; }
        }

        /// <summary>
        /// 近效期规则（复制规则主表的信息）
        /// </summary>		
        public string CmType
        {
            get { return _cm_type; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmType", value, value.ToString());

                _cm_type = value;
            }
        }

        /// <summary>
        /// 备注（复制规则主表的信息）
        /// </summary>		
        public string CmRemark
        {
            get { return _cm_remark; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for CmRemark", value, value.ToString());

                _cm_remark = value;
            }
        }

        /// <summary>
        /// 退货期限（复制规则主表的信息）
        /// </summary>		
        public int? CmReturnTime
        {
            get { return _cm_returntime; }
            set { _cm_returntime = value; }
        }

        /// <summary>
        /// 滞纳金每日金额（复制规则主表的信息）
        /// </summary>		
        public decimal? CmDailyFines
        {
            get { return _cm_dailyfines; }
            set { _cm_dailyfines = value; }
        }

        /// <summary>
        /// 最低保证金金额（复制规则主表的信息）
        /// </summary>		
        public decimal? CmLowestMargin
        {
            get { return _cm_lowestmargin; }
            set { _cm_lowestmargin = value; }
        }

        /// <summary>
        /// 总量控制金额（复制规则主表的信息）
        /// </summary>		
        public decimal? CmTotalAmount
        {
            get { return _cm_totalamount; }
            set { _cm_totalamount = value; }
        }

        /// <summary>
        /// 授权开始日期
        /// </summary>		
        public DateTime? CaAuthStartDate
        {
            get { return _ca_authstartdate; }
            set { _ca_authstartdate = value; }
        }

        /// <summary>
        /// 授权结束日期
        /// </summary>		
        public DateTime? CaAuthEndDate
        {
            get { return _ca_authenddate; }
            set { _ca_authenddate = value; }
        }

        /// <summary>
        /// 单据号
        /// </summary>		
        public string OrderNo
        {
            get { return _orderno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());

                _orderno = value;
            }
        }

        /// <summary>
        /// 单据类型（短期寄售申请单）
        /// </summary>		
        public string OrderType
        {
            get { return _ordertype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderType", value, value.ToString());

                _ordertype = value;
            }
        }

        /// <summary>
        /// 单据状态（草稿、已提交、审批拒绝、审批通过、撤销）
        /// </summary>		
        public string OrderStatus
        {
            get { return _orderstatus; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for OrderStatus", value, value.ToString());

                _orderstatus = value;
            }
        }

        /// <summary>
        /// 寄售来源（BSC、其他经销商）
        /// </summary>		
        public string ConsignmentFrom
        {
            get { return _consignmentfrom; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsignmentFrom", value, value.ToString());

                _consignmentfrom = value;
            }
        }

        /// <summary>
        /// 寄售方主键（经销商主键）
        /// </summary>		
        public Guid? ConsignmentId
        {
            get { return _consignmentid; }
            set { _consignmentid = value; }
        }

        /// <summary>
        /// 提交日期\单据日期
        /// </summary>		
        public DateTime? SubmitDate
        {
            get { return _submitdate; }
            set { _submitdate = value; }
        }

        /// <summary>
        /// 审批人
        /// </summary>		
        public Guid? ApproveUser
        {
            get { return _approveuser; }
            set { _approveuser = value; }
        }

        /// <summary>
        /// 审批日期
        /// </summary>		
        public DateTime? ApproveDate
        {
            get { return _approvedate; }
            set { _approvedate = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? UpdateUser
        {
            get { return _updateuser; }
            set { _updateuser = value; }
        }

        /// <summary>
        /// 更新日期
        /// </summary>		
        public DateTime? UpdateDate
        {
            get { return _updatedate; }
            set { _updatedate = value; }
        }

        /// <summary>
        /// 销售姓名
        /// </summary>		
        public string SalesName
        {
            get { return _salesname; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for SalesName", value, value.ToString());

                _salesname = value;
            }
        }

        /// <summary>
        /// 销售邮箱
        /// </summary>		
        public string SalesEmail
        {
            get { return _salesemail; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for SalesEmail", value, value.ToString());

                _salesemail = value;
            }
        }

        /// <summary>
        /// 销售电话
        /// </summary>		
        public string SalesPhone
        {
            get { return _salesphone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for SalesPhone", value, value.ToString());

                _salesphone = value;
            }
        }

        /// <summary>
        /// 收货人
        /// </summary>		
        public string Consignee
        {
            get { return _consignee; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Consignee", value, value.ToString());

                _consignee = value;
            }
        }

        /// <summary>
        /// 收货地址
        /// </summary>		
        public string ShipToAddress
        {
            get { return _shiptoaddress; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipToAddress", value, value.ToString());

                _shiptoaddress = value;
            }
        }

        /// <summary>
        /// 收货人电话
        /// </summary>		
        public string ConsigneePhone
        {
            get { return _consigneephone; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsigneePhone", value, value.ToString());

                _consigneephone = value;
            }
        }

        /// <summary>
        /// 寄售医院主键
        /// </summary>		
        public Guid? HospitalId
        {
            get { return _hospital_id; }
            set { _hospital_id = value; }
        }

        /// <summary>
        /// 寄售医院名称
        /// </summary>		
        public string HospitalName
        {
            get { return _hospital_name; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalName", value, value.ToString());

                _hospital_name = value;
            }
        }

        /// <summary>
        /// 寄售原因
        /// </summary>		
        public string Reason
        {
            get { return _reason; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for Reason", value, value.ToString());

                _reason = value;
            }
        }

        /// <summary>
        /// 备注说明
        /// </summary>		
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (value != null && value.Length > 2000)
                    throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());

                _remark = value;
            }
        }

        /// <summary>
        /// 寄售方（默认为BSC）
        /// </summary>		
        public Guid? FromDmaId
        {
            get { return _from_dma_id; }
            set { _from_dma_id = value; }
        }

        /// <summary>
        /// 原始单据ID
        /// </summary>		
        public Guid? CahId
        {
            get { return _cah_id; }
            set { _cah_id = value; }
        }

        /// <summary>
        /// 延期申请单号
        /// </summary>		
        public string DelayOrderNo
        {
            get { return _delay_orderno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for DelayOrderNo", value, value.ToString());

                _delay_orderno = value;
            }
        }

        /// <summary>
        /// 延期申请类型
        /// </summary>		
        public string DelayOrderType
        {
            get { return _delay_ordertype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DelayOrderType", value, value.ToString());

                _delay_ordertype = value;
            }
        }

        /// <summary>
        /// 延期申请单状态（草稿、提交、审批通过、审批拒绝、撤销）
        /// </summary>		
        public string DelayOrderStatus
        {
            get { return _delay_orderstatus; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for DelayOrderStatus", value, value.ToString());

                _delay_orderstatus = value;
            }
        }

        /// <summary>
        /// 延期申请次数
        /// </summary>		
        public int? DelayDelayTime
        {
            get { return _delay_delaytime; }
            set { _delay_delaytime = value; }
        }

        /// <summary>
        /// 延期申请人
        /// </summary>		
        public Guid? DelaySubmitUser
        {
            get { return _delay_submituser; }
            set { _delay_submituser = value; }
        }

        /// <summary>
        /// 延期申请时间
        /// </summary>		
        public DateTime? DelaySubmitDate
        {
            get { return _delay_submitdate; }
            set { _delay_submitdate = value; }
        }

        /// <summary>
        /// 延期审批人
        /// </summary>		
        public Guid? DelayApproveUser
        {
            get { return _delay_approveuser; }
            set { _delay_approveuser = value; }
        }

        /// <summary>
        /// 延期审批时间
        /// </summary>		
        public DateTime? DelayApproveDate
        {
            get { return _delay_approvedate; }
            set { _delay_approvedate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? ConsignmentStartDate
        {
            get { return _consignmentstartdate; }
            set { _consignmentstartdate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? ConsignmenEndDate
        {
            get { return _consignmenenddate; }
            set { _consignmenenddate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PohOrderNo
        {
            get { return _poh_orderno; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for PohOrderNo", value, value.ToString());

                _poh_orderno = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? IahId
        {
            get { return _iah_id; }
            set { _iah_id = value; }
        }

        /// <summary>
		/// 期望到货日期
		/// </summary>		
		public DateTime? Rdd
        {
            get { return _rdd; }
            set { _rdd = value; }
        }

        /// <summary>
		/// 寄售金额控制
		/// </summary>		
		public bool? IsFixedMoney
        {
            get { return _isfixedmoney; }
            set { _isfixedmoney = value; }
        }

        /// <summary>
        /// 寄售数量控制
        /// </summary>		
        public bool? IsFixedQty
        {
            get { return _isfixedqty; }
            set { _isfixedqty = value; }
        }

        /// <summary>
        /// 是否需要补货
        /// </summary>		
        public bool? Iskb
        {
            get { return _iskb; }
            set { _iskb = value; }
        }

        /// <summary>
        /// 是否允许打折
        /// </summary>		
        public bool? IsUseDiscount
        {
            get { return _isusediscount; }
            set { _isusediscount = value; }
        }

        #endregion




    }
}
