/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ContractMaster
 * Created Time: 2013/11/26 15:40:28
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
	/// <summary>
	///	ContractMaster
	/// </summary>
	[Serializable]
    public class ContractMasterDM : BaseModel
	{
        #region Private Members 117

        private Guid _cm_id;
        private Guid _cm_dma_id;
        private string _cm_dealer_cn_name;
        private string _cm_dealer_en_name;
        private string _cm_charter;
        private string _cm_address;
        private string _cm_country;
        private string _cm_telephony;
        private string _cm_fax;
        private string _cm_contact_person;
        private string _cm_website;
        private string _cm_email;
        private bool? _cm_publicly_traded;
        private string _cm_exchange;
        private string _cm_bank;
        private string _cm_bank_address;
        private string _cm_bank_country;
        private string _cm_bank_account;
        private string _cm_swift;
        private bool? _cm_property1;
        private string _cm_desc1;
        private bool? _cm_property2;
        private string _cm_desc3;
        private bool? _cm_property3;
        private string _cm_desc2;
        private string _cm_quality_recall_desc4;
        private string _cm_status;
        private string _cm_type;
        private DateTime? _cm_create_date;
        private Guid? _cm_create_user;
        private Guid? _cm_update_user;
        private DateTime? _cm_update_date;
        private string _cm_form4_country;
        private string _cm_form4_assessname;
        private DateTime? _cm_form4_assessdate;
        private string _cm_quality_store_property1;
        private string _cm_quality_store_desc1;
        private string _cm_quality_store_property2;
        private string _cm_quality_store_desc2;
        private string _cm_quality_store_property3;
        private string _cm_quality_store_desc3;
        private string _cm_quality_store_property4;
        private string _cm_quality_store_desc4;
        private string _cm_quality_store_property5;
        private string _cm_quality_store_desc5;
        private string _cm_quality_traceability_property1;
        private string _cm_quality_traceability_desc1;
        private string _cm_quality_traceability_property2;
        private string _cm_quality_traceability_desc2;
        private string _cm_quality_traceability_property3;
        private string _cm_quality_traceability_desc3;
        private string _cm_quality_traceability_property4;
        private string _cm_quality_traceability_desc4;
        private string _cm_quality_implanted_property1;
        private string _cm_quality_implanted_desc1;
        private string _cm_quality_maintain_property1;
        private string _cm_quality_maintain_desc1;
        private string _cm_quality_maintain_property2;
        private string _cm_quality_maintain_desc2;
        private string _cm_quality_complain_property1;
        private string _cm_quality_complain_desc1;
        private string _cm_quality_complain_property2;
        private string _cm_quality_complain_desc2;
        private string _cm_quality_complain_property3;
        private string _cm_quality_complain_desc3;
        private string _cm_quality_complain_property4;
        private string _cm_quality_complain_desc4;
        private string _cm_quality_dispose_property1;
        private string _cm_quality_dispose_desc1;
        private string _cm_quality_dispose_property2;
        private string _cm_quality_dispose_desc2;
        private string _cm_quality_dispose_property3;
        private string _cm_quality_dispose_desc3;
        private string _cm_quality_guard_property1;
        private string _cm_quality_guard_desc1;
        private string _cm_quality_guard_property2;
        private string _cm_quality_guard_desc2;
        private string _cm_quality_recall_property1;
        private string _cm_quality_recall_desc1;
        private string _cm_quality_recall_property2;
        private string _cm_quality_recall_desc2;
        private string _cm_quality_recall_property3;
        private string _cm_quality_recall_desc3;
        private string _cm_quality_recall_property4;
        private string _cm_quality_recall_property5;
        private string _cm_quality_recall_desc5;
        private string _cm_quality_recall_property6;
        private string _cm_quality_recall_desc6;
        private string _cm_quality_example_property1;
        private string _cm_quality_example_desc1;
        private string _cm_quality_lable_property1;
        private string _cm_quality_lable_desc1;
        private string _cm_quality_train_property1;
        private string _cm_quality_train_desc1;
        private string _cm_quality_record_property1;
        private string _cm_quality_record_desc1;
        private string _cm_form1_check1;
        private Guid? _cm_form1_checkby1;
        private string _cm_form1_check2;
        private Guid? _cm_form1_checkby2;
        private string _cm_form1_check3;
        private Guid? _cm_form1_checkby3;
        private string _cm_form1_check4;
        private Guid? _cm_form1_checkby4;
        private string _cm_form1_check5;
        private Guid? _cm_form1_checkby5;
        private string _cm_form1_check6;
        private Guid? _cm_form1_checkby6;
        private string _cm_form1_check7;
        private Guid? _cm_form1_checkby7;
        private string _cm_form5_username;
        private string _cm_form5_dealername;
        private string _cm_from3_bankname;
        private string _cm_from3_bankaddress;
        private string _cm_from3_bankaccount;
        private string _cm_from3_bankcountry;
        private string _cm_from3_bankswift; 		
        #endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ContractMasterDM()
		{
            _cm_id = Guid.Empty;
            _cm_dma_id = Guid.Empty;
            _cm_dealer_cn_name = null;
            _cm_dealer_en_name = null;
            _cm_charter = null;
            _cm_address = null;
            _cm_country = null;
            _cm_telephony = null;
            _cm_fax = null;
            _cm_contact_person = null;
            _cm_website = null;
            _cm_email = null;
            _cm_publicly_traded = null;
            _cm_exchange = null;
            _cm_bank = null;
            _cm_bank_address = null;
            _cm_bank_country = null;
            _cm_bank_account = null;
            _cm_swift = null;
            _cm_property1 = null;
            _cm_desc1 = null;
            _cm_property2 = null;
            _cm_desc3 = null;
            _cm_property3 = null;
            _cm_desc2 = null;
            _cm_quality_recall_desc4 = null;
            _cm_status = null;
            _cm_type = null;
            _cm_create_date = null;
            _cm_create_user = null;
            _cm_update_user = null;
            _cm_update_date = null;
            _cm_form4_country = null;
            _cm_form4_assessname = null;
            _cm_form4_assessdate = null;
            _cm_quality_store_property1 = null;
            _cm_quality_store_desc1 = null;
            _cm_quality_store_property2 = null;
            _cm_quality_store_desc2 = null;
            _cm_quality_store_property3 = null;
            _cm_quality_store_desc3 = null;
            _cm_quality_store_property4 = null;
            _cm_quality_store_desc4 = null;
            _cm_quality_store_property5 = null;
            _cm_quality_store_desc5 = null;
            _cm_quality_traceability_property1 = null;
            _cm_quality_traceability_desc1 = null;
            _cm_quality_traceability_property2 = null;
            _cm_quality_traceability_desc2 = null;
            _cm_quality_traceability_property3 = null;
            _cm_quality_traceability_desc3 = null;
            _cm_quality_traceability_property4 = null;
            _cm_quality_traceability_desc4 = null;
            _cm_quality_implanted_property1 = null;
            _cm_quality_implanted_desc1 = null;
            _cm_quality_maintain_property1 = null;
            _cm_quality_maintain_desc1 = null;
            _cm_quality_maintain_property2 = null;
            _cm_quality_maintain_desc2 = null;
            _cm_quality_complain_property1 = null;
            _cm_quality_complain_desc1 = null;
            _cm_quality_complain_property2 = null;
            _cm_quality_complain_desc2 = null;
            _cm_quality_complain_property3 = null;
            _cm_quality_complain_desc3 = null;
            _cm_quality_complain_property4 = null;
            _cm_quality_complain_desc4 = null;
            _cm_quality_dispose_property1 = null;
            _cm_quality_dispose_desc1 = null;
            _cm_quality_dispose_property2 = null;
            _cm_quality_dispose_desc2 = null;
            _cm_quality_dispose_property3 = null;
            _cm_quality_dispose_desc3 = null;
            _cm_quality_guard_property1 = null;
            _cm_quality_guard_desc1 = null;
            _cm_quality_guard_property2 = null;
            _cm_quality_guard_desc2 = null;
            _cm_quality_recall_property1 = null;
            _cm_quality_recall_desc1 = null;
            _cm_quality_recall_property2 = null;
            _cm_quality_recall_desc2 = null;
            _cm_quality_recall_property3 = null;
            _cm_quality_recall_desc3 = null;
            _cm_quality_recall_property4 = null;
            _cm_quality_recall_property5 = null;
            _cm_quality_recall_desc5 = null;
            _cm_quality_recall_property6 = null;
            _cm_quality_recall_desc6 = null;
            _cm_quality_example_property1 = null;
            _cm_quality_example_desc1 = null;
            _cm_quality_lable_property1 = null;
            _cm_quality_lable_desc1 = null;
            _cm_quality_train_property1 = null;
            _cm_quality_train_desc1 = null;
            _cm_quality_record_property1 = null;
            _cm_quality_record_desc1 = null;
            _cm_form1_check1 = null;
            _cm_form1_checkby1 = null;
            _cm_form1_check2 = null;
            _cm_form1_checkby2 = null;
            _cm_form1_check3 = null;
            _cm_form1_checkby3 = null;
            _cm_form1_check4 = null;
            _cm_form1_checkby4 = null;
            _cm_form1_check5 = null;
            _cm_form1_checkby5 = null;
            _cm_form1_check6 = null;
            _cm_form1_checkby6 = null;
            _cm_form1_check7 = null;
            _cm_form1_checkby7 = null;
            _cm_form5_username = null;
            _cm_form5_dealername = null;
            _cm_from3_bankname = null;
            _cm_from3_bankaddress = null;
            _cm_from3_bankaccount = null;
            _cm_from3_bankcountry = null;
            _cm_from3_bankswift = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties

        /// <summary>
        /// ID
        /// </summary>		
        public Guid CmId
        {
            get { return _cm_id; }
            set { _cm_id = value; }
        }

        /// <summary>
        /// DealerMaster ID
        /// </summary>		
        public Guid CmDmaId
        {
            get { return _cm_dma_id; }
            set { _cm_dma_id = value; }
        }

        /// <summary>
        /// 经销商中文名
        /// </summary>		
        public string CmDealerCnName
        {
            get { return _cm_dealer_cn_name; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmDealerCnName", value, value.ToString());

                _cm_dealer_cn_name = value;
            }
        }

        /// <summary>
        /// 经销商英文名
        /// </summary>		
        public string CmDealerEnName
        {
            get { return _cm_dealer_en_name; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CmDealerEnName", value, value.ToString());

                _cm_dealer_en_name = value;
            }
        }

        /// <summary>
        /// 许可证
        /// </summary>		
        public string CmCharter
        {
            get { return _cm_charter; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmCharter", value, value.ToString());

                _cm_charter = value;
            }
        }

        /// <summary>
        /// 地址
        /// </summary>		
        public string CmAddress
        {
            get { return _cm_address; }
            set
            {
                if (value != null && value.Length > 3000)
                    throw new ArgumentOutOfRangeException("Invalid value for CmAddress", value, value.ToString());

                _cm_address = value;
            }
        }

        /// <summary>
        /// 国家
        /// </summary>		
        public string CmCountry
        {
            get { return _cm_country; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CmCountry", value, value.ToString());

                _cm_country = value;
            }
        }

        /// <summary>
        /// 电话
        /// </summary>		
        public string CmTelephony
        {
            get { return _cm_telephony; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CmTelephony", value, value.ToString());

                _cm_telephony = value;
            }
        }

        /// <summary>
        /// 传真
        /// </summary>		
        public string CmFax
        {
            get { return _cm_fax; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFax", value, value.ToString());

                _cm_fax = value;
            }
        }

        /// <summary>
        /// 联系人
        /// </summary>		
        public string CmContactPerson
        {
            get { return _cm_contact_person; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmContactPerson", value, value.ToString());

                _cm_contact_person = value;
            }
        }

        /// <summary>
        /// 网址
        /// </summary>		
        public string CmWebsite
        {
            get { return _cm_website; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmWebsite", value, value.ToString());

                _cm_website = value;
            }
        }

        /// <summary>
        /// 电子邮件
        /// </summary>		
        public string CmEmail
        {
            get { return _cm_email; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmEmail", value, value.ToString());

                _cm_email = value;
            }
        }

        /// <summary>
        /// 是否上市
        /// </summary>		
        public bool? CmPubliclyTraded
        {
            get { return _cm_publicly_traded; }
            set { _cm_publicly_traded = value; }
        }

        /// <summary>
        /// 证交所
        /// </summary>		
        public string CmExchange
        {
            get { return _cm_exchange; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmExchange", value, value.ToString());

                _cm_exchange = value;
            }
        }

        /// <summary>
        /// 银行名称
        /// </summary>		
        public string CmBank
        {
            get { return _cm_bank; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmBank", value, value.ToString());

                _cm_bank = value;
            }
        }

        /// <summary>
        /// 银行—地址
        /// </summary>		
        public string CmBankAddress
        {
            get { return _cm_bank_address; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmBankAddress", value, value.ToString());

                _cm_bank_address = value;
            }
        }

        /// <summary>
        /// 银行—国家
        /// </summary>		
        public string CmBankCountry
        {
            get { return _cm_bank_country; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmBankCountry", value, value.ToString());

                _cm_bank_country = value;
            }
        }

        /// <summary>
        /// 银行—账号
        /// </summary>		
        public string CmBankAccount
        {
            get { return _cm_bank_account; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmBankAccount", value, value.ToString());

                _cm_bank_account = value;
            }
        }

        /// <summary>
        /// 银行—电汇
        /// </summary>		
        public string CmSwift
        {
            get { return _cm_swift; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for CmSwift", value, value.ToString());

                _cm_swift = value;
            }
        }

        /// <summary>
        /// 在过去五年中，公司或任一主要的高层人员、董事或股东是否涉及民事或刑事案件（轻微交通违规行为及家庭纠纷除外）？
        /// </summary>		
        public bool? CmProperty1
        {
            get { return _cm_property1; }
            set { _cm_property1 = value; }
        }

        /// <summary>
        /// CM_Desc1
        /// </summary>		
        public string CmDesc1
        {
            get { return _cm_desc1; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmDesc1", value, value.ToString());

                _cm_desc1 = value;
            }
        }

        /// <summary>
        /// 在过去五年中，公司或任一主要的高层人员、董事或股东是否涉及任何政府/监管机构的调查或行政案件或受到制裁？
        /// </summary>		
        public bool? CmProperty2
        {
            get { return _cm_property2; }
            set { _cm_property2 = value; }
        }

        /// <summary>
        /// CM_Desc3
        /// </summary>		
        public string CmDesc3
        {
            get { return _cm_desc3; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmDesc3", value, value.ToString());

                _cm_desc3 = value;
            }
        }

        /// <summary>
        /// 在过去五年中，公司或任一主要的高层人员、董事或股东是否申请或涉及任何与破产、无力偿债或重组相关的案件？
        /// </summary>		
        public bool? CmProperty3
        {
            get { return _cm_property3; }
            set { _cm_property3 = value; }
        }

        /// <summary>
        /// CM_Desc2
        /// </summary>		
        public string CmDesc2
        {
            get { return _cm_desc2; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmDesc2", value, value.ToString());

                _cm_desc2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc4
        /// </summary>		
        public string CmQualityRecallDesc4
        {
            get { return _cm_quality_recall_desc4; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc4", value, value.ToString());

                _cm_quality_recall_desc4 = value;
            }
        }

        /// <summary>
        /// 状态
        /// </summary>		
        public string CmStatus
        {
            get { return _cm_status; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CmStatus", value, value.ToString());

                _cm_status = value;
            }
        }

        /// <summary>
        /// 合同类型
        /// </summary>		
        public string CmType
        {
            get { return _cm_type; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CmType", value, value.ToString());

                _cm_type = value;
            }
        }

        /// <summary>
        /// 创建日期
        /// </summary>		
        public DateTime? CmCreateDate
        {
            get { return _cm_create_date; }
            set { _cm_create_date = value; }
        }

        /// <summary>
        /// 创建人
        /// </summary>		
        public Guid? CmCreateUser
        {
            get { return _cm_create_user; }
            set { _cm_create_user = value; }
        }

        /// <summary>
        /// 更新人
        /// </summary>		
        public Guid? CmUpdateUser
        {
            get { return _cm_update_user; }
            set { _cm_update_user = value; }
        }

        /// <summary>
        /// 更新日期
        /// </summary>		
        public DateTime? CmUpdateDate
        {
            get { return _cm_update_date; }
            set { _cm_update_date = value; }
        }

        /// <summary>
        /// 国家
        /// </summary>		
        public string CmForm4Country
        {
            get { return _cm_form4_country; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm4Country", value, value.ToString());

                _cm_form4_country = value;
            }
        }

        /// <summary>
        /// 评估员姓名
        /// </summary>		
        public string CmForm4AssessName
        {
            get { return _cm_form4_assessname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm4AssessName", value, value.ToString());

                _cm_form4_assessname = value;
            }
        }

        /// <summary>
        /// 评估时间
        /// </summary>		
        public DateTime? CmForm4AssessDate
        {
            get { return _cm_form4_assessdate; }
            set { _cm_form4_assessdate = value; }
        }

        /// <summary>
        /// 第三方是否能将产品储存在安全、清洁、无虫害的储存场所<br/>   0—否;1—是;2—不适用
        /// </summary>		
        public string CmQualityStoreProperty1
        {
            get { return _cm_quality_store_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreProperty1", value, value.ToString());

                _cm_quality_store_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Store_Desc1
        /// </summary>		
        public string CmQualityStoreDesc1
        {
            get { return _cm_quality_store_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreDesc1", value, value.ToString());

                _cm_quality_store_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能将产品储存在只有授权人员才能进入的波士顿产品专用储存场所<br/>   0—否;1—是;2—不适用
        /// </summary>		
        public string CmQualityStoreProperty2
        {
            get { return _cm_quality_store_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreProperty2", value, value.ToString());

                _cm_quality_store_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Store_Desc2
        /// </summary>		
        public string CmQualityStoreDesc2
        {
            get { return _cm_quality_store_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreDesc2", value, value.ToString());

                _cm_quality_store_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能保持产品标签上或厂商规定的环境条件<br/>   0—否;1—是;2—不适用
        /// </summary>		
        public string CmQualityStoreProperty3
        {
            get { return _cm_quality_store_property3; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreProperty3", value, value.ToString());

                _cm_quality_store_property3 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Store_Desc3
        /// </summary>		
        public string CmQualityStoreDesc3
        {
            get { return _cm_quality_store_desc3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreDesc3", value, value.ToString());

                _cm_quality_store_desc3 = value;
            }
        }

        /// <summary>
        /// 环境条件存在差异的，第三方是否能联系厂商寻求指导意见<br/>   0—否;1—是;2—不适用
        /// </summary>		
        public string CmQualityStoreProperty4
        {
            get { return _cm_quality_store_property4; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreProperty4", value, value.ToString());

                _cm_quality_store_property4 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Store_Desc4
        /// </summary>		
        public string CmQualityStoreDesc4
        {
            get { return _cm_quality_store_desc4; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreDesc4", value, value.ToString());

                _cm_quality_store_desc4 = value;
            }
        }

        /// <summary>
        /// 第三方是否能制定一个防止过效期、不合格产品和/或被隔离产品流向最终消费者的程序<br/>   0—否;1—是;2—不适用
        /// </summary>		
        public string CmQualityStoreProperty5
        {
            get { return _cm_quality_store_property5; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreProperty5", value, value.ToString());

                _cm_quality_store_property5 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Store_Desc5
        /// </summary>		
        public string CmQualityStoreDesc5
        {
            get { return _cm_quality_store_desc5; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityStoreDesc5", value, value.ToString());

                _cm_quality_store_desc5 = value;
            }
        }

        /// <summary>
        /// 第三方是否能罗列出一份完整的当前客户的名单（包括所有直接购买或寄售第三方公司产品的客户）
        /// </summary>		
        public string CmQualityTraceabilityProperty1
        {
            get { return _cm_quality_traceability_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityProperty1", value, value.ToString());

                _cm_quality_traceability_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Traceability_Desc1
        /// </summary>		
        public string CmQualityTraceabilityDesc1
        {
            get { return _cm_quality_traceability_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityDesc1", value, value.ToString());

                _cm_quality_traceability_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能保证记录以下追溯性数据（最低要求）？<br/>   ? 购买或寄售日期； <br/>   ? 植入/试图植入有源植入物及配件的日期；<br/>   ? 数量； <br/>   ? 型号（见产品标签）； <br/>   ? 批号和/或序列号（见产品标签）；<br/>   ? UPNs（见产品标签）。 
        /// </summary>		
        public string CmQualityTraceabilityProperty2
        {
            get { return _cm_quality_traceability_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityProperty2", value, value.ToString());

                _cm_quality_traceability_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Traceability_Desc2
        /// </summary>		
        public string CmQualityTraceabilityDesc2
        {
            get { return _cm_quality_traceability_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityDesc2", value, value.ToString());

                _cm_quality_traceability_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能保证记录并保管好程控仪和其他机器设备的位置及货品移动的可追溯记录？
        /// </summary>		
        public string CmQualityTraceabilityProperty3
        {
            get { return _cm_quality_traceability_property3; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityProperty3", value, value.ToString());

                _cm_quality_traceability_property3 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Traceability_Desc3
        /// </summary>		
        public string CmQualityTraceabilityDesc3
        {
            get { return _cm_quality_traceability_desc3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityDesc3", value, value.ToString());

                _cm_quality_traceability_desc3 = value;
            }
        }

        /// <summary>
        /// 第三方是否能做到已消费的寄售产品货帐一致?
        /// </summary>		
        public string CmQualityTraceabilityProperty4
        {
            get { return _cm_quality_traceability_property4; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityProperty4", value, value.ToString());

                _cm_quality_traceability_property4 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Traceability_Desc4
        /// </summary>		
        public string CmQualityTraceabilityDesc4
        {
            get { return _cm_quality_traceability_desc4; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTraceabilityDesc4", value, value.ToString());

                _cm_quality_traceability_desc4 = value;
            }
        }

        /// <summary>
        /// 第三方是否能及时向厂商提交所有有源植入医疗器械及其配件的植入注册表？
        /// </summary>		
        public string CmQualityImplantedProperty1
        {
            get { return _cm_quality_implanted_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityImplantedProperty1", value, value.ToString());

                _cm_quality_implanted_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Implanted_Desc1
        /// </summary>		
        public string CmQualityImplantedDesc1
        {
            get { return _cm_quality_implanted_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityImplantedDesc1", value, value.ToString());

                _cm_quality_implanted_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能让程控仪保持正常工作状态，及时将需维修的程控仪发回厂商维修？
        /// </summary>		
        public string CmQualityMaintainProperty1
        {
            get { return _cm_quality_maintain_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityMaintainProperty1", value, value.ToString());

                _cm_quality_maintain_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Maintain_Desc1
        /// </summary>		
        public string CmQualityMaintainDesc1
        {
            get { return _cm_quality_maintain_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityMaintainDesc1", value, value.ToString());

                _cm_quality_maintain_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能按厂商规定的时间框架，及时对程控仪或机器设备的软件进行更新？
        /// </summary>		
        public string CmQualityMaintainProperty2
        {
            get { return _cm_quality_maintain_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityMaintainProperty2", value, value.ToString());

                _cm_quality_maintain_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Maintain_Desc2
        /// </summary>		
        public string CmQualityMaintainDesc2
        {
            get { return _cm_quality_maintain_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityMaintainDesc2", value, value.ToString());

                _cm_quality_maintain_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能在两个工作日内将投诉信息上报给厂商？
        /// </summary>		
        public string CmQualityComplainProperty1
        {
            get { return _cm_quality_complain_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainProperty1", value, value.ToString());

                _cm_quality_complain_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Complain_Desc1
        /// </summary>		
        public string CmQualityComplainDesc1
        {
            get { return _cm_quality_complain_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainDesc1", value, value.ToString());

                _cm_quality_complain_desc1 = value;
            }
        }

        /// <summary>
        /// 需提供更多客户投诉信息时，第三方是否能履行至少三次尝试收集信息的行动并记录在案？
        /// </summary>		
        public string CmQualityComplainProperty2
        {
            get { return _cm_quality_complain_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainProperty2", value, value.ToString());

                _cm_quality_complain_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Complain_Desc2
        /// </summary>		
        public string CmQualityComplainDesc2
        {
            get { return _cm_quality_complain_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainDesc2", value, value.ToString());

                _cm_quality_complain_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能将被投诉产品发回厂商？
        /// </summary>		
        public string CmQualityComplainProperty3
        {
            get { return _cm_quality_complain_property3; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainProperty3", value, value.ToString());

                _cm_quality_complain_property3 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Complain_Desc3
        /// </summary>		
        public string CmQualityComplainDesc3
        {
            get { return _cm_quality_complain_desc3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainDesc3", value, value.ToString());

                _cm_quality_complain_desc3 = value;
            }
        }

        /// <summary>
        /// 如果客户表示产品可退回，但尚未退回，第三方是否能履行至少三次尝试收回产品的行动，并记录在案？
        /// </summary>		
        public string CmQualityComplainProperty4
        {
            get { return _cm_quality_complain_property4; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainProperty4", value, value.ToString());

                _cm_quality_complain_property4 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Complain_Desc4
        /// </summary>		
        public string CmQualityComplainDesc4
        {
            get { return _cm_quality_complain_desc4; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityComplainDesc4", value, value.ToString());

                _cm_quality_complain_desc4 = value;
            }
        }

        /// <summary>
        /// 第三方是否能使用生物危害控制包装退回有源植入医疗器械及其配件（因为这些产品在退回时，不进行净化或消毒处理），并落实相应的安全处理控制措施？
        /// </summary>		
        public string CmQualityDisposeProperty1
        {
            get { return _cm_quality_dispose_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeProperty1", value, value.ToString());

                _cm_quality_dispose_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Dispose_Desc1
        /// </summary>		
        public string CmQualityDisposeDesc1
        {
            get { return _cm_quality_dispose_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeDesc1", value, value.ToString());

                _cm_quality_dispose_desc1 = value;
            }
        }

        /// <summary>
        /// 针对其他非有源植入类医疗器械，第三方是否能将消毒证明和产品一起退回（即使产品尚未使用过），或用生物危害控制包装退回，并落实安全处理控制措施？
        /// </summary>		
        public string CmQualityDisposeProperty2
        {
            get { return _cm_quality_dispose_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeProperty2", value, value.ToString());

                _cm_quality_dispose_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Dispose_Desc2
        /// </summary>		
        public string CmQualityDisposeDesc2
        {
            get { return _cm_quality_dispose_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeDesc2", value, value.ToString());

                _cm_quality_dispose_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能按厂商的规定退回危险品？
        /// </summary>		
        public string CmQualityDisposeProperty3
        {
            get { return _cm_quality_dispose_property3; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeProperty3", value, value.ToString());

                _cm_quality_dispose_property3 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Dispose_Desc3
        /// </summary>		
        public string CmQualityDisposeDesc3
        {
            get { return _cm_quality_dispose_desc3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityDisposeDesc3", value, value.ToString());

                _cm_quality_dispose_desc3 = value;
            }
        }

        /// <summary>
        /// 第三方是否能在规定的时间内，将警戒事件或其他医疗器械的不良事件报告，上报给卫生部或有关当局？
        /// </summary>		
        public string CmQualityGuardProperty1
        {
            get { return _cm_quality_guard_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityGuardProperty1", value, value.ToString());

                _cm_quality_guard_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Guard_Desc1
        /// </summary>		
        public string CmQualityGuardDesc1
        {
            get { return _cm_quality_guard_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityGuardDesc1", value, value.ToString());

                _cm_quality_guard_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能在合理时间内，将当地有关警戒事件或其他医疗器械不良事件报告规定的变更，告知厂商？
        /// </summary>		
        public string CmQualityGuardProperty2
        {
            get { return _cm_quality_guard_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityGuardProperty2", value, value.ToString());

                _cm_quality_guard_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Guard_Desc2
        /// </summary>		
        public string CmQualityGuardDesc2
        {
            get { return _cm_quality_guard_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityGuardDesc2", value, value.ToString());

                _cm_quality_guard_desc2 = value;
            }
        }

        /// <summary>
        /// 在收到厂商的通知包后，第三方是否能立即实施召回和其他现场行动，并向厂商发出收到现场行动通知的确认函？
        /// </summary>		
        public string CmQualityRecallProperty1
        {
            get { return _cm_quality_recall_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty1", value, value.ToString());

                _cm_quality_recall_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc1
        /// </summary>		
        public string CmQualityRecallDesc1
        {
            get { return _cm_quality_recall_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc1", value, value.ToString());

                _cm_quality_recall_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能执行通知包中的指示，并确保在通知包规定的时限内实施有关行动？
        /// </summary>		
        public string CmQualityRecallProperty2
        {
            get { return _cm_quality_recall_property2; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty2", value, value.ToString());

                _cm_quality_recall_property2 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc2
        /// </summary>		
        public string CmQualityRecallDesc2
        {
            get { return _cm_quality_recall_desc2; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc2", value, value.ToString());

                _cm_quality_recall_desc2 = value;
            }
        }

        /// <summary>
        /// 第三方是否能从下列有关场所收回产品？<br/>   ? 第三方仓库存货<br/>   ? 厂商发给第三方的运输途中产品<br/>   ? 第三方销售代表存货<br/>   ? 客户场所：无论是出售、寄售产品还是样品
        /// </summary>		
        public string CmQualityRecallProperty3
        {
            get { return _cm_quality_recall_property3; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty3", value, value.ToString());

                _cm_quality_recall_property3 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc3
        /// </summary>		
        public string CmQualityRecallDesc3
        {
            get { return _cm_quality_recall_desc3; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc3", value, value.ToString());

                _cm_quality_recall_desc3 = value;
            }
        }

        /// <summary>
        /// 第三方是否能至少三次尝试记录客户已收到通知及执行厂商规定的行动？
        /// </summary>		
        public string CmQualityRecallProperty4
        {
            get { return _cm_quality_recall_property4; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty4", value, value.ToString());

                _cm_quality_recall_property4 = value;
            }
        }

        /// <summary>
        /// 完成所有产品回收行动后，第三方是否能用通知包中的确认表，向厂商报告召回的产品，并保证确认表上记录的产品数量与实际退回波士顿公司的产品数量一致？
        /// </summary>		
        public string CmQualityRecallProperty5
        {
            get { return _cm_quality_recall_property5; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty5", value, value.ToString());

                _cm_quality_recall_property5 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc5
        /// </summary>		
        public string CmQualityRecallDesc5
        {
            get { return _cm_quality_recall_desc5; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc5", value, value.ToString());

                _cm_quality_recall_desc5 = value;
            }
        }

        /// <summary>
        /// 第三方是否能按通知包中的指示，将产品退回厂商？
        /// </summary>		
        public string CmQualityRecallProperty6
        {
            get { return _cm_quality_recall_property6; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallProperty6", value, value.ToString());

                _cm_quality_recall_property6 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Recall_Desc6
        /// </summary>		
        public string CmQualityRecallDesc6
        {
            get { return _cm_quality_recall_desc6; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecallDesc6", value, value.ToString());

                _cm_quality_recall_desc6 = value;
            }
        }

        /// <summary>
        /// 第三方是否能确保仅将演示设备（未消毒，不得用于人体）用于演示，并不提供给最终客户？（不带电池的非功能性植入发生器，是唯一一种可向客户提供的演示设备）
        /// </summary>		
        public string CmQualityExampleProperty1
        {
            get { return _cm_quality_example_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityExampleProperty1", value, value.ToString());

                _cm_quality_example_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Example_Desc1
        /// </summary>		
        public string CmQualityExampleDesc1
        {
            get { return _cm_quality_example_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityExampleDesc1", value, value.ToString());

                _cm_quality_example_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能确保产品标识，完全符合当地法律要求？
        /// </summary>		
        public string CmQualityLableProperty1
        {
            get { return _cm_quality_lable_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityLableProperty1", value, value.ToString());

                _cm_quality_lable_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Lable_Desc1
        /// </summary>		
        public string CmQualityLableDesc1
        {
            get { return _cm_quality_lable_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityLableDesc1", value, value.ToString());

                _cm_quality_lable_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能让直接参与产品销售的雇员参加厂商的技术培训研习班，或在合理时间内组织他们进行经厂商批准的培训？
        /// </summary>		
        public string CmQualityTrainProperty1
        {
            get { return _cm_quality_train_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTrainProperty1", value, value.ToString());

                _cm_quality_train_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Train_Desc1
        /// </summary>		
        public string CmQualityTrainDesc1
        {
            get { return _cm_quality_train_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityTrainDesc1", value, value.ToString());

                _cm_quality_train_desc1 = value;
            }
        }

        /// <summary>
        /// 第三方是否能按以下要求保存与质量附件相关的所有记录？<br/>   - 植入器件：无限期<br/>   - 设备：退出分销后两年或厂商规定的其他期限<br/>   - 所有其他产品：至少产品使用寿命/有效期 + 两年或厂商规定的其他期限。
        /// </summary>		
        public string CmQualityRecordProperty1
        {
            get { return _cm_quality_record_property1; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecordProperty1", value, value.ToString());

                _cm_quality_record_property1 = value;
            }
        }

        /// <summary>
        /// CM_Quality_Record_Desc1
        /// </summary>		
        public string CmQualityRecordDesc1
        {
            get { return _cm_quality_record_desc1; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmQualityRecordDesc1", value, value.ToString());

                _cm_quality_record_desc1 = value;
            }
        }

        /// <summary>
        /// Form1.1 Check
        /// </summary>		
        public string CmForm1Check1
        {
            get { return _cm_form1_check1; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check1", value, value.ToString());

                _cm_form1_check1 = value;
            }
        }

        /// <summary>
        /// Form1.1 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy1
        {
            get { return _cm_form1_checkby1; }
            set { _cm_form1_checkby1 = value; }
        }

        /// <summary>
        /// Form1.2 Check
        /// </summary>		
        public string CmForm1Check2
        {
            get { return _cm_form1_check2; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check2", value, value.ToString());

                _cm_form1_check2 = value;
            }
        }

        /// <summary>
        /// Form1.2 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy2
        {
            get { return _cm_form1_checkby2; }
            set { _cm_form1_checkby2 = value; }
        }

        /// <summary>
        /// Form1.3 Check
        /// </summary>		
        public string CmForm1Check3
        {
            get { return _cm_form1_check3; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check3", value, value.ToString());

                _cm_form1_check3 = value;
            }
        }

        /// <summary>
        /// Form1.3 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy3
        {
            get { return _cm_form1_checkby3; }
            set { _cm_form1_checkby3 = value; }
        }

        /// <summary>
        /// Form1.4 Check
        /// </summary>		
        public string CmForm1Check4
        {
            get { return _cm_form1_check4; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check4", value, value.ToString());

                _cm_form1_check4 = value;
            }
        }

        /// <summary>
        /// Form1.4 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy4
        {
            get { return _cm_form1_checkby4; }
            set { _cm_form1_checkby4 = value; }
        }

        /// <summary>
        /// Form1.5 Check
        /// </summary>		
        public string CmForm1Check5
        {
            get { return _cm_form1_check5; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check5", value, value.ToString());

                _cm_form1_check5 = value;
            }
        }

        /// <summary>
        /// Form1.5 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy5
        {
            get { return _cm_form1_checkby5; }
            set { _cm_form1_checkby5 = value; }
        }

        /// <summary>
        /// Form1.6 Check
        /// </summary>		
        public string CmForm1Check6
        {
            get { return _cm_form1_check6; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check6", value, value.ToString());

                _cm_form1_check6 = value;
            }
        }

        /// <summary>
        /// Form1.6 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy6
        {
            get { return _cm_form1_checkby6; }
            set { _cm_form1_checkby6 = value; }
        }

        /// <summary>
        /// Form1.7 Check
        /// </summary>		
        public string CmForm1Check7
        {
            get { return _cm_form1_check7; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm1Check7", value, value.ToString());

                _cm_form1_check7 = value;
            }
        }

        /// <summary>
        /// Form1.7 Check By
        /// </summary>		
        public Guid? CmForm1CheckBy7
        {
            get { return _cm_form1_checkby7; }
            set { _cm_form1_checkby7 = value; }
        }

        /// <summary>
        /// 反腐败保证
        /// </summary>		
        public string CmForm5UserName
        {
            get { return _cm_form5_username; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm5UserName", value, value.ToString());

                _cm_form5_username = value;
            }
        }

        /// <summary>
        /// 反腐败保证
        /// </summary>		
        public string CmForm5DealerName
        {
            get { return _cm_form5_dealername; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CmForm5DealerName", value, value.ToString());

                _cm_form5_dealername = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CmFrom3BankName
        {
            get { return _cm_from3_bankname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFrom3BankName", value, value.ToString());

                _cm_from3_bankname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CmFrom3BankAddress
        {
            get { return _cm_from3_bankaddress; }
            set
            {
                if (value != null && value.Length > 1000)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFrom3BankAddress", value, value.ToString());

                _cm_from3_bankaddress = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CmFrom3BankAccount
        {
            get { return _cm_from3_bankaccount; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFrom3BankAccount", value, value.ToString());

                _cm_from3_bankaccount = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CmFrom3BankCountry
        {
            get { return _cm_from3_bankcountry; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFrom3BankCountry", value, value.ToString());

                _cm_from3_bankcountry = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string CmFrom3BankSwift
        {
            get { return _cm_from3_bankswift; }
            set
            {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for CmFrom3BankSwift", value, value.ToString());

                _cm_from3_bankswift = value;
            }
        }
        #endregion

    }
}
