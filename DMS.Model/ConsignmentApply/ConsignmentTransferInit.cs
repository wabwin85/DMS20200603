/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : ConsignmentTransferInit
 * Created Time: 2018/12/3 10:36:26
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	ConsignmentTransferInit
    /// </summary>
    [Serializable]
    public class ConsignmentTransferInit : BaseModel
    {
        #region Private Members 20

        private string _id;
        private string _dealercodeto;
        private string _dealeridto;
        private string _dealercodefrom;
        private string _dealeridfrom;
        private string _productlinename;
        private string _productlineid;
        private string _upn;
        private int? _qty;
        private string _contractno;
        private string _contractid;
        private string _hospitalcode;
        private string _hospitalname;
        private string _hospitalid;
        private string _remark;
        private int? _errflg;
        private string _errmassages;
        private string _inputuser;
        private DateTime? _inputdate;
        private int? _linenbr;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConsignmentTransferInit()
        {
            _id = null;
            _dealercodeto = null;
            _dealeridto = null;
            _dealercodefrom = null;
            _dealeridfrom = null;
            _productlinename = null;
            _productlineid = null;
            _upn = null;
            _qty = null;
            _contractno = null;
            _contractid = null;
            _hospitalcode = null;
            _hospitalname = null;
            _hospitalid = null;
            _remark = null;
            _errflg = null;
            _errmassages = null;
            _inputuser = null;
            _inputdate = null;
            _linenbr = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public string Id
        {
            get { return _id; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for Id", value, value.ToString());

                _id = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string DealerCodeTo
        {
            get { return _dealercodeto; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerCodeTo", value, value.ToString());

                _dealercodeto = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string DealerIdTo
        {
            get { return _dealeridto; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerIdTo", value, value.ToString());

                _dealeridto = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string DealerCodeFrom
        {
            get { return _dealercodefrom; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerCodeFrom", value, value.ToString());

                _dealercodefrom = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string DealerIdFrom
        {
            get { return _dealeridfrom; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for DealerIdFrom", value, value.ToString());

                _dealeridfrom = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductLineName
        {
            get { return _productlinename; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductLineName", value, value.ToString());

                _productlinename = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductLineId
        {
            get { return _productlineid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductLineId", value, value.ToString());

                _productlineid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Upn
        {
            get { return _upn; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Upn", value, value.ToString());

                _upn = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? Qty
        {
            get { return _qty; }
            set { _qty = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ContractNo
        {
            get { return _contractno; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ContractNo", value, value.ToString());

                _contractno = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ContractId
        {
            get { return _contractid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for ContractId", value, value.ToString());

                _contractid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalCode
        {
            get { return _hospitalcode; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalCode", value, value.ToString());

                _hospitalcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalName
        {
            get { return _hospitalname; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalName", value, value.ToString());

                _hospitalname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalId
        {
            get { return _hospitalid; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalId", value, value.ToString());

                _hospitalid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (value != null && value.Length > 1073741823)
                    throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());

                _remark = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? ErrFlg
        {
            get { return _errflg; }
            set { _errflg = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ErrMassages
        {
            get { return _errmassages; }
            set
            {
                if (value != null && value.Length > 2147483647)
                    throw new ArgumentOutOfRangeException("Invalid value for ErrMassages", value, value.ToString());

                _errmassages = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string InputUser
        {
            get { return _inputuser; }
            set
            {
                if (value != null && value.Length > 36)
                    throw new ArgumentOutOfRangeException("Invalid value for InputUser", value, value.ToString());

                _inputuser = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? InputDate
        {
            get { return _inputdate; }
            set { _inputdate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public int? LineNbr
        {
            get { return _linenbr; }
            set { _linenbr = value; }
        }




        #endregion

    }
}
