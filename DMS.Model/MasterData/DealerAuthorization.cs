/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : DealerAuthorization
 * Created Time: 2009-7-17 9:46:28
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	DealerAuthorizationTable
    /// </summary>
    [Serializable]
    public class DealerAuthorization : BaseModel
    {
        #region Private Members

        private Guid? _pma_id;
        private Guid? _id;
        private Guid? _dcl_id;
        private Guid? _dma_id;
        private Guid? _productline_bum_id;
        private string _authorizationtype;
        private string _hospitallistdesc;
        private string _productdescription;
        private DateTime? _startdate;
        private DateTime? _enddate;
        private string _type;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public DealerAuthorization()
        {
            _pma_id = null;
            _id = null;
            _dcl_id = null;
            _dma_id = null;
            _productline_bum_id = null;
            _authorizationtype = null;
            _hospitallistdesc = null;
            _productdescription = null;
            _startdate = null;
            _enddate = null;
            _type = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 被授权的产品代码
        /// </summary>		
        public Guid? PmaId
        {
            get { return _pma_id; }
            set { _pma_id = value; }
        }

        /// <summary>
        /// 授权行

        /// </summary>		
        public Guid? Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 合同
        /// </summary>		
        public Guid? DclId
        {
            get { return _dcl_id; }
            set { _dcl_id = value; }
        }

        /// <summary>
        /// 经销商

        /// </summary>		
        public Guid? DmaId
        {
            get { return _dma_id; }
            set { _dma_id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? ProductLineBumId
        {
            get { return _productline_bum_id; }
            set { _productline_bum_id = value; }
        }

        /// <summary>
        /// 授权方式
        /// </summary>		
        public string AuthorizationType
        {
            get { return _authorizationtype; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for AuthorizationType", value, value.ToString());

                _authorizationtype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string HospitalListDesc
        {
            get { return _hospitallistdesc; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for HospitalListDesc", value, value.ToString());

                _hospitallistdesc = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ProductDescription
        {
            get { return _productdescription; }
            set
            {
                if (value != null && value.Length > 200)
                    throw new ArgumentOutOfRangeException("Invalid value for ProductDescription", value, value.ToString());

                _productdescription = value;
            }
        }

        /// <summary>
        /// 授权开始时间（不再根据合同授权时间做权限控制）
        /// </summary>		
        public DateTime? StartDate
        {
            get { return _startdate; }
            set { _startdate = value; }
        }

        /// <summary>
        /// 授权终止时间（不再根据合同授权时间做权限控制）
        /// </summary>		
        public DateTime? EndDate
        {
            get { return _enddate; }
            set { _enddate = value; }
        }

        /// <summary>
        /// 授权类型
        /// </summary>		
        public string Type
        {
            get { return _type; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Type", value, value.ToString());

                _type = value;
            }
        }

        /// <summary>
        /// 授权开始时间（查询条件）
        /// </summary>		
        public DateTime? AuthStartBeginDate
        {
            get;
            set;
        }

        /// <summary>
        /// 授权终止时间（查询条件）
        /// </summary>		
        public DateTime? AuthStartEndDate
        {
            get;
            set;
        }

        /// <summary>
        /// 授权终止开始时间（查询条件）
        /// </summary>		
        public DateTime? AuthStopBeginDate
        {
            get;
            set;
        }

        /// <summary>
        /// 授权终止结束时间（查询条件）
        /// </summary>		
        public DateTime? AuthStopEndDate
        {
            get;
            set;
        }

        #endregion





    }
}
