/*
 * Ibatis.Net for Data Mapper, and Generated by MyGeneration
 * 
 * NameSpace   : DMS.Model 
 * ClassName   : PoReceiptHeader
 * Created Time: 2009-7-24 13:08:53
 *
 ******* Copyright (C) 2009/2010 - GrapeCity **********
 *
******************************************************/

using System;

namespace DMS.Model
{
    /// <summary>
    ///	PoReceiptHeader
    /// </summary>
    [Serializable]
    public class PoReceiptHeader : BaseModel
    {
        #region Private Members

        private Guid _id;
        private string _ponumber;
        private string _sapshipmentid;
        private Guid _dealer_dma_id;
        private DateTime? _receiptdate = null;
        private DateTime? _sapshipmentdate = null;
        private string _status;
        private Guid _vendor_dma_id;
        private string _type;
        private Guid? _productline_bum_id;
        private string _purchaseOrderNbr;
        private Guid? _receipt_usr_userID;
        private string _carrier;
        private string _trackingno;
        private string _shiptype;
        private string _note;
        private DateTime? _arrivaldate;
        private DateTime? _deliverydate;
        private DateTime? _sapdeliverydate;
        private Guid? _whm_id;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public PoReceiptHeader()
        {
            _id = new Guid();
            _ponumber = null;
            _sapshipmentid = null;
            _dealer_dma_id = new Guid();
            _status = null;
            _vendor_dma_id = new Guid();
            _type = null;
            _productline_bum_id = null;
            _purchaseOrderNbr = null;
            _receipt_usr_userID = null;
            _carrier = null;
            _trackingno = null;
            _shiptype = null;
            _note = null;
            _arrivaldate = null;
            _deliverydate = null;
            _sapdeliverydate = null;
            _whm_id = null;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 采购接收单

        /// </summary>		
        public Guid Id
        {
            get { return _id; }
            set { _id = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string PoNumber
        {
            get { return _ponumber; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for PoNumber", value, value.ToString());

                _ponumber = value;
            }
        }

        /// <summary>
        /// 发货单号
        /// </summary>		
        public string SapShipmentid
        {
            get { return _sapshipmentid; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for SapShipmentid", value, value.ToString());

                _sapshipmentid = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid DealerDmaId
        {
            get { return _dealer_dma_id; }
            set { _dealer_dma_id = value; }
        }

        /// <summary>
        /// 接收日期
        /// </summary>		
        public DateTime? ReceiptDate
        {
            get { return _receiptdate; }
            set { _receiptdate = value; }
        }

        /// <summary>
        /// SAP中的销售单的发货日期

        /// </summary>		
        public DateTime? SapShipmentDate
        {
            get { return _sapshipmentdate; }
            set { _sapshipmentdate = value; }
        }

        /// <summary>
        /// 采购接收状态

        /// </summary>		
        public string Status
        {
            get { return _status; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());

                _status = value;
            }
        }

        /// <summary>
        /// 经销商

        /// </summary>		
        public Guid VendorDmaId
        {
            get { return _vendor_dma_id; }
            set { _vendor_dma_id = value; }
        }

        /// <summary>
        /// 入库单类别

        /// </summary>		
        public string Type
        {
            get { return _type; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Type", value, value.ToString());

                _type = value;
            }
        }


        public Guid? ProductLineBumId
        {
            get { return _productline_bum_id; }
            set { _productline_bum_id = value; }
        }

        public string PurchaseOrderNbr
        {
            get { return _purchaseOrderNbr; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for purchase order number", value, value.ToString());

                _purchaseOrderNbr = value;
            }
        }

        public Guid? ReceiptUsrUserID
        {
            get { return _receipt_usr_userID; }
            set { _receipt_usr_userID = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Carrier
        {
            get { return _carrier; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Carrier", value, value.ToString());

                _carrier = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string TrackingNo
        {
            get { return _trackingno; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for TrackingNo", value, value.ToString());

                _trackingno = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string ShipType
        {
            get { return _shiptype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ShipType", value, value.ToString());

                _shiptype = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public string Note
        {
            get { return _note; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Note", value, value.ToString());

                _note = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? ArrivalDate
        {
            get { return _arrivaldate; }
            set { _arrivaldate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? DeliveryDate
        {
            get { return _deliverydate; }
            set { _deliverydate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public DateTime? SapDeliveryDate
        {
            get { return _sapdeliverydate; }
            set { _sapdeliverydate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public Guid? WhmId
        {
            get { return _whm_id; }
            set { _whm_id = value; }
        }

        /// <summary>
        /// 读取仓库名称
        /// </summary>
        public string WHMName
        {
            get;
            set;
        }

        /// <summary>
        /// 读取发货仓库名称
        /// </summary>
        public string FromWHMName
        {
            get;
            set;
        }
        #endregion





    }
}
